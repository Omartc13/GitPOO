/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Framesregis;


import CGen.Generico1;
import Clases.CAPExterno;
import Clases.CAPInterno;
import Clases.IntDAdministrador;
import Clases.IntDEmpleado;
import conexionbd.Conexion;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author OmarTc
 */
public class FramePrincipal extends javax.swing.JFrame {
        Conexion db= new Conexion();
        Connection cn=  db.conectar();
        DefaultTableModel tusuario = new DefaultTableModel();
        
        DefaultTableModel tadmin = new DefaultTableModel();
        DefaultTableModel temple = new DefaultTableModel();
        
        DefaultTableModel tHigiene = new DefaultTableModel();
        DefaultTableModel tComida = new DefaultTableModel();
        DefaultTableModel tMakeup = new DefaultTableModel();
        
        DefaultTableModel tinterno = new DefaultTableModel();
        DefaultTableModel texterno = new DefaultTableModel();
        
        DefaultTableModel tprincipal = new DefaultTableModel();
        DefaultTableModel tprovincia = new DefaultTableModel();
        
    /**
     * Creates new form FramePrincipal
     */
    public FramePrincipal() {
        
        initComponents();
        
        PanelAd.setVisible(false);
        PanelEm.setVisible(false);
        
        PanelHigiene.setVisible(false);
        PanelComes.setVisible(false);
        PanelMake.setVisible(false);
        
        PanelProvInterno.setVisible(false);
        PanelProvExter.setVisible(false);
        
        PanelSucPri.setVisible(false);
        PanelSucProv.setVisible(false);
        
        PaneleFiltroAd.setVisible(false);
        PanelFilEmple.setVisible(false);
        
        PanelFilhigi.setVisible(false);
        PanelFilComes.setVisible(false);
        PanelFilMake.setVisible(false);
        
        PanelFilProvInt.setVisible(false);
        PanelFilProvEx.setVisible(false);
        
        PanelFilSucPri.setVisible(false);
        PanelFilSucPro.setVisible(false);
        
        mostrartableusu();
    }
    
    
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jPanel12 = new javax.swing.JPanel();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel7 = new javax.swing.JPanel();
        cmtipoemplea = new javax.swing.JComboBox<>();
        PanelPri = new javax.swing.JPanel();
        PanelAd = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jButton7 = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        txtBuscDniAd = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtBusNamAd = new javax.swing.JTextField();
        txtBusApeAd = new javax.swing.JTextField();
        txtBuscAniAd = new javax.swing.JTextField();
        jSeparator5 = new javax.swing.JSeparator();
        jSeparator6 = new javax.swing.JSeparator();
        jSeparator7 = new javax.swing.JSeparator();
        jSeparator8 = new javax.swing.JSeparator();
        jLabel13 = new javax.swing.JLabel();
        jLabel72 = new javax.swing.JLabel();
        jcomboEmpleadSuel = new javax.swing.JComboBox<>();
        jcomboEmpleadoadAfi = new javax.swing.JComboBox<>();
        jSeparator9 = new javax.swing.JSeparator();
        jSeparator63 = new javax.swing.JSeparator();
        butEliEmpAd = new javax.swing.JButton();
        PanelEm = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        txtBusdniEm = new javax.swing.JTextField();
        txtBusnameEm = new javax.swing.JTextField();
        txtBuscapeEm = new javax.swing.JTextField();
        jButton8 = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        jSeparator4 = new javax.swing.JSeparator();
        jLabel14 = new javax.swing.JLabel();
        btnEditarEmple = new javax.swing.JButton();
        jcomboTipoEm = new javax.swing.JComboBox<>();
        jSeparator62 = new javax.swing.JSeparator();
        butEliEmp = new javax.swing.JButton();
        jPanel9 = new javax.swing.JPanel();
        cmbProductos = new javax.swing.JComboBox<>();
        PanelPrinPro = new javax.swing.JPanel();
        PanelHigiene = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jButton6 = new javax.swing.JButton();
        jLabel23 = new javax.swing.JLabel();
        txtBuscCodHigi = new javax.swing.JTextField();
        txtBuscNomHigi = new javax.swing.JTextField();
        txtBuscContHigi = new javax.swing.JTextField();
        txtBuscPrecHigi = new javax.swing.JTextField();
        jSeparator10 = new javax.swing.JSeparator();
        txtBuscCodProHigi = new javax.swing.JTextField();
        txtBuscTipoHigi = new javax.swing.JTextField();
        txtBuscStockHigi = new javax.swing.JTextField();
        jSeparator11 = new javax.swing.JSeparator();
        jSeparator12 = new javax.swing.JSeparator();
        jSeparator13 = new javax.swing.JSeparator();
        jSeparator14 = new javax.swing.JSeparator();
        jSeparator15 = new javax.swing.JSeparator();
        jSeparator16 = new javax.swing.JSeparator();
        jSeparator17 = new javax.swing.JSeparator();
        jSeparator18 = new javax.swing.JSeparator();
        jcomboTipoFabHigi = new javax.swing.JComboBox<>();
        btnEditarHigi = new javax.swing.JButton();
        butEliProdHigi = new javax.swing.JButton();
        PanelComes = new javax.swing.JPanel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        jButton9 = new javax.swing.JButton();
        jSeparator19 = new javax.swing.JSeparator();
        txtBuscCadComes = new javax.swing.JTextField();
        jSeparator20 = new javax.swing.JSeparator();
        jSeparator22 = new javax.swing.JSeparator();
        jSeparator24 = new javax.swing.JSeparator();
        jSeparator25 = new javax.swing.JSeparator();
        jSeparator26 = new javax.swing.JSeparator();
        jSeparator27 = new javax.swing.JSeparator();
        txtBuscCodComes = new javax.swing.JTextField();
        txtBuscNomComes = new javax.swing.JTextField();
        txtBuscCodProdComes = new javax.swing.JTextField();
        txtBuscPrecComes = new javax.swing.JTextField();
        txtBuscStockComes = new javax.swing.JTextField();
        jcombTipoProComes = new javax.swing.JComboBox<>();
        jSeparator29 = new javax.swing.JSeparator();
        btnEditarProComes = new javax.swing.JButton();
        butEliProdComes = new javax.swing.JButton();
        PanelMake = new javax.swing.JPanel();
        jLabel28 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        jButton10 = new javax.swing.JButton();
        txtBuscCodMake = new javax.swing.JTextField();
        txtBuscNomMake = new javax.swing.JTextField();
        txtBuscTonosMake = new javax.swing.JTextField();
        txtBuscPreMake = new javax.swing.JTextField();
        jSeparator21 = new javax.swing.JSeparator();
        txtBuscCodProMake = new javax.swing.JTextField();
        txtBuscTipoMake = new javax.swing.JTextField();
        txtBuscStockMake = new javax.swing.JTextField();
        jSeparator28 = new javax.swing.JSeparator();
        jSeparator30 = new javax.swing.JSeparator();
        jSeparator31 = new javax.swing.JSeparator();
        jSeparator32 = new javax.swing.JSeparator();
        jSeparator33 = new javax.swing.JSeparator();
        jSeparator34 = new javax.swing.JSeparator();
        jSeparator35 = new javax.swing.JSeparator();
        jcomboTipoFaProMake = new javax.swing.JComboBox<>();
        jLabel73 = new javax.swing.JLabel();
        jLabel74 = new javax.swing.JLabel();
        jSeparator64 = new javax.swing.JSeparator();
        txtBuscDigparakMake = new javax.swing.JTextField();
        jSeparator65 = new javax.swing.JSeparator();
        btnEditarProMake = new javax.swing.JButton();
        butEliProdMake = new javax.swing.JButton();
        jPanel10 = new javax.swing.JPanel();
        cmbTipoProv = new javax.swing.JComboBox<>();
        PanelprinProvedores = new javax.swing.JPanel();
        PanelProvInterno = new javax.swing.JPanel();
        jLabel42 = new javax.swing.JLabel();
        jLabel43 = new javax.swing.JLabel();
        jLabel44 = new javax.swing.JLabel();
        txtBuscDniProvInt = new javax.swing.JTextField();
        jSeparator36 = new javax.swing.JSeparator();
        txtBusNamProvint = new javax.swing.JTextField();
        jSeparator37 = new javax.swing.JSeparator();
        jButton11 = new javax.swing.JButton();
        jLabel45 = new javax.swing.JLabel();
        jcomboAreaProvInt = new javax.swing.JComboBox<>();
        jSeparator66 = new javax.swing.JSeparator();
        btnEditarProvInt = new javax.swing.JButton();
        butEliProvInt = new javax.swing.JButton();
        PanelProvExter = new javax.swing.JPanel();
        jLabel46 = new javax.swing.JLabel();
        txtBuscGerProEX = new javax.swing.JTextField();
        jSeparator39 = new javax.swing.JSeparator();
        jLabel47 = new javax.swing.JLabel();
        jLabel48 = new javax.swing.JLabel();
        txtBuscAniProvEx = new javax.swing.JTextField();
        jSeparator40 = new javax.swing.JSeparator();
        jButton12 = new javax.swing.JButton();
        jLabel50 = new javax.swing.JLabel();
        txtBuscCorrProEx = new javax.swing.JTextField();
        jSeparator42 = new javax.swing.JSeparator();
        txtBuscNomEmProvEx = new javax.swing.JTextField();
        jSeparator43 = new javax.swing.JSeparator();
        jLabel51 = new javax.swing.JLabel();
        txtBuscRucProvEx = new javax.swing.JTextField();
        jLabel52 = new javax.swing.JLabel();
        jSeparator44 = new javax.swing.JSeparator();
        jSeparator45 = new javax.swing.JSeparator();
        txtBuscTelfProvEx = new javax.swing.JTextField();
        jLabel53 = new javax.swing.JLabel();
        jLabel54 = new javax.swing.JLabel();
        txtBuscDirProEx = new javax.swing.JTextField();
        jSeparator46 = new javax.swing.JSeparator();
        jSeparator47 = new javax.swing.JSeparator();
        btnEditarProvExt = new javax.swing.JButton();
        butEliProvExt = new javax.swing.JButton();
        jPanel11 = new javax.swing.JPanel();
        cmbtipoSucursal = new javax.swing.JComboBox<>();
        PanelPrinSucursales = new javax.swing.JPanel();
        PanelSucPri = new javax.swing.JPanel();
        jLabel49 = new javax.swing.JLabel();
        txtBusDistSucPri = new javax.swing.JTextField();
        jSeparator41 = new javax.swing.JSeparator();
        txtBuscDirSucPri = new javax.swing.JTextField();
        jLabel55 = new javax.swing.JLabel();
        jLabel56 = new javax.swing.JLabel();
        jLabel57 = new javax.swing.JLabel();
        txtBusEncSucPri = new javax.swing.JTextField();
        jSeparator48 = new javax.swing.JSeparator();
        txtBustelfSucPri = new javax.swing.JTextField();
        jSeparator49 = new javax.swing.JSeparator();
        jLabel58 = new javax.swing.JLabel();
        jLabel59 = new javax.swing.JLabel();
        txtBuscDniSucPri = new javax.swing.JTextField();
        jSeparator50 = new javax.swing.JSeparator();
        jButton13 = new javax.swing.JButton();
        jSeparator51 = new javax.swing.JSeparator();
        jLabel60 = new javax.swing.JLabel();
        txtBuscNSucPri = new javax.swing.JTextField();
        jSeparator53 = new javax.swing.JSeparator();
        btnEditarSucPri = new javax.swing.JButton();
        butEliSucPri = new javax.swing.JButton();
        PanelSucProv = new javax.swing.JPanel();
        jLabel63 = new javax.swing.JLabel();
        jLabel64 = new javax.swing.JLabel();
        jLabel65 = new javax.swing.JLabel();
        jLabel66 = new javax.swing.JLabel();
        jLabel67 = new javax.swing.JLabel();
        jLabel68 = new javax.swing.JLabel();
        jLabel69 = new javax.swing.JLabel();
        jLabel70 = new javax.swing.JLabel();
        jButton14 = new javax.swing.JButton();
        txtBuscNSucProv = new javax.swing.JTextField();
        txtBuscCodProSucProv = new javax.swing.JTextField();
        txtBuscDNISucProv = new javax.swing.JTextField();
        txtBuscDireproSucProv = new javax.swing.JTextField();
        jSeparator52 = new javax.swing.JSeparator();
        txtBuscTelSucProv = new javax.swing.JTextField();
        txtBuscProvSucProv = new javax.swing.JTextField();
        txtBuscCiudproSucProv = new javax.swing.JTextField();
        txtBuscEncSucProv = new javax.swing.JTextField();
        jSeparator54 = new javax.swing.JSeparator();
        jSeparator55 = new javax.swing.JSeparator();
        jSeparator56 = new javax.swing.JSeparator();
        jSeparator57 = new javax.swing.JSeparator();
        jSeparator58 = new javax.swing.JSeparator();
        jSeparator59 = new javax.swing.JSeparator();
        jSeparator60 = new javax.swing.JSeparator();
        jSeparator61 = new javax.swing.JSeparator();
        jLabel61 = new javax.swing.JLabel();
        btnEditarSucPro = new javax.swing.JButton();
        butEliSucpro = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jButton15 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblusuario = new javax.swing.JTable();
        jPanel13 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel40 = new javax.swing.JLabel();
        jButton16 = new javax.swing.JButton();
        jPanel14 = new javax.swing.JPanel();
        jPanel15 = new javax.swing.JPanel();
        jTabbedPane3 = new javax.swing.JTabbedPane();
        jPanel16 = new javax.swing.JPanel();
        jcomFiltEmple = new javax.swing.JComboBox<>();
        PanelFilEmple = new javax.swing.JPanel();
        jPanel20 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblordEmple = new javax.swing.JTable();
        jLabel41 = new javax.swing.JLabel();
        jcomOrdEmple = new javax.swing.JComboBox<>();
        PaneleFiltroAd = new javax.swing.JPanel();
        jcomOrdEmplead = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jPanel21 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblOrdEmpAd = new javax.swing.JTable();
        jPanel17 = new javax.swing.JPanel();
        jcomFiltProduc = new javax.swing.JComboBox<>();
        PanelFilMake = new javax.swing.JPanel();
        jLabel75 = new javax.swing.JLabel();
        jcomOrdMake = new javax.swing.JComboBox<>();
        jPanel24 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        tblordProdMake = new javax.swing.JTable();
        PanelFilComes = new javax.swing.JPanel();
        jLabel71 = new javax.swing.JLabel();
        jcomOrdComes = new javax.swing.JComboBox<>();
        jPanel23 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        tblordProdComes = new javax.swing.JTable();
        PanelFilhigi = new javax.swing.JPanel();
        jLabel62 = new javax.swing.JLabel();
        jcomOrdHigi = new javax.swing.JComboBox<>();
        jPanel22 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblordProdHigi = new javax.swing.JTable();
        jPanel18 = new javax.swing.JPanel();
        jcomFiltProve = new javax.swing.JComboBox<>();
        PanelFilProvEx = new javax.swing.JPanel();
        jLabel77 = new javax.swing.JLabel();
        jcomOrdProvExt = new javax.swing.JComboBox<>();
        jPanel26 = new javax.swing.JPanel();
        jScrollPane9 = new javax.swing.JScrollPane();
        tblordProvEx = new javax.swing.JTable();
        PanelFilProvInt = new javax.swing.JPanel();
        jLabel76 = new javax.swing.JLabel();
        jcomOrdProvIn = new javax.swing.JComboBox<>();
        jPanel25 = new javax.swing.JPanel();
        jScrollPane7 = new javax.swing.JScrollPane();
        tblordProvInt = new javax.swing.JTable();
        jPanel19 = new javax.swing.JPanel();
        jcomFiltSucur = new javax.swing.JComboBox<>();
        PanelFilSucPri = new javax.swing.JPanel();
        jLabel78 = new javax.swing.JLabel();
        jcomOrdSucPri = new javax.swing.JComboBox<>();
        jPanel27 = new javax.swing.JPanel();
        jScrollPane8 = new javax.swing.JScrollPane();
        tblordSucPri = new javax.swing.JTable();
        PanelFilSucPro = new javax.swing.JPanel();
        jLabel79 = new javax.swing.JLabel();
        jcomOrdSucProv = new javax.swing.JComboBox<>();
        jPanel28 = new javax.swing.JPanel();
        jScrollPane11 = new javax.swing.JScrollPane();
        tblordSucProv = new javax.swing.JTable();

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(204, 255, 255));
        setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel5.setBackground(new java.awt.Color(175, 211, 226));
        jPanel5.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTabbedPane1.setBackground(new java.awt.Color(246, 241, 241));
        jTabbedPane1.setForeground(new java.awt.Color(0, 0, 0));
        jTabbedPane1.setTabPlacement(javax.swing.JTabbedPane.LEFT);
        jTabbedPane1.setAlignmentX(2.0F);
        jTabbedPane1.setAlignmentY(2.0F);
        jTabbedPane1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jTabbedPane1.setFont(new java.awt.Font("Perpetua Titling MT", 1, 14)); // NOI18N

        jPanel3.setBackground(new java.awt.Color(20, 108, 148));
        jPanel3.setForeground(new java.awt.Color(0, 0, 0));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel8.setBackground(new java.awt.Color(25, 167, 206));
        jPanel8.setForeground(new java.awt.Color(0, 0, 0));
        jPanel8.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton1.setBackground(new java.awt.Color(246, 241, 241));
        jButton1.setFont(new java.awt.Font("Serif", 1, 18)); // NOI18N
        jButton1.setForeground(new java.awt.Color(0, 0, 0));
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/ImageEmple.png"))); // NOI18N
        jButton1.setText("  REGRISTRO EMPLEADOS");
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel8.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 100, 330, 80));

        jButton2.setBackground(new java.awt.Color(246, 241, 241));
        jButton2.setFont(new java.awt.Font("Serif", 1, 18)); // NOI18N
        jButton2.setForeground(new java.awt.Color(0, 0, 0));
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/ImageProduc.png"))); // NOI18N
        jButton2.setText("  REGISTRO PRODUCTOS");
        jButton2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel8.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 200, 330, 80));

        jButton3.setBackground(new java.awt.Color(246, 241, 241));
        jButton3.setFont(new java.awt.Font("Serif", 1, 18)); // NOI18N
        jButton3.setForeground(new java.awt.Color(0, 0, 0));
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/ImageProve.png"))); // NOI18N
        jButton3.setText("  REGISTRO PROVEEDORES");
        jButton3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel8.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 300, 330, 80));

        jButton4.setBackground(new java.awt.Color(246, 241, 241));
        jButton4.setFont(new java.awt.Font("Serif", 1, 18)); // NOI18N
        jButton4.setForeground(new java.awt.Color(0, 0, 0));
        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/ImageSuc.png"))); // NOI18N
        jButton4.setText("  REGISTRO SUCURSALES");
        jButton4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel8.add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 400, 330, 80));

        jTextField1.setEditable(false);
        jTextField1.setBackground(new java.awt.Color(0, 0, 0));
        jTextField1.setFont(new java.awt.Font("Stencil", 2, 48)); // NOI18N
        jTextField1.setForeground(new java.awt.Color(246, 241, 241));
        jTextField1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField1.setText("Registros");
        jPanel8.add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 590, 70));

        jPanel3.add(jPanel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 590, 550));

        jTabbedPane1.addTab("REgiSTRO", jPanel3);

        jPanel4.setBackground(new java.awt.Color(20, 108, 148));
        jPanel4.setForeground(new java.awt.Color(0, 0, 0));
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel12.setBackground(new java.awt.Color(25, 167, 206));
        jPanel12.setForeground(new java.awt.Color(0, 0, 0));
        jPanel12.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTabbedPane2.setBackground(new java.awt.Color(246, 241, 241));
        jTabbedPane2.setForeground(new java.awt.Color(0, 0, 0));

        jPanel7.setBackground(new java.awt.Color(25, 167, 206));
        jPanel7.setForeground(new java.awt.Color(0, 0, 0));
        jPanel7.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        cmtipoemplea.setBackground(new java.awt.Color(246, 241, 241));
        cmtipoemplea.setForeground(new java.awt.Color(0, 0, 0));
        cmtipoemplea.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--Seleccionar--", "Administrador", "Empleado" }));
        cmtipoemplea.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmtipoempleaItemStateChanged(evt);
            }
        });
        cmtipoemplea.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmtipoempleaActionPerformed(evt);
            }
        });
        jPanel7.add(cmtipoemplea, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, -1, 30));

        PanelPri.setBackground(new java.awt.Color(25, 167, 206));
        PanelPri.setForeground(new java.awt.Color(0, 0, 0));
        PanelPri.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        PanelAd.setBackground(new java.awt.Color(246, 241, 241));
        PanelAd.setForeground(new java.awt.Color(0, 0, 0));
        PanelAd.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel4.setFont(new java.awt.Font("Serif", 1, 20)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("DNI:");
        PanelAd.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 90, 150, -1));

        jButton7.setBackground(new java.awt.Color(246, 241, 241));
        jButton7.setFont(new java.awt.Font("Serif", 1, 14)); // NOI18N
        jButton7.setForeground(new java.awt.Color(0, 0, 0));
        jButton7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/64673 1.png"))); // NOI18N
        jButton7.setText("Consultar");
        jButton7.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        PanelAd.add(jButton7, new org.netbeans.lib.awtextra.AbsoluteConstraints(395, 380, 140, 40));

        btnEditar.setBackground(new java.awt.Color(246, 241, 241));
        btnEditar.setFont(new java.awt.Font("Serif", 1, 14)); // NOI18N
        btnEditar.setForeground(new java.awt.Color(0, 0, 0));
        btnEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/5854505 1.png"))); // NOI18N
        btnEditar.setText("Editar");
        btnEditar.setActionCommand(" Editar");
        btnEditar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });
        PanelAd.add(btnEditar, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 380, 110, 40));

        txtBuscDniAd.setBackground(new java.awt.Color(246, 241, 241));
        txtBuscDniAd.setForeground(new java.awt.Color(0, 0, 0));
        txtBuscDniAd.setBorder(null);
        PanelAd.add(txtBuscDniAd, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 80, 340, 30));

        jLabel5.setFont(new java.awt.Font("Serif", 1, 20)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 0));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Nombre:");
        jLabel5.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        PanelAd.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 140, 150, -1));

        jLabel6.setFont(new java.awt.Font("Serif", 1, 20)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 0, 0));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Apellidos:");
        PanelAd.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 190, 150, -1));

        jLabel7.setFont(new java.awt.Font("Serif", 1, 20)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 0, 0));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Afiliacion:");
        PanelAd.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 250, 100, -1));

        jLabel8.setFont(new java.awt.Font("Serif", 1, 20)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 0, 0));
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("Año de Ingreso:");
        PanelAd.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 300, 170, -1));

        txtBusNamAd.setBackground(new java.awt.Color(246, 241, 241));
        txtBusNamAd.setForeground(new java.awt.Color(0, 0, 0));
        txtBusNamAd.setBorder(null);
        PanelAd.add(txtBusNamAd, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 130, 340, 30));

        txtBusApeAd.setBackground(new java.awt.Color(246, 241, 241));
        txtBusApeAd.setForeground(new java.awt.Color(0, 0, 0));
        txtBusApeAd.setBorder(null);
        PanelAd.add(txtBusApeAd, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 180, 340, 30));

        txtBuscAniAd.setBackground(new java.awt.Color(246, 241, 241));
        txtBuscAniAd.setForeground(new java.awt.Color(0, 0, 0));
        txtBuscAniAd.setBorder(null);
        PanelAd.add(txtBuscAniAd, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 300, 340, 30));
        PanelAd.add(jSeparator5, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 280, 100, 10));
        PanelAd.add(jSeparator6, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 110, 340, 10));
        PanelAd.add(jSeparator7, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 210, 340, 10));
        PanelAd.add(jSeparator8, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 330, 340, 10));

        jLabel13.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(0, 0, 0));
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/2942813 1.png"))); // NOI18N
        jLabel13.setText("Administradores");
        PanelAd.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, 560, -1));

        jLabel72.setFont(new java.awt.Font("Serif", 1, 20)); // NOI18N
        jLabel72.setForeground(new java.awt.Color(0, 0, 0));
        jLabel72.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel72.setText("Sueldo:");
        PanelAd.add(jLabel72, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 250, 80, -1));

        jcomboEmpleadSuel.setBackground(new java.awt.Color(246, 241, 241));
        jcomboEmpleadSuel.setForeground(new java.awt.Color(0, 0, 0));
        jcomboEmpleadSuel.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-Seleccionar-", "2000", "3000", "4000", "5000", "6000", "7000", "8000" }));
        PanelAd.add(jcomboEmpleadSuel, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 250, 100, 30));

        jcomboEmpleadoadAfi.setBackground(new java.awt.Color(246, 241, 241));
        jcomboEmpleadoadAfi.setForeground(new java.awt.Color(0, 0, 0));
        jcomboEmpleadoadAfi.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-Seleccionar-", "AFP", "ONP", "Otros" }));
        PanelAd.add(jcomboEmpleadoadAfi, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 250, 100, 30));
        PanelAd.add(jSeparator9, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 160, 340, 10));
        PanelAd.add(jSeparator63, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 280, 100, 10));

        butEliEmpAd.setBackground(new java.awt.Color(246, 241, 241));
        butEliEmpAd.setFont(new java.awt.Font("Serif", 1, 14)); // NOI18N
        butEliEmpAd.setForeground(new java.awt.Color(0, 0, 0));
        butEliEmpAd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/image 6.png"))); // NOI18N
        butEliEmpAd.setText("Eliminar");
        butEliEmpAd.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        butEliEmpAd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butEliEmpAdActionPerformed(evt);
            }
        });
        PanelAd.add(butEliEmpAd, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 380, 120, 40));

        PanelPri.add(PanelAd, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 560, 450));

        PanelEm.setBackground(new java.awt.Color(246, 241, 241));
        PanelEm.setForeground(new java.awt.Color(0, 0, 0));
        PanelEm.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel9.setFont(new java.awt.Font("Serif", 1, 24)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 0, 0));
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("DNI:");
        PanelEm.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 110, 160, -1));

        jLabel10.setFont(new java.awt.Font("Serif", 1, 24)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(0, 0, 0));
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("NOMBRES:");
        PanelEm.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 170, 160, -1));

        jLabel11.setFont(new java.awt.Font("Serif", 1, 24)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(0, 0, 0));
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("APELLIDOS:");
        PanelEm.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 230, 170, -1));

        jLabel12.setFont(new java.awt.Font("Serif", 1, 24)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(0, 0, 0));
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setText("TIPO TRAB. :");
        PanelEm.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 290, 180, -1));

        txtBusdniEm.setBackground(new java.awt.Color(246, 241, 241));
        txtBusdniEm.setForeground(new java.awt.Color(0, 0, 0));
        txtBusdniEm.setBorder(null);
        txtBusdniEm.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtBusdniEmKeyTyped(evt);
            }
        });
        PanelEm.add(txtBusdniEm, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 110, 310, 30));

        txtBusnameEm.setBackground(new java.awt.Color(246, 241, 241));
        txtBusnameEm.setForeground(new java.awt.Color(0, 0, 0));
        txtBusnameEm.setBorder(null);
        PanelEm.add(txtBusnameEm, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 170, 310, 30));

        txtBuscapeEm.setBackground(new java.awt.Color(246, 241, 241));
        txtBuscapeEm.setForeground(new java.awt.Color(0, 0, 0));
        txtBuscapeEm.setBorder(null);
        PanelEm.add(txtBuscapeEm, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 230, 310, 30));

        jButton8.setBackground(new java.awt.Color(246, 241, 241));
        jButton8.setFont(new java.awt.Font("Serif", 1, 14)); // NOI18N
        jButton8.setForeground(new java.awt.Color(0, 0, 0));
        jButton8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/64673 1.png"))); // NOI18N
        jButton8.setText("  Consultar");
        jButton8.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });
        PanelEm.add(jButton8, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 380, 140, -1));

        jSeparator2.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator2.setForeground(new java.awt.Color(0, 0, 0));
        PanelEm.add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 140, 310, 20));

        jSeparator3.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator3.setForeground(new java.awt.Color(0, 0, 0));
        PanelEm.add(jSeparator3, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 200, 310, 20));

        jSeparator4.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator4.setForeground(new java.awt.Color(0, 0, 0));
        PanelEm.add(jSeparator4, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 330, 170, 10));

        jLabel14.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(0, 0, 0));
        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/554795 1.png"))); // NOI18N
        jLabel14.setText("Empleados");
        PanelEm.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, 560, 60));

        btnEditarEmple.setBackground(new java.awt.Color(246, 241, 241));
        btnEditarEmple.setFont(new java.awt.Font("Serif", 1, 14)); // NOI18N
        btnEditarEmple.setForeground(new java.awt.Color(0, 0, 0));
        btnEditarEmple.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/5854505 1.png"))); // NOI18N
        btnEditarEmple.setText("Editar");
        btnEditarEmple.setActionCommand(" Editar");
        btnEditarEmple.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnEditarEmple.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarEmpleActionPerformed(evt);
            }
        });
        PanelEm.add(btnEditarEmple, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 380, 110, -1));

        jcomboTipoEm.setBackground(new java.awt.Color(246, 241, 241));
        jcomboTipoEm.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jcomboTipoEm.setForeground(new java.awt.Color(0, 0, 0));
        jcomboTipoEm.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--Seleccionar--", "Cajero", "Limpieza", "Seguridad", "Asistente" }));
        PanelEm.add(jcomboTipoEm, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 290, 170, 40));

        jSeparator62.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator62.setForeground(new java.awt.Color(0, 0, 0));
        PanelEm.add(jSeparator62, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 260, 310, 10));

        butEliEmp.setBackground(new java.awt.Color(246, 241, 241));
        butEliEmp.setFont(new java.awt.Font("Serif", 1, 14)); // NOI18N
        butEliEmp.setForeground(new java.awt.Color(0, 0, 0));
        butEliEmp.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/image 6.png"))); // NOI18N
        butEliEmp.setText("Eliminar");
        butEliEmp.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        butEliEmp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butEliEmpActionPerformed(evt);
            }
        });
        PanelEm.add(butEliEmp, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 380, 120, 40));

        PanelPri.add(PanelEm, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 560, 450));

        jPanel7.add(PanelPri, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 560, 450));

        jTabbedPane2.addTab("Empleados", jPanel7);

        jPanel9.setBackground(new java.awt.Color(25, 167, 206));
        jPanel9.setForeground(new java.awt.Color(0, 0, 0));
        jPanel9.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        cmbProductos.setBackground(new java.awt.Color(246, 241, 241));
        cmbProductos.setForeground(new java.awt.Color(0, 0, 0));
        cmbProductos.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--Seleccionar--", "Higiene", "Comestible", "Make Up" }));
        cmbProductos.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbProductosItemStateChanged(evt);
            }
        });
        jPanel9.add(cmbProductos, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, -1, 30));

        PanelPrinPro.setBackground(new java.awt.Color(25, 167, 206));
        PanelPrinPro.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        PanelHigiene.setBackground(new java.awt.Color(246, 241, 241));
        PanelHigiene.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel15.setFont(new java.awt.Font("Serif", 1, 15)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(0, 0, 0));
        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel15.setText("Codigo:");
        PanelHigiene.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 120, 100, 30));

        jLabel16.setFont(new java.awt.Font("Serif", 1, 15)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(0, 0, 0));
        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel16.setText("Cod. Prod:");
        PanelHigiene.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 120, 80, 30));

        jLabel17.setFont(new java.awt.Font("Serif", 1, 15)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(0, 0, 0));
        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel17.setText("Nombre Prod:");
        PanelHigiene.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 180, 100, 30));

        jLabel18.setFont(new java.awt.Font("Serif", 1, 15)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(0, 0, 0));
        jLabel18.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel18.setText("Tipo Fab:");
        PanelHigiene.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 180, 80, 30));

        jLabel19.setFont(new java.awt.Font("Serif", 1, 15)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(0, 0, 0));
        jLabel19.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel19.setText("Contenido:");
        PanelHigiene.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 240, 100, 30));

        jLabel20.setFont(new java.awt.Font("Serif", 1, 15)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(0, 0, 0));
        jLabel20.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel20.setText("Tipo:");
        PanelHigiene.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 240, 70, 30));

        jLabel21.setFont(new java.awt.Font("Serif", 1, 15)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(0, 0, 0));
        jLabel21.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel21.setText("Precio:");
        PanelHigiene.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 300, 100, 30));

        jLabel22.setFont(new java.awt.Font("Serif", 1, 15)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(0, 0, 0));
        jLabel22.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel22.setText("Stock:");
        PanelHigiene.add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 300, 80, 30));

        jButton6.setBackground(new java.awt.Color(246, 241, 241));
        jButton6.setForeground(new java.awt.Color(0, 0, 0));
        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/64673 1.png"))); // NOI18N
        jButton6.setText("Consultar");
        jButton6.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        PanelHigiene.add(jButton6, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 390, -1, 40));

        jLabel23.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(0, 0, 0));
        jLabel23.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel23.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/3347864 1.png"))); // NOI18N
        jLabel23.setText("Productos Higiene");
        PanelHigiene.add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, 570, -1));

        txtBuscCodHigi.setBackground(new java.awt.Color(246, 241, 241));
        txtBuscCodHigi.setForeground(new java.awt.Color(0, 0, 0));
        txtBuscCodHigi.setText("\n");
        txtBuscCodHigi.setBorder(null);
        PanelHigiene.add(txtBuscCodHigi, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 120, 140, 30));

        txtBuscNomHigi.setBackground(new java.awt.Color(246, 241, 241));
        txtBuscNomHigi.setForeground(new java.awt.Color(0, 0, 0));
        txtBuscNomHigi.setText("\n");
        txtBuscNomHigi.setBorder(null);
        PanelHigiene.add(txtBuscNomHigi, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 180, 140, 30));

        txtBuscContHigi.setBackground(new java.awt.Color(246, 241, 241));
        txtBuscContHigi.setForeground(new java.awt.Color(0, 0, 0));
        txtBuscContHigi.setText("\n");
        txtBuscContHigi.setBorder(null);
        PanelHigiene.add(txtBuscContHigi, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 240, 140, 30));

        txtBuscPrecHigi.setBackground(new java.awt.Color(246, 241, 241));
        txtBuscPrecHigi.setForeground(new java.awt.Color(0, 0, 0));
        txtBuscPrecHigi.setText("\n");
        txtBuscPrecHigi.setBorder(null);
        PanelHigiene.add(txtBuscPrecHigi, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 300, 140, 30));

        jSeparator10.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator10.setOrientation(javax.swing.SwingConstants.VERTICAL);
        PanelHigiene.add(jSeparator10, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 100, 20, 250));

        txtBuscCodProHigi.setBackground(new java.awt.Color(246, 241, 241));
        txtBuscCodProHigi.setForeground(new java.awt.Color(0, 0, 0));
        txtBuscCodProHigi.setText("\n");
        txtBuscCodProHigi.setBorder(null);
        PanelHigiene.add(txtBuscCodProHigi, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 120, 140, 30));

        txtBuscTipoHigi.setBackground(new java.awt.Color(246, 241, 241));
        txtBuscTipoHigi.setForeground(new java.awt.Color(0, 0, 0));
        txtBuscTipoHigi.setText("\n");
        txtBuscTipoHigi.setBorder(null);
        PanelHigiene.add(txtBuscTipoHigi, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 240, 140, 30));

        txtBuscStockHigi.setBackground(new java.awt.Color(246, 241, 241));
        txtBuscStockHigi.setForeground(new java.awt.Color(0, 0, 0));
        txtBuscStockHigi.setText("\n");
        txtBuscStockHigi.setBorder(null);
        PanelHigiene.add(txtBuscStockHigi, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 300, 140, 30));

        jSeparator11.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator11.setForeground(new java.awt.Color(0, 0, 0));
        PanelHigiene.add(jSeparator11, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 150, 140, 10));

        jSeparator12.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator12.setForeground(new java.awt.Color(0, 0, 0));
        PanelHigiene.add(jSeparator12, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 210, 140, 10));

        jSeparator13.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator13.setForeground(new java.awt.Color(0, 0, 0));
        PanelHigiene.add(jSeparator13, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 150, 140, 10));

        jSeparator14.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator14.setForeground(new java.awt.Color(0, 0, 0));
        PanelHigiene.add(jSeparator14, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 270, 140, 10));

        jSeparator15.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator15.setForeground(new java.awt.Color(0, 0, 0));
        PanelHigiene.add(jSeparator15, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 330, 140, 10));

        jSeparator16.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator16.setForeground(new java.awt.Color(0, 0, 0));
        PanelHigiene.add(jSeparator16, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 330, 140, 10));

        jSeparator17.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator17.setForeground(new java.awt.Color(0, 0, 0));
        PanelHigiene.add(jSeparator17, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 270, 140, 10));

        jSeparator18.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator18.setForeground(new java.awt.Color(0, 0, 0));
        PanelHigiene.add(jSeparator18, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 210, 140, 10));

        jcomboTipoFabHigi.setBackground(new java.awt.Color(246, 241, 241));
        jcomboTipoFabHigi.setForeground(new java.awt.Color(0, 0, 0));
        jcomboTipoFabHigi.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--Seleccionar--", "90% Natural", "50% Natural" }));
        PanelHigiene.add(jcomboTipoFabHigi, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 180, 140, 30));

        btnEditarHigi.setBackground(new java.awt.Color(246, 241, 241));
        btnEditarHigi.setForeground(new java.awt.Color(0, 0, 0));
        btnEditarHigi.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/5854505 1.png"))); // NOI18N
        btnEditarHigi.setText("Editar");
        btnEditarHigi.setActionCommand(" Editar");
        btnEditarHigi.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnEditarHigi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarHigiActionPerformed(evt);
            }
        });
        PanelHigiene.add(btnEditarHigi, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 390, 110, -1));

        butEliProdHigi.setBackground(new java.awt.Color(246, 241, 241));
        butEliProdHigi.setFont(new java.awt.Font("Serif", 1, 14)); // NOI18N
        butEliProdHigi.setForeground(new java.awt.Color(0, 0, 0));
        butEliProdHigi.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/image 6.png"))); // NOI18N
        butEliProdHigi.setText("Eliminar");
        butEliProdHigi.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        butEliProdHigi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butEliProdHigiActionPerformed(evt);
            }
        });
        PanelHigiene.add(butEliProdHigi, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 390, 120, 40));

        PanelPrinPro.add(PanelHigiene, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 570, 450));

        PanelComes.setBackground(new java.awt.Color(246, 241, 241));
        PanelComes.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel24.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel24.setForeground(new java.awt.Color(0, 0, 0));
        jLabel24.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel24.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/image 1.png"))); // NOI18N
        jLabel24.setText("Productos Comestibles");
        PanelComes.add(jLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, 570, -1));

        jLabel25.setFont(new java.awt.Font("Serif", 1, 16)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(0, 0, 0));
        jLabel25.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel25.setText("Codigo:");
        PanelComes.add(jLabel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 110, 100, 30));

        jLabel26.setFont(new java.awt.Font("Serif", 1, 16)); // NOI18N
        jLabel26.setForeground(new java.awt.Color(0, 0, 0));
        jLabel26.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel26.setText("Cod. Prod:");
        PanelComes.add(jLabel26, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 140, 80, 30));

        jLabel27.setFont(new java.awt.Font("Serif", 1, 16)); // NOI18N
        jLabel27.setForeground(new java.awt.Color(0, 0, 0));
        jLabel27.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel27.setText("Nombre Prod:");
        PanelComes.add(jLabel27, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 170, 100, 30));

        jLabel29.setFont(new java.awt.Font("Serif", 1, 16)); // NOI18N
        jLabel29.setForeground(new java.awt.Color(0, 0, 0));
        jLabel29.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel29.setText("Caducidad:");
        PanelComes.add(jLabel29, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 230, 100, 30));

        jLabel30.setFont(new java.awt.Font("Serif", 1, 16)); // NOI18N
        jLabel30.setForeground(new java.awt.Color(0, 0, 0));
        jLabel30.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel30.setText("Tipo:");
        PanelComes.add(jLabel30, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 200, 80, 30));

        jLabel31.setFont(new java.awt.Font("Serif", 1, 16)); // NOI18N
        jLabel31.setForeground(new java.awt.Color(0, 0, 0));
        jLabel31.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel31.setText("Precio:");
        PanelComes.add(jLabel31, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 270, 80, 30));

        jLabel32.setFont(new java.awt.Font("Serif", 1, 16)); // NOI18N
        jLabel32.setForeground(new java.awt.Color(0, 0, 0));
        jLabel32.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel32.setText("Stock:");
        PanelComes.add(jLabel32, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 290, 100, 30));

        jButton9.setBackground(new java.awt.Color(246, 241, 241));
        jButton9.setForeground(new java.awt.Color(0, 0, 0));
        jButton9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/64673 1.png"))); // NOI18N
        jButton9.setText("Consultar");
        jButton9.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });
        PanelComes.add(jButton9, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 390, -1, -1));

        jSeparator19.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator19.setOrientation(javax.swing.SwingConstants.VERTICAL);
        PanelComes.add(jSeparator19, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 80, 10, 280));

        txtBuscCadComes.setBackground(new java.awt.Color(246, 241, 241));
        txtBuscCadComes.setForeground(new java.awt.Color(0, 0, 0));
        txtBuscCadComes.setText("\n");
        txtBuscCadComes.setBorder(null);
        PanelComes.add(txtBuscCadComes, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 230, 140, 30));

        jSeparator20.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator20.setForeground(new java.awt.Color(0, 0, 0));
        PanelComes.add(jSeparator20, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 140, 140, 10));

        jSeparator22.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator22.setForeground(new java.awt.Color(0, 0, 0));
        PanelComes.add(jSeparator22, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 230, 140, 10));

        jSeparator24.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator24.setForeground(new java.awt.Color(0, 0, 0));
        PanelComes.add(jSeparator24, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 320, 140, 10));

        jSeparator25.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator25.setForeground(new java.awt.Color(0, 0, 0));
        PanelComes.add(jSeparator25, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 300, 140, 10));

        jSeparator26.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator26.setForeground(new java.awt.Color(0, 0, 0));
        PanelComes.add(jSeparator26, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 260, 140, 10));

        jSeparator27.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator27.setForeground(new java.awt.Color(0, 0, 0));
        PanelComes.add(jSeparator27, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 200, 140, 10));

        txtBuscCodComes.setBackground(new java.awt.Color(246, 241, 241));
        txtBuscCodComes.setForeground(new java.awt.Color(0, 0, 0));
        txtBuscCodComes.setText("\n");
        txtBuscCodComes.setBorder(null);
        PanelComes.add(txtBuscCodComes, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 110, 140, 30));

        txtBuscNomComes.setBackground(new java.awt.Color(246, 241, 241));
        txtBuscNomComes.setForeground(new java.awt.Color(0, 0, 0));
        txtBuscNomComes.setText("\n");
        txtBuscNomComes.setBorder(null);
        PanelComes.add(txtBuscNomComes, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 170, 140, 30));

        txtBuscCodProdComes.setBackground(new java.awt.Color(246, 241, 241));
        txtBuscCodProdComes.setForeground(new java.awt.Color(0, 0, 0));
        txtBuscCodProdComes.setText("\n");
        txtBuscCodProdComes.setBorder(null);
        PanelComes.add(txtBuscCodProdComes, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 140, 140, 30));

        txtBuscPrecComes.setBackground(new java.awt.Color(246, 241, 241));
        txtBuscPrecComes.setForeground(new java.awt.Color(0, 0, 0));
        txtBuscPrecComes.setText("\n");
        txtBuscPrecComes.setBorder(null);
        PanelComes.add(txtBuscPrecComes, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 270, 140, 30));

        txtBuscStockComes.setBackground(new java.awt.Color(246, 241, 241));
        txtBuscStockComes.setForeground(new java.awt.Color(0, 0, 0));
        txtBuscStockComes.setText("\n");
        txtBuscStockComes.setBorder(null);
        PanelComes.add(txtBuscStockComes, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 290, 140, 30));

        jcombTipoProComes.setBackground(new java.awt.Color(246, 241, 241));
        jcombTipoProComes.setForeground(new java.awt.Color(0, 0, 0));
        jcombTipoProComes.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--Selecionar--", "Fruta/Verdura", "Embutidos", "Otros", "Bebida", "Proteina" }));
        PanelComes.add(jcombTipoProComes, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 200, 140, 30));

        jSeparator29.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator29.setForeground(new java.awt.Color(0, 0, 0));
        PanelComes.add(jSeparator29, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 170, 140, 10));

        btnEditarProComes.setBackground(new java.awt.Color(246, 241, 241));
        btnEditarProComes.setForeground(new java.awt.Color(0, 0, 0));
        btnEditarProComes.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/5854505 1.png"))); // NOI18N
        btnEditarProComes.setText("Editar");
        btnEditarProComes.setActionCommand(" Editar");
        btnEditarProComes.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnEditarProComes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarProComesActionPerformed(evt);
            }
        });
        PanelComes.add(btnEditarProComes, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 390, 110, -1));

        butEliProdComes.setBackground(new java.awt.Color(246, 241, 241));
        butEliProdComes.setFont(new java.awt.Font("Serif", 1, 14)); // NOI18N
        butEliProdComes.setForeground(new java.awt.Color(0, 0, 0));
        butEliProdComes.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/image 6.png"))); // NOI18N
        butEliProdComes.setText("Eliminar");
        butEliProdComes.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        butEliProdComes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butEliProdComesActionPerformed(evt);
            }
        });
        PanelComes.add(butEliProdComes, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 390, 120, 40));

        PanelPrinPro.add(PanelComes, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 570, 450));

        PanelMake.setBackground(new java.awt.Color(246, 241, 241));
        PanelMake.setForeground(new java.awt.Color(0, 0, 0));
        PanelMake.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel28.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel28.setForeground(new java.awt.Color(0, 0, 0));
        jLabel28.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel28.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/6075201 1.png"))); // NOI18N
        jLabel28.setText("Productos Make Up");
        PanelMake.add(jLabel28, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, 570, -1));

        jLabel33.setFont(new java.awt.Font("Serif", 1, 15)); // NOI18N
        jLabel33.setForeground(new java.awt.Color(0, 0, 0));
        jLabel33.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel33.setText("Codigo:");
        PanelMake.add(jLabel33, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 90, 100, 30));

        jLabel34.setFont(new java.awt.Font("Serif", 1, 15)); // NOI18N
        jLabel34.setForeground(new java.awt.Color(0, 0, 0));
        jLabel34.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel34.setText("Cod. Prod:");
        PanelMake.add(jLabel34, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 120, 80, 30));

        jLabel35.setFont(new java.awt.Font("Serif", 1, 15)); // NOI18N
        jLabel35.setForeground(new java.awt.Color(0, 0, 0));
        jLabel35.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel35.setText("Nombre Prod:");
        PanelMake.add(jLabel35, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 150, 100, 30));

        jLabel36.setFont(new java.awt.Font("Serif", 1, 15)); // NOI18N
        jLabel36.setForeground(new java.awt.Color(0, 0, 0));
        jLabel36.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel36.setText("Tipo Fab:");
        PanelMake.add(jLabel36, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 180, 80, 30));

        jLabel37.setFont(new java.awt.Font("Serif", 1, 15)); // NOI18N
        jLabel37.setForeground(new java.awt.Color(0, 0, 0));
        jLabel37.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel37.setText("Tonos:");
        PanelMake.add(jLabel37, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 300, 100, 30));

        jLabel38.setFont(new java.awt.Font("Serif", 1, 15)); // NOI18N
        jLabel38.setForeground(new java.awt.Color(0, 0, 0));
        jLabel38.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel38.setText("Tipo:");
        PanelMake.add(jLabel38, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 210, 100, 30));

        jLabel39.setFont(new java.awt.Font("Serif", 1, 15)); // NOI18N
        jLabel39.setForeground(new java.awt.Color(0, 0, 0));
        jLabel39.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel39.setText("Precio:");
        PanelMake.add(jLabel39, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 240, 100, 30));

        jButton10.setBackground(new java.awt.Color(246, 241, 241));
        jButton10.setFont(new java.awt.Font("Serif", 1, 14)); // NOI18N
        jButton10.setForeground(new java.awt.Color(0, 0, 0));
        jButton10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/64673 1.png"))); // NOI18N
        jButton10.setText("Consultar");
        jButton10.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });
        PanelMake.add(jButton10, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 400, -1, -1));

        txtBuscCodMake.setBackground(new java.awt.Color(246, 241, 241));
        txtBuscCodMake.setForeground(new java.awt.Color(0, 0, 0));
        txtBuscCodMake.setText("\n");
        txtBuscCodMake.setBorder(null);
        PanelMake.add(txtBuscCodMake, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 90, 120, 30));

        txtBuscNomMake.setBackground(new java.awt.Color(246, 241, 241));
        txtBuscNomMake.setForeground(new java.awt.Color(0, 0, 0));
        txtBuscNomMake.setText("\n");
        txtBuscNomMake.setBorder(null);
        PanelMake.add(txtBuscNomMake, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 150, 120, 30));

        txtBuscTonosMake.setBackground(new java.awt.Color(246, 241, 241));
        txtBuscTonosMake.setForeground(new java.awt.Color(0, 0, 0));
        txtBuscTonosMake.setText("\n");
        txtBuscTonosMake.setBorder(null);
        PanelMake.add(txtBuscTonosMake, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 300, 120, 30));

        txtBuscPreMake.setBackground(new java.awt.Color(246, 241, 241));
        txtBuscPreMake.setForeground(new java.awt.Color(0, 0, 0));
        txtBuscPreMake.setText("\n");
        txtBuscPreMake.setBorder(null);
        PanelMake.add(txtBuscPreMake, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 240, 120, 30));

        jSeparator21.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator21.setOrientation(javax.swing.SwingConstants.VERTICAL);
        PanelMake.add(jSeparator21, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 80, 20, 300));

        txtBuscCodProMake.setBackground(new java.awt.Color(246, 241, 241));
        txtBuscCodProMake.setForeground(new java.awt.Color(0, 0, 0));
        txtBuscCodProMake.setText("\n");
        txtBuscCodProMake.setBorder(null);
        PanelMake.add(txtBuscCodProMake, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 120, 120, 30));

        txtBuscTipoMake.setBackground(new java.awt.Color(246, 241, 241));
        txtBuscTipoMake.setForeground(new java.awt.Color(0, 0, 0));
        txtBuscTipoMake.setText("\n");
        txtBuscTipoMake.setBorder(null);
        PanelMake.add(txtBuscTipoMake, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 210, 120, 30));

        txtBuscStockMake.setBackground(new java.awt.Color(246, 241, 241));
        txtBuscStockMake.setForeground(new java.awt.Color(0, 0, 0));
        txtBuscStockMake.setText("\n");
        txtBuscStockMake.setBorder(null);
        PanelMake.add(txtBuscStockMake, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 270, 120, 30));

        jSeparator28.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator28.setForeground(new java.awt.Color(0, 0, 0));
        PanelMake.add(jSeparator28, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 120, 120, 10));

        jSeparator30.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator30.setForeground(new java.awt.Color(0, 0, 0));
        PanelMake.add(jSeparator30, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 150, 110, 10));

        jSeparator31.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator31.setForeground(new java.awt.Color(0, 0, 0));
        PanelMake.add(jSeparator31, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 240, 120, 10));

        jSeparator32.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator32.setForeground(new java.awt.Color(0, 0, 0));
        PanelMake.add(jSeparator32, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 360, 120, 10));

        jSeparator33.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator33.setForeground(new java.awt.Color(0, 0, 0));
        PanelMake.add(jSeparator33, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 210, 120, 10));

        jSeparator34.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator34.setForeground(new java.awt.Color(0, 0, 0));
        PanelMake.add(jSeparator34, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 330, 120, 10));

        jSeparator35.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator35.setForeground(new java.awt.Color(0, 0, 0));
        PanelMake.add(jSeparator35, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 180, 120, 10));

        jcomboTipoFaProMake.setBackground(new java.awt.Color(246, 241, 241));
        jcomboTipoFaProMake.setForeground(new java.awt.Color(0, 0, 0));
        jcomboTipoFaProMake.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--Seleccionar--", "Cruelty free", "NO CF" }));
        PanelMake.add(jcomboTipoFaProMake, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 180, 120, 30));

        jLabel73.setFont(new java.awt.Font("Serif", 1, 15)); // NOI18N
        jLabel73.setForeground(new java.awt.Color(0, 0, 0));
        jLabel73.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel73.setText("Dirigido Para:");
        PanelMake.add(jLabel73, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 330, 100, 30));

        jLabel74.setFont(new java.awt.Font("Serif", 1, 15)); // NOI18N
        jLabel74.setForeground(new java.awt.Color(0, 0, 0));
        jLabel74.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel74.setText("Stock:");
        PanelMake.add(jLabel74, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 270, 100, 30));

        jSeparator64.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator64.setForeground(new java.awt.Color(0, 0, 0));
        PanelMake.add(jSeparator64, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 300, 120, 10));

        txtBuscDigparakMake.setBackground(new java.awt.Color(246, 241, 241));
        txtBuscDigparakMake.setForeground(new java.awt.Color(0, 0, 0));
        txtBuscDigparakMake.setText("\n");
        txtBuscDigparakMake.setBorder(null);
        PanelMake.add(txtBuscDigparakMake, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 330, 120, 30));

        jSeparator65.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator65.setForeground(new java.awt.Color(0, 0, 0));
        PanelMake.add(jSeparator65, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 270, 120, 10));

        btnEditarProMake.setBackground(new java.awt.Color(246, 241, 241));
        btnEditarProMake.setFont(new java.awt.Font("Serif", 1, 14)); // NOI18N
        btnEditarProMake.setForeground(new java.awt.Color(0, 0, 0));
        btnEditarProMake.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/5854505 1.png"))); // NOI18N
        btnEditarProMake.setText("Editar");
        btnEditarProMake.setActionCommand(" Editar");
        btnEditarProMake.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnEditarProMake.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarProMakeActionPerformed(evt);
            }
        });
        PanelMake.add(btnEditarProMake, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 400, 110, -1));

        butEliProdMake.setBackground(new java.awt.Color(246, 241, 241));
        butEliProdMake.setFont(new java.awt.Font("Serif", 1, 14)); // NOI18N
        butEliProdMake.setForeground(new java.awt.Color(0, 0, 0));
        butEliProdMake.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/image 6.png"))); // NOI18N
        butEliProdMake.setText("Eliminar");
        butEliProdMake.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        butEliProdMake.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butEliProdMakeActionPerformed(evt);
            }
        });
        PanelMake.add(butEliProdMake, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 400, 120, -1));

        PanelPrinPro.add(PanelMake, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 570, 450));

        jPanel9.add(PanelPrinPro, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 570, 450));

        jTabbedPane2.addTab("Productos", jPanel9);

        jPanel10.setBackground(new java.awt.Color(25, 167, 206));
        jPanel10.setForeground(new java.awt.Color(0, 0, 0));
        jPanel10.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        cmbTipoProv.setBackground(new java.awt.Color(246, 241, 241));
        cmbTipoProv.setForeground(new java.awt.Color(0, 0, 0));
        cmbTipoProv.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--Seleccionar--", "Interno", "Externo" }));
        cmbTipoProv.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbTipoProvItemStateChanged(evt);
            }
        });
        jPanel10.add(cmbTipoProv, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, -1, 30));

        PanelprinProvedores.setBackground(new java.awt.Color(25, 167, 206));
        PanelprinProvedores.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        PanelProvInterno.setBackground(new java.awt.Color(246, 241, 241));
        PanelProvInterno.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel42.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel42.setForeground(new java.awt.Color(0, 0, 0));
        jLabel42.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel42.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/image 2.png"))); // NOI18N
        jLabel42.setText("Proveedor Interno");
        PanelProvInterno.add(jLabel42, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, 570, -1));

        jLabel43.setFont(new java.awt.Font("Serif", 1, 30)); // NOI18N
        jLabel43.setForeground(new java.awt.Color(0, 0, 0));
        jLabel43.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel43.setText("DNI:");
        PanelProvInterno.add(jLabel43, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 130, 150, 40));

        jLabel44.setFont(new java.awt.Font("Serif", 1, 30)); // NOI18N
        jLabel44.setForeground(new java.awt.Color(0, 0, 0));
        jLabel44.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel44.setText("Nombre:");
        jLabel44.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        PanelProvInterno.add(jLabel44, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 200, 150, 40));

        txtBuscDniProvInt.setBackground(new java.awt.Color(246, 241, 241));
        txtBuscDniProvInt.setForeground(new java.awt.Color(0, 0, 0));
        txtBuscDniProvInt.setBorder(null);
        PanelProvInterno.add(txtBuscDniProvInt, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 130, 330, 40));
        PanelProvInterno.add(jSeparator36, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 170, 330, 10));

        txtBusNamProvint.setBackground(new java.awt.Color(246, 241, 241));
        txtBusNamProvint.setForeground(new java.awt.Color(0, 0, 0));
        txtBusNamProvint.setBorder(null);
        PanelProvInterno.add(txtBusNamProvint, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 200, 330, 40));
        PanelProvInterno.add(jSeparator37, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 320, 130, 10));

        jButton11.setBackground(new java.awt.Color(246, 241, 241));
        jButton11.setFont(new java.awt.Font("Serif", 1, 14)); // NOI18N
        jButton11.setForeground(new java.awt.Color(0, 0, 0));
        jButton11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/64673 1.png"))); // NOI18N
        jButton11.setText("Consultar");
        jButton11.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });
        PanelProvInterno.add(jButton11, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 390, -1, 40));

        jLabel45.setFont(new java.awt.Font("Serif", 1, 30)); // NOI18N
        jLabel45.setForeground(new java.awt.Color(0, 0, 0));
        jLabel45.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel45.setText("Area:");
        PanelProvInterno.add(jLabel45, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 280, 150, -1));

        jcomboAreaProvInt.setBackground(new java.awt.Color(246, 241, 241));
        jcomboAreaProvInt.setForeground(new java.awt.Color(0, 0, 0));
        jcomboAreaProvInt.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--Seleccionar--", "Dirección", "Recursos Humanos", "Finanzas", "Marketing", "Tecnología" }));
        PanelProvInterno.add(jcomboAreaProvInt, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 280, 130, 40));
        PanelProvInterno.add(jSeparator66, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 240, 330, 10));

        btnEditarProvInt.setBackground(new java.awt.Color(246, 241, 241));
        btnEditarProvInt.setFont(new java.awt.Font("Serif", 1, 14)); // NOI18N
        btnEditarProvInt.setForeground(new java.awt.Color(0, 0, 0));
        btnEditarProvInt.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/5854505 1.png"))); // NOI18N
        btnEditarProvInt.setText("Editar");
        btnEditarProvInt.setActionCommand(" Editar");
        btnEditarProvInt.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnEditarProvInt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarProvIntActionPerformed(evt);
            }
        });
        PanelProvInterno.add(btnEditarProvInt, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 390, 110, -1));

        butEliProvInt.setBackground(new java.awt.Color(246, 241, 241));
        butEliProvInt.setFont(new java.awt.Font("Serif", 1, 14)); // NOI18N
        butEliProvInt.setForeground(new java.awt.Color(0, 0, 0));
        butEliProvInt.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/image 6.png"))); // NOI18N
        butEliProvInt.setText("Eliminar");
        butEliProvInt.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        butEliProvInt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butEliProvIntActionPerformed(evt);
            }
        });
        PanelProvInterno.add(butEliProvInt, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 390, 120, -1));

        PanelprinProvedores.add(PanelProvInterno, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 570, 450));

        PanelProvExter.setBackground(new java.awt.Color(246, 241, 241));
        PanelProvExter.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel46.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel46.setForeground(new java.awt.Color(0, 0, 0));
        jLabel46.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel46.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/image 3.png"))); // NOI18N
        jLabel46.setText("Provedor Externo");
        PanelProvExter.add(jLabel46, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, 570, -1));

        txtBuscGerProEX.setBackground(new java.awt.Color(246, 241, 241));
        txtBuscGerProEX.setForeground(new java.awt.Color(0, 0, 0));
        txtBuscGerProEX.setText("\n");
        txtBuscGerProEX.setBorder(null);
        PanelProvExter.add(txtBuscGerProEX, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 300, 130, 30));

        jSeparator39.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator39.setForeground(new java.awt.Color(0, 0, 0));
        PanelProvExter.add(jSeparator39, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 330, 130, 10));

        jLabel47.setFont(new java.awt.Font("Serif", 1, 17)); // NOI18N
        jLabel47.setForeground(new java.awt.Color(0, 0, 0));
        jLabel47.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel47.setText("Gerente:");
        PanelProvExter.add(jLabel47, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 300, 110, 30));

        jLabel48.setFont(new java.awt.Font("Serif", 1, 17)); // NOI18N
        jLabel48.setForeground(new java.awt.Color(0, 0, 0));
        jLabel48.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel48.setText("Años Colab:");
        PanelProvExter.add(jLabel48, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 270, 110, 30));

        txtBuscAniProvEx.setBackground(new java.awt.Color(246, 241, 241));
        txtBuscAniProvEx.setForeground(new java.awt.Color(0, 0, 0));
        txtBuscAniProvEx.setText("\n");
        txtBuscAniProvEx.setBorder(null);
        PanelProvExter.add(txtBuscAniProvEx, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 270, 140, 30));

        jSeparator40.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator40.setForeground(new java.awt.Color(0, 0, 0));
        PanelProvExter.add(jSeparator40, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 300, 140, 10));

        jButton12.setBackground(new java.awt.Color(246, 241, 241));
        jButton12.setFont(new java.awt.Font("Serif", 1, 14)); // NOI18N
        jButton12.setForeground(new java.awt.Color(0, 0, 0));
        jButton12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/64673 1.png"))); // NOI18N
        jButton12.setText("Consultar");
        jButton12.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });
        PanelProvExter.add(jButton12, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 390, -1, 40));

        jLabel50.setFont(new java.awt.Font("Serif", 1, 17)); // NOI18N
        jLabel50.setForeground(new java.awt.Color(0, 0, 0));
        jLabel50.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel50.setText("Correo:");
        PanelProvExter.add(jLabel50, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 210, 90, 30));

        txtBuscCorrProEx.setBackground(new java.awt.Color(246, 241, 241));
        txtBuscCorrProEx.setForeground(new java.awt.Color(0, 0, 0));
        txtBuscCorrProEx.setText("\n");
        txtBuscCorrProEx.setBorder(null);
        PanelProvExter.add(txtBuscCorrProEx, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 210, 140, 30));

        jSeparator42.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator42.setForeground(new java.awt.Color(0, 0, 0));
        PanelProvExter.add(jSeparator42, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 240, 140, 10));

        txtBuscNomEmProvEx.setBackground(new java.awt.Color(246, 241, 241));
        txtBuscNomEmProvEx.setForeground(new java.awt.Color(0, 0, 0));
        txtBuscNomEmProvEx.setText("\n");
        txtBuscNomEmProvEx.setBorder(null);
        PanelProvExter.add(txtBuscNomEmProvEx, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 150, 140, 30));

        jSeparator43.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator43.setForeground(new java.awt.Color(0, 0, 0));
        PanelProvExter.add(jSeparator43, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 180, 140, 10));

        jLabel51.setFont(new java.awt.Font("Serif", 1, 17)); // NOI18N
        jLabel51.setForeground(new java.awt.Color(0, 0, 0));
        jLabel51.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel51.setText("Nombre Emp:");
        PanelProvExter.add(jLabel51, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 150, 110, 30));

        txtBuscRucProvEx.setBackground(new java.awt.Color(246, 241, 241));
        txtBuscRucProvEx.setForeground(new java.awt.Color(0, 0, 0));
        txtBuscRucProvEx.setText("\n");
        txtBuscRucProvEx.setBorder(null);
        PanelProvExter.add(txtBuscRucProvEx, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 120, 130, 30));

        jLabel52.setFont(new java.awt.Font("Serif", 1, 17)); // NOI18N
        jLabel52.setForeground(new java.awt.Color(0, 0, 0));
        jLabel52.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel52.setText("RUC:");
        PanelProvExter.add(jLabel52, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 120, 110, 30));

        jSeparator44.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator44.setForeground(new java.awt.Color(0, 0, 0));
        PanelProvExter.add(jSeparator44, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 150, 130, 10));

        jSeparator45.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator45.setForeground(new java.awt.Color(0, 0, 0));
        PanelProvExter.add(jSeparator45, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 210, 130, 10));

        txtBuscTelfProvEx.setBackground(new java.awt.Color(246, 241, 241));
        txtBuscTelfProvEx.setForeground(new java.awt.Color(0, 0, 0));
        txtBuscTelfProvEx.setText("\n");
        txtBuscTelfProvEx.setBorder(null);
        PanelProvExter.add(txtBuscTelfProvEx, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 180, 130, 30));

        jLabel53.setFont(new java.awt.Font("Serif", 1, 17)); // NOI18N
        jLabel53.setForeground(new java.awt.Color(0, 0, 0));
        jLabel53.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel53.setText("Telefono:");
        PanelProvExter.add(jLabel53, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 180, 110, 30));

        jLabel54.setFont(new java.awt.Font("Serif", 1, 17)); // NOI18N
        jLabel54.setForeground(new java.awt.Color(0, 0, 0));
        jLabel54.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel54.setText("Direccion:");
        PanelProvExter.add(jLabel54, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 240, 110, 30));

        txtBuscDirProEx.setBackground(new java.awt.Color(246, 241, 241));
        txtBuscDirProEx.setForeground(new java.awt.Color(0, 0, 0));
        txtBuscDirProEx.setText("\n");
        txtBuscDirProEx.setBorder(null);
        PanelProvExter.add(txtBuscDirProEx, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 240, 130, 30));

        jSeparator46.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator46.setForeground(new java.awt.Color(0, 0, 0));
        PanelProvExter.add(jSeparator46, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 270, 130, 10));

        jSeparator47.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator47.setOrientation(javax.swing.SwingConstants.VERTICAL);
        PanelProvExter.add(jSeparator47, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 100, 20, 250));

        btnEditarProvExt.setBackground(new java.awt.Color(246, 241, 241));
        btnEditarProvExt.setFont(new java.awt.Font("Serif", 1, 14)); // NOI18N
        btnEditarProvExt.setForeground(new java.awt.Color(0, 0, 0));
        btnEditarProvExt.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/5854505 1.png"))); // NOI18N
        btnEditarProvExt.setText("Editar");
        btnEditarProvExt.setActionCommand(" Editar");
        btnEditarProvExt.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnEditarProvExt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarProvExtActionPerformed(evt);
            }
        });
        PanelProvExter.add(btnEditarProvExt, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 390, 110, -1));

        butEliProvExt.setBackground(new java.awt.Color(246, 241, 241));
        butEliProvExt.setFont(new java.awt.Font("Serif", 1, 14)); // NOI18N
        butEliProvExt.setForeground(new java.awt.Color(0, 0, 0));
        butEliProvExt.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/image 6.png"))); // NOI18N
        butEliProvExt.setText("Eliminar");
        butEliProvExt.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        butEliProvExt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butEliProvExtActionPerformed(evt);
            }
        });
        PanelProvExter.add(butEliProvExt, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 390, 120, -1));

        PanelprinProvedores.add(PanelProvExter, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 570, 450));

        jPanel10.add(PanelprinProvedores, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 570, 450));

        jTabbedPane2.addTab("Proveedores", jPanel10);

        jPanel11.setBackground(new java.awt.Color(25, 167, 206));
        jPanel11.setForeground(new java.awt.Color(0, 0, 0));
        jPanel11.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        cmbtipoSucursal.setBackground(new java.awt.Color(246, 241, 241));
        cmbtipoSucursal.setForeground(new java.awt.Color(0, 0, 0));
        cmbtipoSucursal.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--Seleccionar--", "Principal", "Provincia" }));
        cmbtipoSucursal.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbtipoSucursalItemStateChanged(evt);
            }
        });
        jPanel11.add(cmbtipoSucursal, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, -1, 30));

        PanelPrinSucursales.setBackground(new java.awt.Color(25, 167, 206));
        PanelPrinSucursales.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        PanelSucPri.setBackground(new java.awt.Color(246, 241, 241));
        PanelSucPri.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel49.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel49.setForeground(new java.awt.Color(0, 0, 0));
        jLabel49.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel49.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/image 4.png"))); // NOI18N
        jLabel49.setText("Sucursal Principal");
        PanelSucPri.add(jLabel49, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, 560, -1));

        txtBusDistSucPri.setBackground(new java.awt.Color(246, 241, 241));
        txtBusDistSucPri.setForeground(new java.awt.Color(0, 0, 0));
        txtBusDistSucPri.setBorder(null);
        PanelSucPri.add(txtBusDistSucPri, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 280, 310, 30));
        PanelSucPri.add(jSeparator41, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 310, 310, 10));

        txtBuscDirSucPri.setBackground(new java.awt.Color(246, 241, 241));
        txtBuscDirSucPri.setForeground(new java.awt.Color(0, 0, 0));
        txtBuscDirSucPri.setBorder(null);
        PanelSucPri.add(txtBuscDirSucPri, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 330, 310, 30));

        jLabel55.setFont(new java.awt.Font("Serif", 1, 20)); // NOI18N
        jLabel55.setForeground(new java.awt.Color(0, 0, 0));
        jLabel55.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel55.setText("Direccion:");
        PanelSucPri.add(jLabel55, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 330, 160, -1));

        jLabel56.setFont(new java.awt.Font("Serif", 1, 20)); // NOI18N
        jLabel56.setForeground(new java.awt.Color(0, 0, 0));
        jLabel56.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel56.setText("Distrito");
        PanelSucPri.add(jLabel56, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 280, 160, -1));

        jLabel57.setFont(new java.awt.Font("Serif", 1, 20)); // NOI18N
        jLabel57.setForeground(new java.awt.Color(0, 0, 0));
        jLabel57.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel57.setText("Encargado:");
        PanelSucPri.add(jLabel57, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 230, 160, -1));

        txtBusEncSucPri.setBackground(new java.awt.Color(246, 241, 241));
        txtBusEncSucPri.setForeground(new java.awt.Color(0, 0, 0));
        txtBusEncSucPri.setBorder(null);
        PanelSucPri.add(txtBusEncSucPri, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 230, 310, 30));
        PanelSucPri.add(jSeparator48, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 260, 310, 10));

        txtBustelfSucPri.setBackground(new java.awt.Color(246, 241, 241));
        txtBustelfSucPri.setForeground(new java.awt.Color(0, 0, 0));
        txtBustelfSucPri.setBorder(null);
        PanelSucPri.add(txtBustelfSucPri, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 130, 310, 30));
        PanelSucPri.add(jSeparator49, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 160, 310, 10));

        jLabel58.setFont(new java.awt.Font("Serif", 1, 20)); // NOI18N
        jLabel58.setForeground(new java.awt.Color(0, 0, 0));
        jLabel58.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel58.setText("Telefono:");
        jLabel58.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        PanelSucPri.add(jLabel58, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 130, 160, -1));

        jLabel59.setFont(new java.awt.Font("Serif", 1, 20)); // NOI18N
        jLabel59.setForeground(new java.awt.Color(0, 0, 0));
        jLabel59.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel59.setText("N. Sucursal:");
        PanelSucPri.add(jLabel59, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 80, 160, -1));

        txtBuscDniSucPri.setBackground(new java.awt.Color(246, 241, 241));
        txtBuscDniSucPri.setForeground(new java.awt.Color(0, 0, 0));
        txtBuscDniSucPri.setBorder(null);
        PanelSucPri.add(txtBuscDniSucPri, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 180, 310, 30));
        PanelSucPri.add(jSeparator50, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 210, 310, 10));

        jButton13.setBackground(new java.awt.Color(246, 241, 241));
        jButton13.setFont(new java.awt.Font("Serif", 1, 14)); // NOI18N
        jButton13.setForeground(new java.awt.Color(0, 0, 0));
        jButton13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/64673 1.png"))); // NOI18N
        jButton13.setText("Consultar");
        jButton13.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });
        PanelSucPri.add(jButton13, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 390, -1, 40));
        PanelSucPri.add(jSeparator51, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 360, 310, 10));

        jLabel60.setFont(new java.awt.Font("Serif", 1, 20)); // NOI18N
        jLabel60.setForeground(new java.awt.Color(0, 0, 0));
        jLabel60.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel60.setText("DNI:");
        PanelSucPri.add(jLabel60, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 180, 160, -1));

        txtBuscNSucPri.setBackground(new java.awt.Color(246, 241, 241));
        txtBuscNSucPri.setForeground(new java.awt.Color(0, 0, 0));
        txtBuscNSucPri.setBorder(null);
        PanelSucPri.add(txtBuscNSucPri, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 80, 310, 30));

        jSeparator53.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator53.setForeground(new java.awt.Color(0, 0, 0));
        PanelSucPri.add(jSeparator53, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 110, 310, 20));

        btnEditarSucPri.setBackground(new java.awt.Color(246, 241, 241));
        btnEditarSucPri.setFont(new java.awt.Font("Serif", 1, 14)); // NOI18N
        btnEditarSucPri.setForeground(new java.awt.Color(0, 0, 0));
        btnEditarSucPri.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/5854505 1.png"))); // NOI18N
        btnEditarSucPri.setText("Editar");
        btnEditarSucPri.setActionCommand(" Editar");
        btnEditarSucPri.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnEditarSucPri.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarSucPriActionPerformed(evt);
            }
        });
        PanelSucPri.add(btnEditarSucPri, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 390, 110, -1));

        butEliSucPri.setBackground(new java.awt.Color(246, 241, 241));
        butEliSucPri.setFont(new java.awt.Font("Serif", 1, 14)); // NOI18N
        butEliSucPri.setForeground(new java.awt.Color(0, 0, 0));
        butEliSucPri.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/image 6.png"))); // NOI18N
        butEliSucPri.setText("Eliminar");
        butEliSucPri.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        butEliSucPri.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butEliSucPriActionPerformed(evt);
            }
        });
        PanelSucPri.add(butEliSucPri, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 390, 120, -1));

        PanelPrinSucursales.add(PanelSucPri, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 560, 450));

        PanelSucProv.setBackground(new java.awt.Color(246, 241, 241));
        PanelSucProv.setForeground(new java.awt.Color(0, 0, 0));
        PanelSucProv.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel63.setFont(new java.awt.Font("Serif", 1, 15)); // NOI18N
        jLabel63.setForeground(new java.awt.Color(0, 0, 0));
        jLabel63.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel63.setText("N. Sucursal");
        PanelSucProv.add(jLabel63, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 120, 100, 30));

        jLabel64.setFont(new java.awt.Font("Serif", 1, 15)); // NOI18N
        jLabel64.setForeground(new java.awt.Color(0, 0, 0));
        jLabel64.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel64.setText("Telefono:");
        PanelSucProv.add(jLabel64, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 120, 80, 30));

        jLabel65.setFont(new java.awt.Font("Serif", 1, 15)); // NOI18N
        jLabel65.setForeground(new java.awt.Color(0, 0, 0));
        jLabel65.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel65.setText("Cod. Prov:");
        PanelSucProv.add(jLabel65, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 180, 100, 30));

        jLabel66.setFont(new java.awt.Font("Serif", 1, 15)); // NOI18N
        jLabel66.setForeground(new java.awt.Color(0, 0, 0));
        jLabel66.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel66.setText("Provincia:");
        PanelSucProv.add(jLabel66, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 180, 80, 30));

        jLabel67.setFont(new java.awt.Font("Serif", 1, 15)); // NOI18N
        jLabel67.setForeground(new java.awt.Color(0, 0, 0));
        jLabel67.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel67.setText("DNI:");
        PanelSucProv.add(jLabel67, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 300, 80, 30));

        jLabel68.setFont(new java.awt.Font("Serif", 1, 15)); // NOI18N
        jLabel68.setForeground(new java.awt.Color(0, 0, 0));
        jLabel68.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel68.setText("Ciudad:");
        PanelSucProv.add(jLabel68, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 240, 100, 30));

        jLabel69.setFont(new java.awt.Font("Serif", 1, 15)); // NOI18N
        jLabel69.setForeground(new java.awt.Color(0, 0, 0));
        jLabel69.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel69.setText("Direccion:");
        PanelSucProv.add(jLabel69, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 240, 80, 30));

        jLabel70.setFont(new java.awt.Font("Serif", 1, 15)); // NOI18N
        jLabel70.setForeground(new java.awt.Color(0, 0, 0));
        jLabel70.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel70.setText("Encargado:");
        PanelSucProv.add(jLabel70, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 300, 80, 30));

        jButton14.setBackground(new java.awt.Color(246, 241, 241));
        jButton14.setFont(new java.awt.Font("Serif", 1, 14)); // NOI18N
        jButton14.setForeground(new java.awt.Color(0, 0, 0));
        jButton14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/64673 1.png"))); // NOI18N
        jButton14.setText("Consultar");
        jButton14.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });
        PanelSucProv.add(jButton14, new org.netbeans.lib.awtextra.AbsoluteConstraints(395, 390, 130, 40));

        txtBuscNSucProv.setBackground(new java.awt.Color(246, 241, 241));
        txtBuscNSucProv.setForeground(new java.awt.Color(0, 0, 0));
        txtBuscNSucProv.setText("\n");
        txtBuscNSucProv.setBorder(null);
        PanelSucProv.add(txtBuscNSucProv, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 120, 140, 30));

        txtBuscCodProSucProv.setBackground(new java.awt.Color(246, 241, 241));
        txtBuscCodProSucProv.setForeground(new java.awt.Color(0, 0, 0));
        txtBuscCodProSucProv.setText("\n");
        txtBuscCodProSucProv.setBorder(null);
        PanelSucProv.add(txtBuscCodProSucProv, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 180, 140, 30));

        txtBuscDNISucProv.setBackground(new java.awt.Color(246, 241, 241));
        txtBuscDNISucProv.setForeground(new java.awt.Color(0, 0, 0));
        txtBuscDNISucProv.setText("\n");
        txtBuscDNISucProv.setBorder(null);
        PanelSucProv.add(txtBuscDNISucProv, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 300, 150, 30));

        txtBuscDireproSucProv.setBackground(new java.awt.Color(246, 241, 241));
        txtBuscDireproSucProv.setForeground(new java.awt.Color(0, 0, 0));
        txtBuscDireproSucProv.setText("\n");
        txtBuscDireproSucProv.setBorder(null);
        PanelSucProv.add(txtBuscDireproSucProv, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 240, 150, 30));

        jSeparator52.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator52.setOrientation(javax.swing.SwingConstants.VERTICAL);
        PanelSucProv.add(jSeparator52, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 90, 10, 270));

        txtBuscTelSucProv.setBackground(new java.awt.Color(246, 241, 241));
        txtBuscTelSucProv.setForeground(new java.awt.Color(0, 0, 0));
        txtBuscTelSucProv.setText("\n");
        txtBuscTelSucProv.setBorder(null);
        PanelSucProv.add(txtBuscTelSucProv, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 120, 150, 30));

        txtBuscProvSucProv.setBackground(new java.awt.Color(246, 241, 241));
        txtBuscProvSucProv.setForeground(new java.awt.Color(0, 0, 0));
        txtBuscProvSucProv.setText("\n");
        txtBuscProvSucProv.setBorder(null);
        PanelSucProv.add(txtBuscProvSucProv, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 180, 150, 30));

        txtBuscCiudproSucProv.setBackground(new java.awt.Color(246, 241, 241));
        txtBuscCiudproSucProv.setForeground(new java.awt.Color(0, 0, 0));
        txtBuscCiudproSucProv.setText("\n");
        txtBuscCiudproSucProv.setBorder(null);
        PanelSucProv.add(txtBuscCiudproSucProv, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 240, 140, 30));

        txtBuscEncSucProv.setBackground(new java.awt.Color(246, 241, 241));
        txtBuscEncSucProv.setForeground(new java.awt.Color(0, 0, 0));
        txtBuscEncSucProv.setText("\n");
        txtBuscEncSucProv.setBorder(null);
        PanelSucProv.add(txtBuscEncSucProv, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 300, 140, 30));

        jSeparator54.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator54.setForeground(new java.awt.Color(0, 0, 0));
        PanelSucProv.add(jSeparator54, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 150, 140, 10));

        jSeparator55.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator55.setForeground(new java.awt.Color(0, 0, 0));
        PanelSucProv.add(jSeparator55, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 210, 150, 10));

        jSeparator56.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator56.setForeground(new java.awt.Color(0, 0, 0));
        PanelSucProv.add(jSeparator56, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 150, 150, 10));

        jSeparator57.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator57.setForeground(new java.awt.Color(0, 0, 0));
        PanelSucProv.add(jSeparator57, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 270, 140, 10));

        jSeparator58.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator58.setForeground(new java.awt.Color(0, 0, 0));
        PanelSucProv.add(jSeparator58, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 330, 140, 10));

        jSeparator59.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator59.setForeground(new java.awt.Color(0, 0, 0));
        PanelSucProv.add(jSeparator59, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 270, 150, 10));

        jSeparator60.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator60.setForeground(new java.awt.Color(0, 0, 0));
        PanelSucProv.add(jSeparator60, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 330, 150, 10));

        jSeparator61.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator61.setForeground(new java.awt.Color(0, 0, 0));
        PanelSucProv.add(jSeparator61, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 210, 140, 10));

        jLabel61.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel61.setForeground(new java.awt.Color(0, 0, 0));
        jLabel61.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel61.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/image 5.png"))); // NOI18N
        jLabel61.setText("Sucursal Provincia");
        PanelSucProv.add(jLabel61, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, 560, -1));

        btnEditarSucPro.setBackground(new java.awt.Color(246, 241, 241));
        btnEditarSucPro.setFont(new java.awt.Font("Serif", 1, 14)); // NOI18N
        btnEditarSucPro.setForeground(new java.awt.Color(0, 0, 0));
        btnEditarSucPro.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/5854505 1.png"))); // NOI18N
        btnEditarSucPro.setText("Editar");
        btnEditarSucPro.setActionCommand(" Editar");
        btnEditarSucPro.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnEditarSucPro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarSucProActionPerformed(evt);
            }
        });
        PanelSucProv.add(btnEditarSucPro, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 390, 110, -1));

        butEliSucpro.setBackground(new java.awt.Color(246, 241, 241));
        butEliSucpro.setFont(new java.awt.Font("Serif", 1, 14)); // NOI18N
        butEliSucpro.setForeground(new java.awt.Color(0, 0, 0));
        butEliSucpro.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/image 6.png"))); // NOI18N
        butEliSucpro.setText("Eliminar");
        butEliSucpro.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        butEliSucpro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butEliSucproActionPerformed(evt);
            }
        });
        PanelSucProv.add(butEliSucpro, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 390, 120, 40));

        PanelPrinSucursales.add(PanelSucProv, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 560, 450));

        jPanel11.add(PanelPrinSucursales, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 560, 450));

        jTabbedPane2.addTab("Sucursales", jPanel11);

        jPanel12.add(jTabbedPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 590, 550));

        jPanel4.add(jPanel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 590, 550));

        jTabbedPane1.addTab("BUSCADOR", jPanel4);

        jPanel1.setBackground(new java.awt.Color(20, 108, 148));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel6.setBackground(new java.awt.Color(25, 167, 206));
        jPanel6.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton15.setBackground(new java.awt.Color(246, 241, 241));
        jButton15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/image 8.png"))); // NOI18N
        jButton15.setText("Registrar nuevo Usuario ");
        jButton15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton15ActionPerformed(evt);
            }
        });
        jPanel6.add(jButton15, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 480, -1, 50));

        tblusuario.setBackground(new java.awt.Color(246, 241, 241));
        tblusuario.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "DNI", "Nombre", "Apellido", "Usuario"
            }
        ));
        jScrollPane1.setViewportView(tblusuario);

        jPanel6.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 210, 540, 240));

        jPanel13.setBackground(new java.awt.Color(175, 211, 226));
        jPanel13.setForeground(new java.awt.Color(0, 153, 153));
        jPanel13.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/hffdfgg-removebg-preview.png"))); // NOI18N
        jPanel13.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 150, 140));

        jLabel1.setBackground(new java.awt.Color(0, 102, 102));
        jLabel1.setFont(new java.awt.Font("Serif", 1, 28)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 102, 153));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("GERENTES GENERALES ");
        jPanel13.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 80, -1, -1));

        jLabel40.setFont(new java.awt.Font("Serif", 1, 28)); // NOI18N
        jLabel40.setForeground(new java.awt.Color(0, 102, 153));
        jLabel40.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel40.setText("DISTRIBUCION VITAL");
        jPanel13.add(jLabel40, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 40, 330, -1));

        jPanel6.add(jPanel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 540, 170));

        jButton16.setBackground(new java.awt.Color(246, 241, 241));
        jButton16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/image 8.png"))); // NOI18N
        jButton16.setText("Regresar al Login");
        jButton16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton16ActionPerformed(evt);
            }
        });
        jPanel6.add(jButton16, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 480, -1, 50));

        jPanel1.add(jPanel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 590, 550));

        jTabbedPane1.addTab("USUARIO", jPanel1);

        jPanel15.setBackground(new java.awt.Color(20, 108, 148));
        jPanel15.setForeground(new java.awt.Color(0, 0, 0));
        jPanel15.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTabbedPane3.setBackground(new java.awt.Color(246, 241, 241));
        jTabbedPane3.setForeground(new java.awt.Color(0, 0, 0));

        jPanel16.setBackground(new java.awt.Color(25, 167, 206));
        jPanel16.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jcomFiltEmple.setBackground(new java.awt.Color(246, 241, 241));
        jcomFiltEmple.setForeground(new java.awt.Color(0, 0, 0));
        jcomFiltEmple.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--Seleccionar--", "Administrador", "Empleado" }));
        jcomFiltEmple.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcomFiltEmpleItemStateChanged(evt);
            }
        });
        jPanel16.add(jcomFiltEmple, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 120, 30));

        PanelFilEmple.setBackground(new java.awt.Color(246, 241, 241));
        PanelFilEmple.setForeground(new java.awt.Color(0, 0, 0));
        PanelFilEmple.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel20.setBackground(new java.awt.Color(25, 167, 206));
        jPanel20.setForeground(new java.awt.Color(0, 0, 0));
        jPanel20.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tblordEmple.setBackground(new java.awt.Color(246, 241, 241));
        tblordEmple.setForeground(new java.awt.Color(0, 0, 0));
        tblordEmple.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre", "Apellido", "DNI", "Tipo"
            }
        ));
        jScrollPane3.setViewportView(tblordEmple);

        jPanel20.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 510, 390));

        PanelFilEmple.add(jPanel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 50, 530, 410));

        jLabel41.setForeground(new java.awt.Color(0, 0, 0));
        jLabel41.setText("Ordenar Por:");
        PanelFilEmple.add(jLabel41, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, -1, 30));

        jcomOrdEmple.setBackground(new java.awt.Color(25, 167, 206));
        jcomOrdEmple.setForeground(new java.awt.Color(0, 0, 0));
        jcomOrdEmple.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--Seleccionar--", "Nombre", "Apellido", "DNI", "Tipo" }));
        jcomOrdEmple.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcomOrdEmpleItemStateChanged(evt);
            }
        });
        PanelFilEmple.add(jcomOrdEmple, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 10, 120, 30));

        jPanel16.add(PanelFilEmple, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 570, 480));

        PaneleFiltroAd.setBackground(new java.awt.Color(246, 241, 241));
        PaneleFiltroAd.setForeground(new java.awt.Color(0, 0, 0));
        PaneleFiltroAd.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jcomOrdEmplead.setBackground(new java.awt.Color(25, 167, 206));
        jcomOrdEmplead.setForeground(new java.awt.Color(0, 0, 0));
        jcomOrdEmplead.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--Seleccionar--", "Nombre", "Apellido", "DNI", "Año Ing", " " }));
        jcomOrdEmplead.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcomOrdEmpleadItemStateChanged(evt);
            }
        });
        PaneleFiltroAd.add(jcomOrdEmplead, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 10, -1, 30));

        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("Ordenar Por:");
        PaneleFiltroAd.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, -1, 30));

        jPanel21.setBackground(new java.awt.Color(25, 167, 206));
        jPanel21.setForeground(new java.awt.Color(0, 0, 0));
        jPanel21.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tblOrdEmpAd.setBackground(new java.awt.Color(246, 241, 241));
        tblOrdEmpAd.setForeground(new java.awt.Color(0, 0, 0));
        tblOrdEmpAd.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre", "Apellido", "DNI", "Año Ing", "Sueldo"
            }
        ));
        jScrollPane2.setViewportView(tblOrdEmpAd);

        jPanel21.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 520, 400));

        PaneleFiltroAd.add(jPanel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 50, 540, 420));

        jPanel16.add(PaneleFiltroAd, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 570, 480));

        jTabbedPane3.addTab("Empleados", jPanel16);

        jPanel17.setBackground(new java.awt.Color(25, 167, 206));
        jPanel17.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jcomFiltProduc.setBackground(new java.awt.Color(246, 241, 241));
        jcomFiltProduc.setForeground(new java.awt.Color(0, 0, 0));
        jcomFiltProduc.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--Seleccionar--", "Higiene", "Comestible", "Make Up" }));
        jcomFiltProduc.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcomFiltProducItemStateChanged(evt);
            }
        });
        jPanel17.add(jcomFiltProduc, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 120, 30));

        PanelFilMake.setBackground(new java.awt.Color(246, 241, 241));
        PanelFilMake.setForeground(new java.awt.Color(0, 0, 0));
        PanelFilMake.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel75.setForeground(new java.awt.Color(0, 0, 0));
        jLabel75.setText("Ordenar Por:");
        PanelFilMake.add(jLabel75, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, -1, 30));

        jcomOrdMake.setBackground(new java.awt.Color(25, 167, 206));
        jcomOrdMake.setForeground(new java.awt.Color(0, 0, 0));
        jcomOrdMake.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--Seleccionar--", "Codigo", "Nombre Prod.", "Precio", "Stock", "Fabricado", "Tipo", "Tonos", "Para", "RucProv" }));
        jcomOrdMake.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcomOrdMakeItemStateChanged(evt);
            }
        });
        PanelFilMake.add(jcomOrdMake, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 10, 120, 30));

        jPanel24.setBackground(new java.awt.Color(25, 167, 206));
        jPanel24.setForeground(new java.awt.Color(0, 0, 0));
        jPanel24.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tblordProdMake.setBackground(new java.awt.Color(246, 241, 241));
        tblordProdMake.setForeground(new java.awt.Color(0, 0, 0));
        tblordProdMake.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo", "Nombre", "Prec.", "Stock", "Fabric", "Tipo", "Tonos", "Para", "Ruc P."
            }
        ));
        jScrollPane6.setViewportView(tblordProdMake);

        jPanel24.add(jScrollPane6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 510, 390));

        PanelFilMake.add(jPanel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 50, 530, 410));

        jPanel17.add(PanelFilMake, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 570, 480));

        PanelFilComes.setBackground(new java.awt.Color(246, 241, 241));
        PanelFilComes.setForeground(new java.awt.Color(0, 0, 0));
        PanelFilComes.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel71.setForeground(new java.awt.Color(0, 0, 0));
        jLabel71.setText("Ordenar Por:");
        PanelFilComes.add(jLabel71, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, -1, 30));

        jcomOrdComes.setBackground(new java.awt.Color(25, 167, 206));
        jcomOrdComes.setForeground(new java.awt.Color(0, 0, 0));
        jcomOrdComes.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--Seleccionar--", "Codigo", "Nombre Prod.", "Tipo", "Precio", "Stock", "Caducidad", "RucProv" }));
        jcomOrdComes.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcomOrdComesItemStateChanged(evt);
            }
        });
        PanelFilComes.add(jcomOrdComes, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 10, 120, 30));

        jPanel23.setBackground(new java.awt.Color(25, 167, 206));
        jPanel23.setForeground(new java.awt.Color(0, 0, 0));
        jPanel23.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tblordProdComes.setBackground(new java.awt.Color(246, 241, 241));
        tblordProdComes.setForeground(new java.awt.Color(0, 0, 0));
        tblordProdComes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo", "Nombre", "Tipo", "Prec.", "Stock", "Cad.", "Ruc P."
            }
        ));
        jScrollPane5.setViewportView(tblordProdComes);

        jPanel23.add(jScrollPane5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 510, 390));

        PanelFilComes.add(jPanel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 50, 530, 410));

        jPanel17.add(PanelFilComes, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 570, 480));

        PanelFilhigi.setBackground(new java.awt.Color(246, 241, 241));
        PanelFilhigi.setForeground(new java.awt.Color(0, 0, 0));
        PanelFilhigi.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel62.setForeground(new java.awt.Color(0, 0, 0));
        jLabel62.setText("Ordenar Por:");
        PanelFilhigi.add(jLabel62, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, -1, 30));

        jcomOrdHigi.setBackground(new java.awt.Color(25, 167, 206));
        jcomOrdHigi.setForeground(new java.awt.Color(0, 0, 0));
        jcomOrdHigi.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--Seleccionar--", "Codigo", "Nombre Prod.", "Tipo Fab.", "Tipo", "Contenido", "Precio", "Stock", "RucProv" }));
        jcomOrdHigi.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcomOrdHigiItemStateChanged(evt);
            }
        });
        PanelFilhigi.add(jcomOrdHigi, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 10, 120, 30));

        jPanel22.setBackground(new java.awt.Color(25, 167, 206));
        jPanel22.setForeground(new java.awt.Color(0, 0, 0));
        jPanel22.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tblordProdHigi.setBackground(new java.awt.Color(246, 241, 241));
        tblordProdHigi.setForeground(new java.awt.Color(0, 0, 0));
        tblordProdHigi.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo", "Nombre", "T. Fab.", "Tipo", "Cont.", "Prec.", "Stock", "Ruc P."
            }
        ));
        jScrollPane4.setViewportView(tblordProdHigi);

        jPanel22.add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 510, 390));

        PanelFilhigi.add(jPanel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 50, 530, 410));

        jPanel17.add(PanelFilhigi, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 570, 480));

        jTabbedPane3.addTab("Productos", jPanel17);

        jPanel18.setBackground(new java.awt.Color(25, 167, 206));
        jPanel18.setForeground(new java.awt.Color(0, 0, 0));
        jPanel18.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jcomFiltProve.setBackground(new java.awt.Color(246, 241, 241));
        jcomFiltProve.setForeground(new java.awt.Color(0, 0, 0));
        jcomFiltProve.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--Seleccionar--", "Interno", "Externo" }));
        jcomFiltProve.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcomFiltProveItemStateChanged(evt);
            }
        });
        jPanel18.add(jcomFiltProve, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 120, 30));

        PanelFilProvEx.setBackground(new java.awt.Color(246, 241, 241));
        PanelFilProvEx.setForeground(new java.awt.Color(0, 0, 0));
        PanelFilProvEx.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel77.setForeground(new java.awt.Color(0, 0, 0));
        jLabel77.setText("Ordenar Por:");
        PanelFilProvEx.add(jLabel77, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, -1, 30));

        jcomOrdProvExt.setBackground(new java.awt.Color(25, 167, 206));
        jcomOrdProvExt.setForeground(new java.awt.Color(0, 0, 0));
        jcomOrdProvExt.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--Seleccionar--", "Nombre", "Ruc", "Telf", "Direccion", "Correo", "Año", "Gerente" }));
        jcomOrdProvExt.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcomOrdProvExtItemStateChanged(evt);
            }
        });
        PanelFilProvEx.add(jcomOrdProvExt, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 10, 120, 30));

        jPanel26.setBackground(new java.awt.Color(25, 167, 206));
        jPanel26.setForeground(new java.awt.Color(0, 0, 0));
        jPanel26.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tblordProvEx.setBackground(new java.awt.Color(246, 241, 241));
        tblordProvEx.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre", "RUC", "Año", "Teléfono", "Correo", "Dirección", "Encargado", "Demora"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane9.setViewportView(tblordProvEx);

        jPanel26.add(jScrollPane9, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 510, 390));

        PanelFilProvEx.add(jPanel26, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 50, 530, 410));

        jPanel18.add(PanelFilProvEx, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 570, 480));

        PanelFilProvInt.setBackground(new java.awt.Color(246, 241, 241));
        PanelFilProvInt.setForeground(new java.awt.Color(0, 0, 0));
        PanelFilProvInt.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel76.setForeground(new java.awt.Color(0, 0, 0));
        jLabel76.setText("Ordenar Por:");
        PanelFilProvInt.add(jLabel76, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, -1, 30));

        jcomOrdProvIn.setBackground(new java.awt.Color(25, 167, 206));
        jcomOrdProvIn.setForeground(new java.awt.Color(0, 0, 0));
        jcomOrdProvIn.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--Seleccionar--", "Nombre", "DNI", "Area" }));
        jcomOrdProvIn.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcomOrdProvInItemStateChanged(evt);
            }
        });
        PanelFilProvInt.add(jcomOrdProvIn, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 10, 120, 30));

        jPanel25.setBackground(new java.awt.Color(25, 167, 206));
        jPanel25.setForeground(new java.awt.Color(0, 0, 0));
        jPanel25.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tblordProvInt.setBackground(new java.awt.Color(246, 241, 241));
        tblordProvInt.setForeground(new java.awt.Color(0, 0, 0));
        tblordProvInt.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre", "DNI", "Area", "Sueldo"
            }
        ));
        jScrollPane7.setViewportView(tblordProvInt);

        jPanel25.add(jScrollPane7, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 510, 390));

        PanelFilProvInt.add(jPanel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 50, 530, 410));

        jPanel18.add(PanelFilProvInt, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 570, 480));

        jTabbedPane3.addTab("Provedores", jPanel18);

        jPanel19.setBackground(new java.awt.Color(25, 167, 206));
        jPanel19.setForeground(new java.awt.Color(0, 0, 0));
        jPanel19.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jcomFiltSucur.setBackground(new java.awt.Color(246, 241, 241));
        jcomFiltSucur.setForeground(new java.awt.Color(0, 0, 0));
        jcomFiltSucur.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--Seleccionar--", "Principal", "Provincia" }));
        jcomFiltSucur.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcomFiltSucurItemStateChanged(evt);
            }
        });
        jPanel19.add(jcomFiltSucur, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 120, 30));

        PanelFilSucPri.setBackground(new java.awt.Color(246, 241, 241));
        PanelFilSucPri.setForeground(new java.awt.Color(0, 0, 0));
        PanelFilSucPri.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel78.setForeground(new java.awt.Color(0, 0, 0));
        jLabel78.setText("Ordenar Por:");
        PanelFilSucPri.add(jLabel78, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, -1, 30));

        jcomOrdSucPri.setBackground(new java.awt.Color(25, 167, 206));
        jcomOrdSucPri.setForeground(new java.awt.Color(0, 0, 0));
        jcomOrdSucPri.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--Seleccionar--", "Num. Suc", "Telefono", "Distrito", "Direccion", "Encargado", "DNI" }));
        jcomOrdSucPri.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcomOrdSucPriItemStateChanged(evt);
            }
        });
        PanelFilSucPri.add(jcomOrdSucPri, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 10, 120, 30));

        jPanel27.setBackground(new java.awt.Color(25, 167, 206));
        jPanel27.setForeground(new java.awt.Color(0, 0, 0));
        jPanel27.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tblordSucPri.setBackground(new java.awt.Color(246, 241, 241));
        tblordSucPri.setForeground(new java.awt.Color(0, 0, 0));
        tblordSucPri.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "N. Sucursal", "Telefono", "Distrito", "Direccion", "Encargado", "DNI"
            }
        ));
        jScrollPane8.setViewportView(tblordSucPri);

        jPanel27.add(jScrollPane8, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 510, 390));

        PanelFilSucPri.add(jPanel27, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 50, 530, 410));

        jPanel19.add(PanelFilSucPri, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 570, 480));

        PanelFilSucPro.setBackground(new java.awt.Color(246, 241, 241));
        PanelFilSucPro.setForeground(new java.awt.Color(0, 0, 0));
        PanelFilSucPro.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel79.setForeground(new java.awt.Color(0, 0, 0));
        jLabel79.setText("Ordenar Por:");
        PanelFilSucPro.add(jLabel79, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, -1, 30));

        jcomOrdSucProv.setBackground(new java.awt.Color(25, 167, 206));
        jcomOrdSucProv.setForeground(new java.awt.Color(0, 0, 0));
        jcomOrdSucProv.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--Seleccionar--", "Num Suc", "Telefono", "Cod.Prov", "Provincia", "Ciudad", "Direccion", "Encargado", "Dni" }));
        jcomOrdSucProv.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcomOrdSucProvItemStateChanged(evt);
            }
        });
        PanelFilSucPro.add(jcomOrdSucProv, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 10, 120, 30));

        jPanel28.setBackground(new java.awt.Color(25, 167, 206));
        jPanel28.setForeground(new java.awt.Color(0, 0, 0));
        jPanel28.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tblordSucProv.setBackground(new java.awt.Color(246, 241, 241));
        tblordSucProv.setForeground(new java.awt.Color(0, 0, 0));
        tblordSucProv.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Numero Sucursal", "Telefono", "Cod. Provincia", "Provincia", "Ciudad", "Direccion", "Encargado", "DNI"
            }
        ));
        jScrollPane11.setViewportView(tblordSucProv);

        jPanel28.add(jScrollPane11, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 510, 390));

        PanelFilSucPro.add(jPanel28, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 50, 530, 410));

        jPanel19.add(PanelFilSucPro, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 570, 480));

        jTabbedPane3.addTab("Sucursales", jPanel19);

        jPanel15.add(jTabbedPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 600, 570));

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Inventario", jPanel14);

        jPanel5.add(jTabbedPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 720, 570));

        getContentPane().add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 720, 570));

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    public void mostrarinfousu(){
        String sql="Select * From usuario";
    }
    
    public void mostrartableusu(){
        tusuario= new DefaultTableModel();
        tusuario.addColumn("DNI");
        tusuario.addColumn("Nombre");
        tusuario.addColumn("Apellido");
        tusuario.addColumn("Usuario");
        tblusuario.setModel(tusuario);
        String datos [] = new String [4];
        String sql="Select DNI,Nombre,Apellido,Usuario From usuario";
        Statement st;
        try{
            st= cn.createStatement();
            ResultSet rs=st.executeQuery(sql);
            while(rs.next()){
                //usando la clase generica               
                datos[0]=rs.getString(1);
                datos[1]=rs.getString(2);
                datos[2]=rs.getString(3);
                datos[3]=rs.getString(4);
                tusuario.addRow(datos);
            }
            tblusuario.setModel(tusuario);
        }catch(SQLException ex){
            Logger.getLogger(FrameProductos.class.getName()).log(Level.SEVERE,null,ex);
        }
        
        
        
        
    }
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
    FrameEmpleados abrir = new FrameEmpleados();
   abrir.setVisible(true);
   this.setVisible(false);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
  FrameProductos abrir = new FrameProductos();
   abrir.setVisible(true);
   this.setVisible(false);        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
FrameProveedores abrir = new FrameProveedores();
   abrir.setVisible(true);
   this.setVisible(false);            // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
FrameSucursales abrir = new FrameSucursales();
   abrir.setVisible(true);
   this.setVisible(false);         // TODO add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed

    private void cmtipoempleaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmtipoempleaItemStateChanged
        
        String tipoemple=cmtipoemplea.getSelectedItem().toString();
        if(tipoemple.equalsIgnoreCase("Administrador")){
            PanelEm.setVisible(false);
            PanelAd.setVisible(true);
            
        }else if(tipoemple.equalsIgnoreCase("Empleado")){
            PanelAd.setVisible(false);
            PanelEm.setVisible(true);
        }
    }//GEN-LAST:event_cmtipoempleaItemStateChanged

    private void cmbProductosItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbProductosItemStateChanged
        
        String tipoprodu=cmbProductos.getSelectedItem().toString();
        if (tipoprodu.equalsIgnoreCase("Higiene")) {
            PanelComes.setVisible(false);
            PanelMake.setVisible(false);
            PanelHigiene.setVisible(true);
        }else if (tipoprodu.equalsIgnoreCase("Comestible")) {
            PanelComes.setVisible(true);
            PanelMake.setVisible(false);
            PanelHigiene.setVisible(false);
        }else if (tipoprodu.equalsIgnoreCase("Make Up")) {
            PanelComes.setVisible(false);
            PanelMake.setVisible(true);
            PanelHigiene.setVisible(false);
        }
        
    }//GEN-LAST:event_cmbProductosItemStateChanged

    private void cmbTipoProvItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbTipoProvItemStateChanged
        
        String tipoprove= cmbTipoProv.getSelectedItem().toString();
        if (tipoprove.equalsIgnoreCase("Interno")) {
            PanelProvExter.setVisible(false);
            PanelProvInterno.setVisible(true);
        }else if (tipoprove.equalsIgnoreCase("Externo")) {
            PanelProvInterno.setVisible(false);
            PanelProvExter.setVisible(true);
        }
        
    }//GEN-LAST:event_cmbTipoProvItemStateChanged
    
    private void cmbtipoSucursalItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbtipoSucursalItemStateChanged
        
        String tiposuc=cmbtipoSucursal.getSelectedItem().toString();
        if (tiposuc.equalsIgnoreCase("Principal")) {
            PanelSucProv.setVisible(false);
            PanelSucPri.setVisible(true);
        }else if (tiposuc.equalsIgnoreCase("Provincia")) {
            PanelSucPri.setVisible(false);
            PanelSucProv.setVisible(true);
        }
        
        
        
    }//GEN-LAST:event_cmbtipoSucursalItemStateChanged

    private void jButton15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton15ActionPerformed
        RegistroGere rege= new RegistroGere();
        rege.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jButton15ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        String dnad=txtBuscDniAd.getText();
        String sql="Select * From empleadoad where DNI="+dnad;
        Statement st;
        
        try{
            st= cn.createStatement();
            ResultSet rs=st.executeQuery(sql);
            while(rs.next()){
                //obtener datos del empleadoad
                String nombread=rs.getString(1);
                String apellidoad=rs.getString(2);
                String dniad =rs.getString(3);
                String anioiad=rs.getString(4);
                String sueld=rs.getString(5);
                String afiliacionad=rs.getString(6);
                //Colocar datos del empleadoad
                txtBusNamAd.setText(nombread);
                txtBusApeAd.setText(apellidoad);
                txtBuscDniAd.setText(dniad);
                txtBuscAniAd.setText(anioiad);
                //Colocar datos al JCombo Afiliacion
                verificaraAfiempAD(afiliacionad);
                //Colocar sueldo al Jcombo Sueldo
                verificarSuelempAD(sueld);
            }
        }catch(SQLException ex){
            Logger.getLogger(FrameProductos.class.getName()).log(Level.SEVERE,null,ex);
        }
    }//GEN-LAST:event_jButton7ActionPerformed
    public void verificaraAfiempAD(String afiliacionad){
        if(afiliacionad.equalsIgnoreCase("AFP")){
            jcomboEmpleadoadAfi.setSelectedIndex(1);
        }if(afiliacionad.equalsIgnoreCase("ONP")){
            jcomboEmpleadoadAfi.setSelectedIndex(2);
        }if(afiliacionad.equalsIgnoreCase("Otros")){
        jcomboEmpleadoadAfi.setSelectedIndex(3);
        }        
    }
    
    public void verificarSuelempAD(String sueld){
        if(sueld.equalsIgnoreCase("2000")){
            jcomboEmpleadSuel.setSelectedIndex(1);
        }if(sueld.equalsIgnoreCase("3000")){
            jcomboEmpleadSuel.setSelectedIndex(2);
        }if(sueld.equalsIgnoreCase("4000")){
            jcomboEmpleadSuel.setSelectedIndex(3);
        }if(sueld.equalsIgnoreCase("5000")){
            jcomboEmpleadSuel.setSelectedIndex(4);
        }if(sueld.equalsIgnoreCase("6000")){
            jcomboEmpleadSuel.setSelectedIndex(5);
        }if(sueld.equalsIgnoreCase("7000")){
            jcomboEmpleadSuel.setSelectedIndex(6);
        }if(sueld.equalsIgnoreCase("8000")){
            jcomboEmpleadSuel.setSelectedIndex(7);
        }
        
        
    }
    
    
    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        String dnem= txtBusdniEm.getText();
        String sql="Select * From empleado where DNI="+dnem;
        Statement st;
        
        try{
            st= cn.createStatement();
            ResultSet rs=st.executeQuery(sql);
            while(rs.next()){
                //obtener datos del empleado
                String nombreem=rs.getString(1);
                String apellidoem=rs.getString(2);
                String dniem =rs.getString(3);
                String tipoem=rs.getString(4);
                
                //Colocar datos del empleado
                txtBusnameEm.setText(nombreem);
                txtBuscapeEm.setText(apellidoem);
                txtBusdniEm.setText(dniem);
                //Colocar datos Jcom Tipo Trab
                verificarTipoem(tipoem);
            }
        }catch(SQLException ex){
            Logger.getLogger(FrameProductos.class.getName()).log(Level.SEVERE,null,ex);
            JOptionPane.showMessageDialog(null, "Empleado no encontrado");
        }
        
    }//GEN-LAST:event_jButton8ActionPerformed
    public void verificarTipoem(String tipoem){
        if(tipoem.equalsIgnoreCase("Cajero")){
            jcomboTipoEm.setSelectedIndex(1);
        }if(tipoem.equalsIgnoreCase("Limpieza")){
            jcomboTipoEm.setSelectedIndex(2);
        }if(tipoem.equalsIgnoreCase("Seguridad")){
            jcomboTipoEm.setSelectedIndex(3);
        }if(tipoem.equalsIgnoreCase("Asistente")){
            jcomboTipoEm.setSelectedIndex(4);
        }
    }
    
    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        String codhigi=txtBuscCodHigi.getText();
        String sql="Select * From prohigi where Codigo="+codhigi;
        Statement st;
        
        try{
            st= cn.createStatement();
            ResultSet rs=st.executeQuery(sql);
            while(rs.next()){
                //obtener datos del producto higiene
                String codh=rs.getString(1);
                String nomhigi=rs.getString(2);
                String tipfahigi =rs.getString(3);
                String tipohigi=rs.getString(4);
                String conthigi=rs.getString(5);
                String prechigi=rs.getString(6);
                String stockhigi=rs.getString(7);
                String codprohigi=rs.getString(8);
                
                
                //Colocar datos del producto higiene
                txtBuscCodHigi.setText(codh);
                txtBuscNomHigi.setText(nomhigi);
                //Colocar datos en JCombo Tipo fab
                verificartipofabProComes(tipfahigi);
                //
                txtBuscTipoHigi.setText(tipohigi);
                txtBuscContHigi.setText(conthigi);
                txtBuscPrecHigi.setText(prechigi);
                txtBuscStockHigi.setText(stockhigi);
                txtBuscCodProHigi.setText(codprohigi);
                
            }
        }catch(SQLException ex){
            Logger.getLogger(FrameProductos.class.getName()).log(Level.SEVERE,null,ex);
        }
    }//GEN-LAST:event_jButton6ActionPerformed
    public void verificartipofabProComes(String tipofahigi){
        if(tipofahigi.equalsIgnoreCase("90% Natural")){
            jcomboTipoFabHigi.setSelectedIndex(1);
        }if(tipofahigi.equalsIgnoreCase("50% Natural")){
            jcomboTipoFabHigi.setSelectedIndex(2);
        }
        
    }
    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        String codcome= txtBuscCodComes.getText();
        String sql="Select * from procomes where Codigo="+codcome;
        Statement st;
        
        try{
            st= cn.createStatement();
            ResultSet rs=st.executeQuery(sql);
            while(rs.next()){
                //obtener datos del producto comestible
                String codc=rs.getString(1);
                String nomcome=rs.getString(2);
                String tipocome=rs.getString(3);
                String preccome=rs.getString(4);
                String stockcome=rs.getString(5);
                String cadu=rs.getString(6);
                String codprocome=rs.getString(7);
                
                
                //Colocar datos del producto comestible
                txtBuscCodComes.setText(codc);
                txtBuscNomComes.setText(nomcome);
                //Colocar datos en JCombo Tipo
                verificartipoPro(tipocome);
                //
                txtBuscPrecComes.setText(preccome);
                txtBuscStockComes.setText(stockcome);
                txtBuscCadComes.setText(cadu);
                txtBuscCodProdComes.setText(codprocome);
                
            }
        }catch(SQLException ex){
            Logger.getLogger(FrameProductos.class.getName()).log(Level.SEVERE,null,ex);
        }
    }//GEN-LAST:event_jButton9ActionPerformed
    
    public void verificartipoPro(String tipocome){
        if(tipocome.equalsIgnoreCase("Fruta/Verdura")){
            jcombTipoProComes.setSelectedIndex(1);
        }if(tipocome.equalsIgnoreCase("Embutidos")){
            jcombTipoProComes.setSelectedIndex(2);
        }if(tipocome.equalsIgnoreCase("Otros")){
            jcombTipoProComes.setSelectedIndex(3);
        }if(tipocome.equalsIgnoreCase("Bebida")){
            jcombTipoProComes.setSelectedIndex(4);
        }if(tipocome.equalsIgnoreCase("Proteina")){
            jcombTipoProComes.setSelectedIndex(5);
        }
    }
    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        String codmake= txtBuscCodMake.getText();
        String sql="Select * from promakeup where Codigo="+codmake;
        Statement st;
        
        try{
            st= cn.createStatement();
            ResultSet rs=st.executeQuery(sql);
            while(rs.next()){
                //obtener datos del producto mkae
                String codmak=rs.getString(1);
                String nommake=rs.getString(2);
                String precmake=rs.getString(3);
                String stockmake=rs.getString(4);
                String fabrimake=rs.getString(5);
                String tipmake=rs.getString(6);
                String tonos=rs.getString(7);
                String dig=rs.getString(8);
                String codpromake=rs.getString(9);
                
                
                //Colocar datos del producto make
                txtBuscCodMake.setText(codmak);
                txtBuscNomMake.setText(nommake);
                txtBuscPreMake.setText(precmake);
                txtBuscStockMake.setText(stockmake);
                //Colocar datos JCombo tipo fab.
                validarFabricadosProdMake(fabrimake);
                //
                txtBuscDigparakMake.setText(dig);
                txtBuscTipoMake.setText(tipmake);
                txtBuscTonosMake.setText(tonos);
                txtBuscCodProMake.setText(codpromake);
                
            }
        }catch(SQLException ex){
            Logger.getLogger(FrameProductos.class.getName()).log(Level.SEVERE,null,ex);
        }
        
        
    }//GEN-LAST:event_jButton10ActionPerformed
    public void validarFabricadosProdMake(String fabrimake){
        if(fabrimake.equalsIgnoreCase("Cruelty free")){
            jcomboTipoFaProMake.setSelectedIndex(1);
        }if(fabrimake.equalsIgnoreCase("NO CF")){
            jcomboTipoFaProMake.setSelectedIndex(2);
        }
    }
    public void validarAreaProvInt(String areaproint){
        if (areaproint.equalsIgnoreCase("Dirección")) {
            jcomboAreaProvInt.setSelectedIndex(1);
        }if (areaproint.equalsIgnoreCase("Recursos Humanos")) {
            jcomboAreaProvInt.setSelectedIndex(2);
        }if (areaproint.equalsIgnoreCase("Finanzas")) {
            jcomboAreaProvInt.setSelectedIndex(3);
        }if (areaproint.equalsIgnoreCase("Marketing")) {
            jcomboAreaProvInt.setSelectedIndex(4);
        }if (areaproint.equalsIgnoreCase("Tecnología")) {
            jcomboAreaProvInt.setSelectedIndex(5);
        }
    }
    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        String DNIproint= txtBuscDniProvInt.getText();
        String sql="Select * from provedorint where DNI="+DNIproint;
        Statement st;
        
        try{
            st= cn.createStatement();
            ResultSet rs=st.executeQuery(sql);
            while(rs.next()){
                //obtener datos del provedor interno
                String nomproint=rs.getString(1);
                String dniproint=rs.getString(2);
                String areaproint=rs.getString(3);
                //Colocar datos del provedor interno
                txtBusNamProvint.setText(nomproint);
                txtBuscDniProvInt.setText(dniproint);
                //Colocar datos en Jcombo Area
                validarAreaProvInt(areaproint);
            }
        }catch(SQLException ex){
            Logger.getLogger(FrameProductos.class.getName()).log(Level.SEVERE,null,ex);
        }
        
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        String Rucproext= txtBuscRucProvEx.getText();
        String sql="Select * from provedorext where RUC="+Rucproext;
        Statement st;
        
        try{
            st= cn.createStatement();
            ResultSet rs=st.executeQuery(sql);
            while(rs.next()){
                //obtener datos del provedor externo
                String nompempreproext=rs.getString(1);
                String rucproext=rs.getString(2);
                String telefproext=rs.getString(3);
                String direproext=rs.getString(4);
                String correproext=rs.getString(5);
                String aniocolaproext=rs.getString(6);
                String gerenproext=rs.getString(7);
                //Colocar datos del provedor externo
                txtBuscNomEmProvEx.setText(nompempreproext);
                txtBuscRucProvEx.setText(rucproext);
                txtBuscTelfProvEx.setText(telefproext);
                txtBuscDirProEx.setText(direproext);
                txtBuscCorrProEx.setText(correproext);
                txtBuscAniProvEx.setText(aniocolaproext);
                txtBuscGerProEX.setText(gerenproext);
                
            }
        }catch(SQLException ex){
            Logger.getLogger(FrameProductos.class.getName()).log(Level.SEVERE,null,ex);
        }
        
        
    }//GEN-LAST:event_jButton12ActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        String nrosucpri= txtBuscNSucPri.getText();
        String sql="Select * from sucursalpri where NumeroSuc="+nrosucpri;
        Statement st;
        
        try{
            st= cn.createStatement();
            ResultSet rs=st.executeQuery(sql);
            while(rs.next()){
                //obtener datos de sucursal principal
                String nroscu=rs.getString(1);
                String tele=rs.getString(2);
                String ciud=rs.getString(3);
                String direc=rs.getString(4);
                String encar=rs.getString(5);
                String dnienc=rs.getString(6);
                //Colocar datos de sucursal principal
                txtBuscNSucPri.setText(nroscu);
                txtBustelfSucPri.setText(tele);
                txtBusDistSucPri.setText(ciud);
                txtBuscDirSucPri.setText(direc);
                txtBusEncSucPri.setText(encar);
                txtBuscDniSucPri.setText(dnienc);
            }
        }catch(SQLException ex){
            Logger.getLogger(FrameProductos.class.getName()).log(Level.SEVERE,null,ex);
        }
    }//GEN-LAST:event_jButton13ActionPerformed

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
        String nrosucpro= txtBuscNSucProv.getText();
        String sql="Select * from sucursalpro where NumeroSuc="+nrosucpro;
        Statement st;
        
        try{
            st= cn.createStatement();
            ResultSet rs=st.executeQuery(sql);
            while(rs.next()){
                //obtener datos de sucursal provincia
                String nroscupro=rs.getString(1);
                String telepro=rs.getString(2);
                String codpro=rs.getString(3);
                String provin=rs.getString(4);
                String ciudad=rs.getString(5);
                String dire=rs.getString(6);
                String encar=rs.getString(7);
                String dnienc=rs.getString(8);
                //Colocar datos de sucursal provincia
                txtBuscNSucProv.setText(nroscupro);
                txtBuscTelSucProv.setText(telepro);
                txtBuscCodProSucProv.setText(codpro);
                txtBuscProvSucProv.setText(provin);
                txtBuscCiudproSucProv.setText(ciudad);
                txtBuscDireproSucProv.setText(dire);
                txtBuscEncSucProv.setText(encar);
                txtBuscDNISucProv.setText(dnienc);
            }
        }catch(SQLException ex){
            Logger.getLogger(FrameProductos.class.getName()).log(Level.SEVERE,null,ex);
        }
        
    }//GEN-LAST:event_jButton14ActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        String na= txtBusNamAd.getText();
        String ap= txtBusApeAd.getText();
        String dn= txtBuscDniAd.getText();
        String an=txtBuscAniAd.getText();
        String su=jcomboEmpleadSuel.getSelectedItem().toString();
        String afi=jcomboEmpleadoadAfi.getSelectedItem().toString();
        
        try {
            PreparedStatement pps= cn.prepareStatement("UPDATE empleadoad SET Nombre='"+na+"',Apellido='"+ap+"',DNI='"+dn+"',AnioIng='"+an+"',Sueldo='"+su+"',Afiliacion='"+afi+"' Where DNI="+dn);
            pps.execute();
            JOptionPane.showMessageDialog(null, "Datos acutalizados");
            
        } catch (SQLException ex) {
                Logger.getLogger(FramePrincipal.class.getName()).log(Level.SEVERE, null, ex);
            }
    
    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnEditarEmpleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarEmpleActionPerformed
        String no= txtBusnameEm.getText();
        String ap= txtBuscapeEm.getText();
        String dni= txtBusdniEm.getText();
        String tip= jcomboTipoEm.getSelectedItem().toString();
        
        try {
            PreparedStatement pps= cn.prepareStatement("UPDATE empleado SET Nombre='"+no+"',Apellido='"+ap+"',DNI='"+dni+"',Tipo='"+tip+"' Where DNI="+dni);
            pps.execute();
            JOptionPane.showMessageDialog(null, "Datos acutalizados");
            
        } catch (SQLException ex) {
                Logger.getLogger(FramePrincipal.class.getName()).log(Level.SEVERE, null, ex);
            }
        
    }//GEN-LAST:event_btnEditarEmpleActionPerformed

    private void btnEditarProMakeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarProMakeActionPerformed
        String co= txtBuscCodMake.getText();
        String nom=txtBuscNomMake.getText();
        String pre=txtBuscPreMake.getText();
        String sto=txtBuscStockMake.getText();
        String fab=jcomboTipoFaProMake.getSelectedItem().toString();
        String tip= txtBuscTipoMake.getText();
        String ton= txtBuscTonosMake.getText();
        String dig=txtBuscDigparakMake.getText();
        String codpro=txtBuscCodProMake.getText();
        
        try{
            PreparedStatement pps= cn.prepareStatement("UPDATE promakeup SET Codigo='"+co+"',Nombreprod='"+nom+"',Precio='"+pre+"',Stock='"+sto+"',Fabricados='"+fab+"',Tipo='"+tip+
                    "',Tonos='"+ton+"',DigPara='"+dig+"',RucProv='"+codpro+"' Where Codigo="+co);
            pps.execute();
            JOptionPane.showMessageDialog(null, "Datos acutalizados");
        }catch (SQLException ex) {
            Logger.getLogger(FramePrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnEditarProMakeActionPerformed

    private void btnEditarProComesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarProComesActionPerformed
        String cod=txtBuscCodComes.getText();
        String nom=txtBuscNomComes.getText();
        String tip=jcombTipoProComes.getSelectedItem().toString();
        String pre=txtBuscPrecComes.getText();
        String sto=txtBuscStockComes.getText();
        String cad=txtBuscCadComes.getText();
        String codp=txtBuscCodProdComes.getText();
        
        try{
            PreparedStatement pps= cn.prepareStatement("UPDATE procomes SET Codigo='"+cod+"',Nombreprod='"+nom+"',Tipo='"+tip+"',Precio='"+pre+"',Stock='"+sto+"',Caducidad='"+cad+"',RucProv='"+codp+"' Where Codigo="+cod);
            pps.execute();
            JOptionPane.showMessageDialog(null, "Datos acutalizados");
        }catch (SQLException ex) {
            Logger.getLogger(FramePrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnEditarProComesActionPerformed

    private void btnEditarHigiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarHigiActionPerformed
        String cod= txtBuscCodHigi.getText();
        String nom= txtBuscNomHigi.getText();
        String tipofa=jcomboTipoFabHigi.getSelectedItem().toString();
        String tip= txtBuscTipoHigi.getText();
        String cont= txtBuscContHigi.getText();
        String pre= txtBuscPrecHigi.getText();
        String stoc= txtBuscStockHigi.getText();
        String codpro= txtBuscCodProHigi.getText();
        
        try{
            PreparedStatement pps= cn.prepareStatement("UPDATE prohigi SET Codigo='"+cod+"',Nombreprod='"+nom+"',TipFabri='"+tipofa+"',Tipo='"+tip+"',Contenido='"+cont+
                    "',Precio='"+pre+"',Stock='"+stoc+"',RucProv='"+codpro+"' Where Codigo="+cod);
            pps.execute();
            JOptionPane.showMessageDialog(null, "Datos acutalizados");
        }catch (SQLException ex) {
            Logger.getLogger(FramePrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_btnEditarHigiActionPerformed

    private void cmtipoempleaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmtipoempleaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmtipoempleaActionPerformed

    private void btnEditarProvExtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarProvExtActionPerformed
        
        String nome =txtBuscNomEmProvEx.getText();
        String ruc= txtBuscRucProvEx.getText();
        String telf= txtBuscTelfProvEx.getText();
        String dire= txtBuscDirProEx.getText();
        String corr=txtBuscCorrProEx.getText();
        String anio=txtBuscAniProvEx.getText();
        String gere= txtBuscGerProEX.getText();
        
        try {
            String sql="UPDATE provedorext SET NombreEmp='"+nome+"',RUC='"+ruc+"',Telefono='"+telf+"',Direccion='"+dire+"',Correo='"+corr+"',AnioColab='"+anio+"',GerenteGe='"+gere+
                    "' Where RUC="+ruc;
            
            PreparedStatement pps=cn.prepareStatement(sql);
            pps.execute();
            JOptionPane.showMessageDialog(null, "Datos Actualizados");
        } catch (SQLException ex) {
            Logger.getLogger(FramePrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_btnEditarProvExtActionPerformed

    private void btnEditarProvIntActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarProvIntActionPerformed
        String name=txtBusNamProvint.getText();
        String dni=txtBuscDniProvInt.getText();
        String area=jcomboAreaProvInt.getSelectedItem().toString();
        
        try {
            String sql="UPDATE provedorint SET Nombre='"+name+"',DNI='"+dni+"',Area='"+area+"' Where DNI="+dni;
            PreparedStatement pps= cn.prepareStatement(sql);
            pps.execute();
            JOptionPane.showMessageDialog(null, "Datos Actualizados");
        } catch (SQLException ex) {
            Logger.getLogger(FramePrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_btnEditarProvIntActionPerformed

    private void btnEditarSucProActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarSucProActionPerformed
        String nrosuc=txtBuscNSucProv.getText();
        String telf=txtBuscTelSucProv.getText();
        String Codpro=txtBuscCodProSucProv.getText();
        String prov=txtBuscProvSucProv.getText();
        String ciud=txtBuscCiudproSucProv.getText();
        String dire=txtBuscDireproSucProv.getText();
        String enc=txtBuscEncSucProv.getText();
        String dni=txtBuscDNISucProv.getText();
        
        try {
            String sql="UPDATE sucursalpro SET NumeroSuc='"+nrosuc+"',Telefono='"+telf+"',CodPro='"+Codpro+"',Provincia='"+prov+"',Ciudad='"+ciud+"',Direccion='"+dire+"',Encargado='"+enc+
                    "',DNI='"+dni+"' Where NumeroSuc="+nrosuc;
            PreparedStatement pps=cn.prepareStatement(sql);
            pps.execute();
            JOptionPane.showMessageDialog(null, "Datos Actualizados");
            
        } catch (SQLException ex) {
            Logger.getLogger(FramePrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
    }//GEN-LAST:event_btnEditarSucProActionPerformed

    private void btnEditarSucPriActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarSucPriActionPerformed
        String nrosu= txtBuscNSucPri.getText();
        String tel= txtBustelfSucPri.getText();
        String ciudad= txtBusDistSucPri.getText();
        String dire= txtBuscDirSucPri.getText();
        String enc= txtBusEncSucPri.getText();
        String dni= txtBuscDniSucPri.getText();
        
        try {
            String sql="UPDATE sucursalpri SET NumeroSuc='"+nrosu+"',Telefono='"+tel+"',Ciudad='"+ciudad+"',Direccion='"+dire+"',Encargado='"+enc+"',DNI='"+dni+"' Where NumeroSuc="+nrosu;
            PreparedStatement pps=cn.prepareStatement(sql);
            pps.execute();
            JOptionPane.showMessageDialog(null, "Datos Actualizados");
        } catch (SQLException ex) {
            Logger.getLogger(FramePrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
    }//GEN-LAST:event_btnEditarSucPriActionPerformed
    public void limptxtEm(){
        txtBusdniEm.setText("");
        txtBusnameEm.setText("");
        txtBuscapeEm.setText("");
        jcomboTipoEm.setSelectedIndex(0);
    }
    private void butEliEmpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butEliEmpActionPerformed
        String dni= txtBusdniEm.getText();
        String sql="DELETE FROM empleado Where DNI="+dni;
        
        //Si =0 No=1
        int els=JOptionPane.showConfirmDialog(null, "Esta seguro de eliminar Empleado?","Confirmacion",JOptionPane.YES_NO_OPTION);
        if(els==0){
            try {
                PreparedStatement pps=cn.prepareStatement(sql);
                pps.executeUpdate();
                JOptionPane.showMessageDialog(null, "Empleado Eliminado");
                limptxtEm();
            } catch (SQLException ex) {
                Logger.getLogger(FramePrincipal.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        
    }//GEN-LAST:event_butEliEmpActionPerformed

    private void txtBusdniEmKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBusdniEmKeyTyped
        if (txtBusdniEm.getText().length()>=8)
        {
            evt.consume();
        }
    }//GEN-LAST:event_txtBusdniEmKeyTyped
    public void limtxtAD(){
        txtBuscDniAd.setText("");
        txtBusNamAd.setText("");
        txtBusApeAd.setText("");
        jcomboEmpleadSuel.setSelectedIndex(0);
        jcomboEmpleadoadAfi.setSelectedIndex(0);
        txtBuscAniAd.setText("");
    }
    private void butEliEmpAdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butEliEmpAdActionPerformed
        String dni= txtBuscDniAd.getText();
        String sql="DELETE FROM empleadoad Where DNI="+dni;
        
        //Si =0 No=1
        int els=JOptionPane.showConfirmDialog(null, "Esta seguro de eliminar Administrador?","Confirmacion",JOptionPane.YES_NO_OPTION);
        if(els==0){
            try {
                PreparedStatement pps=cn.prepareStatement(sql);
                pps.executeUpdate();
                JOptionPane.showMessageDialog(null, "Administrador Eliminado");
                limtxtAD();
            } catch (SQLException ex) {
                Logger.getLogger(FramePrincipal.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        
        
    }//GEN-LAST:event_butEliEmpAdActionPerformed
    public void limptxtProhigi(){
        txtBuscCodHigi.setText("");
        txtBuscNomHigi.setText("");
        txtBuscContHigi.setText("");
        txtBuscPrecHigi.setText("");
        txtBuscCodProHigi.setText("");
        jcomboTipoFabHigi.setSelectedIndex(0);
        txtBuscTipoHigi.setText("");
        txtBuscStockHigi.setText("");
        
    }
    private void butEliProdHigiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butEliProdHigiActionPerformed
        String cod= txtBuscCodHigi.getText();
        String sql="DELETE FROM prohigi Where Codigo="+cod;
        
        //Si =0 No=1
        int els=JOptionPane.showConfirmDialog(null, "Esta seguro de eliminar Producto?","Confirmacion",JOptionPane.YES_NO_OPTION);
        if(els==0){
            try {
                PreparedStatement pps=cn.prepareStatement(sql);
                pps.executeUpdate();
                JOptionPane.showMessageDialog(null, "Producto Eliminado");
                limptxtProhigi();
            } catch (SQLException ex) {
                Logger.getLogger(FramePrincipal.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_butEliProdHigiActionPerformed
    public void limptxtProComes(){
        txtBuscCodComes.setText("");
        txtBuscNomComes.setText("");
        txtBuscCadComes.setText("");
        txtBuscCodProdComes.setText("");
        jcombTipoProComes.setSelectedIndex(0);
        txtBuscPrecComes.setText("");
    }
    private void butEliProdComesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butEliProdComesActionPerformed
        String cod= txtBuscCodComes.getText();
        String sql="DELETE FROM procomes Where Codigo="+cod;
        
        //Si =0 No=1
        int els=JOptionPane.showConfirmDialog(null, "Esta seguro de eliminar Producto?","Confirmacion",JOptionPane.YES_NO_OPTION);
        if(els==0){
            try {
                PreparedStatement pps=cn.prepareStatement(sql);
                pps.executeUpdate();
                JOptionPane.showMessageDialog(null, "Producto Eliminado");
                limptxtProComes();
            } catch (SQLException ex) {
                Logger.getLogger(FramePrincipal.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_butEliProdComesActionPerformed
    public void limptxtProMake(){
        txtBuscCodMake.setText("");
        txtBuscNomMake.setText("");
        txtBuscTipoMake.setText("");
        txtBuscStockMake.setText("");
        txtBuscDigparakMake.setText("");
        txtBuscCodProMake.setText("");
        jcomboTipoFaProMake.setSelectedIndex(0);
        txtBuscPreMake.setText("");
        txtBuscTonosMake.setText("");
    }
    private void butEliProdMakeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butEliProdMakeActionPerformed
        String cod= txtBuscCodMake.getText();
        String sql="DELETE FROM promakeup Where Codigo="+cod;
        
        //Si =0 No=1
        int els=JOptionPane.showConfirmDialog(null, "Esta seguro de eliminar Producto?","Confirmacion",JOptionPane.YES_NO_OPTION);
        if(els==0){
            try {
                PreparedStatement pps=cn.prepareStatement(sql);
                pps.executeUpdate();
                JOptionPane.showMessageDialog(null, "Producto Eliminado");
                limptxtProMake();
            } catch (SQLException ex) {
                Logger.getLogger(FramePrincipal.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_butEliProdMakeActionPerformed
    public void limptxtProInt(){
        txtBuscDniProvInt.setText("");
        txtBusNamProvint.setText("");
        jcomboAreaProvInt.setSelectedIndex(0);
    }
    private void butEliProvIntActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butEliProvIntActionPerformed
        String dni=txtBuscDniProvInt.getText();
        String sql="DELETE FROM provedorint Where DNI="+dni;
        int els=JOptionPane.showConfirmDialog(null, "Esta seguro de eliminar Provedor?","Confirmacion",JOptionPane.YES_NO_OPTION);
        if(els==0){
            try {
                PreparedStatement pps=cn.prepareCall(sql);
                pps.executeUpdate();
                JOptionPane.showMessageDialog(null, "Provedor eliminado");
                limptxtProInt();
            } catch (SQLException ex) {
                Logger.getLogger(FramePrincipal.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_butEliProvIntActionPerformed
    public void limptxtProvExt(){
        txtBuscRucProvEx.setText("");
        txtBuscTelfProvEx.setText("");
        txtBuscDirProEx.setText("");
        txtBuscGerProEX.setText("");
        txtBuscNomEmProvEx.setText("");
        txtBuscCorrProEx.setText("");
        txtBuscAniProvEx.setText("");
    }
    private void butEliProvExtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butEliProvExtActionPerformed
            String ruc=txtBuscRucProvEx.getText();
        String sql="DELETE FROM provedorext Where RUC="+ruc;
        
        int els=JOptionPane.showConfirmDialog(null, "Esta seguro de eliminar Provedor?","Confirmacion",JOptionPane.YES_NO_OPTION);
        if(els==0){
            try {
                PreparedStatement pps=cn.prepareStatement(sql);
                pps.executeUpdate();
                JOptionPane.showMessageDialog(null, "Provedor Eliminado");
                limptxtProvExt();
            } catch (SQLException ex) {
                Logger.getLogger(FramePrincipal.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_butEliProvExtActionPerformed
    public void limptxtSucPri(){
        txtBuscNSucPri.setText("");
        txtBustelfSucPri.setText("");
        txtBuscDniSucPri.setText("");
        txtBusEncSucPri.setText("");
        txtBusDistSucPri.setText("");
        txtBuscDirSucPri.setText("");
    }
    private void butEliSucPriActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butEliSucPriActionPerformed
        String nrosuc=txtBuscNSucPri.getText();
        String sql="DELETE FROM sucursalpri Where NumeroSuc="+nrosuc;
        
        int els=JOptionPane.showConfirmDialog(null, "Esta seguro de eliminar Sucursal?","Confirmacion",JOptionPane.YES_NO_OPTION);
        if(els==0){
            try {
                PreparedStatement pps=cn.prepareStatement(sql);
                pps.executeUpdate();
                JOptionPane.showMessageDialog(null, "Sucursal Eliminado");
                limptxtSucPri();
            } catch (SQLException ex) {
                Logger.getLogger(FramePrincipal.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_butEliSucPriActionPerformed
    public void limptxtSucpro(){
        txtBuscNSucProv.setText("");
        txtBuscCodProSucProv.setText("");
        txtBuscCiudproSucProv.setText("");
        txtBuscEncSucProv.setText("");
        txtBuscTelSucProv.setText("");
        txtBuscProvSucProv.setText("");
        txtBuscDireproSucProv.setText("");
        txtBuscDNISucProv.setText("");
    }
    private void butEliSucproActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butEliSucproActionPerformed
        String nrosuc=txtBuscNSucProv.getText();
        String sql="DELETE FROM sucursalpro Where NumeroSuc="+nrosuc;
        
        int els=JOptionPane.showConfirmDialog(null, "Esta seguro de eliminar Sucursal?","Confirmacion",JOptionPane.YES_NO_OPTION);
        if(els==0){
            try {
                PreparedStatement pps=cn.prepareStatement(sql);
                pps.executeUpdate();
                JOptionPane.showMessageDialog(null, "Sucursal Eliminado");
                limptxtSucpro();
            } catch (SQLException ex) {
                Logger.getLogger(FramePrincipal.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_butEliSucproActionPerformed
    
    public void mostrartablaadmi(){
        tadmin = new DefaultTableModel();
        tadmin.addColumn("Nombre");
        tadmin.addColumn("Apellido");
        tadmin.addColumn("DNI");
        tadmin.addColumn("Año");
        tadmin.addColumn("Sueldo");
        tadmin.addColumn("Afiliación");
        tadmin.addColumn("SueldoBruto");
        tblOrdEmpAd.setModel(tadmin);
        
        String sql="Select * From empleadoad";
        String datos [] = new String [7];
        Statement st;
        
        try{
            st= cn.createStatement();
            ResultSet rs=st.executeQuery(sql);
            while(rs.next()){
                //Pasando datos para el calculo del SB
                int sueldo=rs.getInt("Sueldo");
                String afili=rs.getString("Afiliacion");
                IntDAdministrador ad = new IntDAdministrador(sueldo, afili);
                double sueldob=ad.sueldoBruto();
                datos[0]=rs.getString(1);
                datos[1]=rs.getString(2);
                datos[2]=rs.getString(3);
                datos[3]=rs.getString(4);
                datos[4]=rs.getString(5);
                datos[5]=rs.getString(6);
                datos[6]=String.valueOf(sueldob);
            }
            tblOrdEmpAd.setModel(tadmin);
        }catch(SQLException ex){
            Logger.getLogger(FrameProductos.class.getName()).log(Level.SEVERE,null,ex);
        }
    }
    
    public void mostrartablaadminNombre(){
        tadmin = new DefaultTableModel();
        tadmin.addColumn("Nombre");
        tadmin.addColumn("Apellido");
        tadmin.addColumn("DNI");
        tadmin.addColumn("Año");
        tadmin.addColumn("Sueldo");
        tadmin.addColumn("Afiliación");
        tadmin.addColumn("SueldoBruto");
        tblOrdEmpAd.setModel(tadmin);
        
        String sql="Select * From empleadoad ORDER BY Nombre;";
        String datos [] = new String [7];
        Statement st;
        
        try{
            st= cn.createStatement();
            ResultSet rs=st.executeQuery(sql);
            while(rs.next()){
                
                //Pasando datos para el calculo del SB
                int sueldo=rs.getInt("Sueldo");
                String afili=rs.getString("Afiliacion");
                IntDAdministrador ad = new IntDAdministrador(sueldo, afili);
                double sueldob=ad.sueldoBruto();
                
                
                datos[0]=rs.getString(1);
                datos[1]=rs.getString(2);
                datos[2]=rs.getString(3);
                datos[3]=rs.getString(4);
                datos[4]=rs.getString(5);
                datos[5]=rs.getString(6);
                datos[6]=String.valueOf(sueldob);
                tadmin.addRow(datos);
            }
            tblOrdEmpAd.setModel(tadmin);
        }catch(SQLException ex){
            Logger.getLogger(FrameProductos.class.getName()).log(Level.SEVERE,null,ex);
        }
    }
    
    public void mostrartablaadminApellido(){
        tadmin = new DefaultTableModel();
        tadmin.addColumn("Nombre");
        tadmin.addColumn("Apellido");
        tadmin.addColumn("DNI");
        tadmin.addColumn("Año");
        tadmin.addColumn("Sueldo");
        tadmin.addColumn("Afiliación");
        tadmin.addColumn("SueldoBruto");
        tblOrdEmpAd.setModel(tadmin);
        String sql="Select * From empleadoad ORDER BY Apellido;";
        String datos [] = new String [7];
        Statement st;
        try{
            st= cn.createStatement();
            ResultSet rs=st.executeQuery(sql);
            while(rs.next()){
                //Pasando datos para el calculo del SB
                int sueldo=rs.getInt("Sueldo");
                String afili=rs.getString("Afiliacion");
                IntDAdministrador ad = new IntDAdministrador(sueldo, afili);
                double sueldob=ad.sueldoBruto();
                datos[0]=rs.getString(1);
                datos[1]=rs.getString(2);
                datos[2]=rs.getString(3);
                datos[3]=rs.getString(4);
                datos[4]=rs.getString(5);
                datos[5]=rs.getString(6);
                datos[6]=String.valueOf(sueldob);
                tadmin.addRow(datos);
            }
            tblOrdEmpAd.setModel(tadmin);
        }catch(SQLException ex){
            Logger.getLogger(FrameProductos.class.getName()).log(Level.SEVERE,null,ex);
        }
    }
    
    public void mostrartablaadminDNI(){
        tadmin = new DefaultTableModel();
        tadmin.addColumn("Nombre");
        tadmin.addColumn("Apellido");
        tadmin.addColumn("DNI");
        tadmin.addColumn("Año");
        tadmin.addColumn("Sueldo");
        tadmin.addColumn("Afiliación");
        tadmin.addColumn("SueldoBruto");
        tblOrdEmpAd.setModel(tadmin);
        String sql="Select * From empleadoad ORDER BY DNI;";
        String datos [] = new String [7];
        Statement st;
        try{
            st= cn.createStatement();
            ResultSet rs=st.executeQuery(sql);
            while(rs.next()){
                //Pasando datos para el calculo del SB
                int sueldo=rs.getInt("Sueldo");
                String afili=rs.getString("Afiliacion");
                IntDAdministrador ad = new IntDAdministrador(sueldo, afili);
                double sueldob=ad.sueldoBruto();
                datos[0]=rs.getString(1);
                datos[1]=rs.getString(2);
                datos[2]=rs.getString(3);
                datos[3]=rs.getString(4);
                datos[4]=rs.getString(5);
                datos[5]=rs.getString(6);
                datos[6]=String.valueOf(sueldob);
                tadmin.addRow(datos);
            }
            tblOrdEmpAd.setModel(tadmin);
        }catch(SQLException ex){
            Logger.getLogger(FrameProductos.class.getName()).log(Level.SEVERE,null,ex);
        }
    }
    
    public void mostrartablaadminAnio(){
        tadmin = new DefaultTableModel();
        tadmin.addColumn("Nombre");
        tadmin.addColumn("Apellido");
        tadmin.addColumn("DNI");
        tadmin.addColumn("Año");
        tadmin.addColumn("Sueldo");
        tadmin.addColumn("Afiliación");
        tadmin.addColumn("SueldoBruto");
        tblOrdEmpAd.setModel(tadmin);
        String sql="Select * From empleadoad ORDER BY AnioIng;";
        String datos [] = new String [7];
        Statement st;
        try{
            st= cn.createStatement();
            ResultSet rs=st.executeQuery(sql);
            while(rs.next()){
                
                //Pasando datos para el calculo del SB
                int sueldo=rs.getInt("Sueldo");
                String afili=rs.getString("Afiliacion");
                IntDAdministrador ad = new IntDAdministrador(sueldo, afili);
                double sueldob=ad.sueldoBruto();
                datos[0]=rs.getString(1);
                datos[1]=rs.getString(2);
                datos[2]=rs.getString(3);
                datos[3]=rs.getString(4);
                datos[4]=rs.getString(5);
                datos[5]=rs.getString(6);
                datos[6]=String.valueOf(sueldob);
                tadmin.addRow(datos);
            }
            tblOrdEmpAd.setModel(tadmin);
        }catch(SQLException ex){
            Logger.getLogger(FrameProductos.class.getName()).log(Level.SEVERE,null,ex);
        }
    }
    
    public void mostrartablaEmple(){
        temple= new DefaultTableModel();
        temple.addColumn("Nombre");
        temple.addColumn("Apellido");
        temple.addColumn("Dni");
        temple.addColumn("Tipo");
        temple.addColumn("Sueldo Inicial");
        temple.addColumn("Sueldo Bruto");
        tblordEmple.setModel(temple);
        
        String sql="Select * From empleado";
        String datos []= new String [6];
        Statement st;
        try{
            st= cn.createStatement();
            ResultSet rs=st.executeQuery(sql);
            while(rs.next()){
                String tipo=rs.getNString("Tipo");
                IntDEmpleado em= new IntDEmpleado(tipo);
                int sueldoIni=em.sueldoInicial();
                double sueldobruto=em.sueldoBruto();
                datos[0]=rs.getString(1);
                datos[1]=rs.getString(2);
                datos[2]=rs.getString(3);
                datos[3]=rs.getString(4);
                datos[4]=String.valueOf(sueldoIni);
                datos[5]=String.valueOf(sueldobruto);
                temple.addRow(datos);
            }
            tblordEmple.setModel(temple);
        }catch(SQLException ex){
            Logger.getLogger(FrameProductos.class.getName()).log(Level.SEVERE,null,ex);
        }
    }
    
    public void mostrartablaEmpleNom(){
        temple= new DefaultTableModel();
        temple.addColumn("Nombre");
        temple.addColumn("Apellido");
        temple.addColumn("Dni");
        temple.addColumn("Tipo");
        temple.addColumn("Sueldo Inicial");
        temple.addColumn("Sueldo Bruto");
        tblordEmple.setModel(temple);
        
        String sql="Select * From empleado ORDER BY Nombre;";
        String datos []= new String [6];
        Statement st;
        try{
            st= cn.createStatement();
            ResultSet rs=st.executeQuery(sql);
            while(rs.next()){
                String tipo=rs.getNString("Tipo");
                IntDEmpleado em= new IntDEmpleado(tipo);
                int sueldoIni=em.sueldoInicial();
                double sueldobruto=em.sueldoBruto();
                datos[0]=rs.getString(1);
                datos[1]=rs.getString(2);
                datos[2]=rs.getString(3);
                datos[3]=rs.getString(4);
                datos[4]=String.valueOf(sueldoIni);
                datos[5]=String.valueOf(sueldobruto);
                temple.addRow(datos);
            }
            tblordEmple.setModel(temple);
        }catch(SQLException ex){
            Logger.getLogger(FrameProductos.class.getName()).log(Level.SEVERE,null,ex);
        }
    }
    
    public void mostrartablaEmpleApe(){
        temple= new DefaultTableModel();
        temple.addColumn("Nombre");
        temple.addColumn("Apellido");
        temple.addColumn("Dni");
        temple.addColumn("Tipo");
        temple.addColumn("Sueldo Inicial");
        temple.addColumn("Sueldo Bruto");
        tblordEmple.setModel(temple);
        
        String sql="Select * From empleado ORDER BY Apellido";
        String datos []= new String [6];
        Statement st;
        try{
            st= cn.createStatement();
            ResultSet rs=st.executeQuery(sql);
            while(rs.next()){
                String tipo=rs.getNString("Tipo");
                IntDEmpleado em= new IntDEmpleado(tipo);
                int sueldoIni=em.sueldoInicial();
                double sueldobruto=em.sueldoBruto();
                datos[0]=rs.getString(1);
                datos[1]=rs.getString(2);
                datos[2]=rs.getString(3);
                datos[3]=rs.getString(4);
                datos[4]=String.valueOf(sueldoIni);
                datos[5]=String.valueOf(sueldobruto);
                temple.addRow(datos);
            }
            tblordEmple.setModel(temple);
        }catch(SQLException ex){
            Logger.getLogger(FrameProductos.class.getName()).log(Level.SEVERE,null,ex);
        }
    }
    
    public void mostrartablaEmpleDni(){
        temple= new DefaultTableModel();
        temple.addColumn("Nombre");
        temple.addColumn("Apellido");
        temple.addColumn("Dni");
        temple.addColumn("Tipo");
        temple.addColumn("Sueldo Inicial");
        temple.addColumn("Sueldo Bruto");
        tblordEmple.setModel(temple);
        
        String sql="Select * From empleado ORDER BY DNI;";
        String datos []= new String [6];
        Statement st;
        try{
            st= cn.createStatement();
            ResultSet rs=st.executeQuery(sql);
            while(rs.next()){
                String tipo=rs.getNString("Tipo");
                IntDEmpleado em= new IntDEmpleado(tipo);
                int sueldoIni=em.sueldoInicial();
                double sueldobruto=em.sueldoBruto();
                datos[0]=rs.getString(1);
                datos[1]=rs.getString(2);
                datos[2]=rs.getString(3);
                datos[3]=rs.getString(4);
                datos[4]=String.valueOf(sueldoIni);
                datos[5]=String.valueOf(sueldobruto);
                temple.addRow(datos);
            }
            tblordEmple.setModel(temple);
        }catch(SQLException ex){
            Logger.getLogger(FrameProductos.class.getName()).log(Level.SEVERE,null,ex);
        }
    }
    
    public void mostrartablaEmpleTipo(){
        temple= new DefaultTableModel();
        temple.addColumn("Nombre");
        temple.addColumn("Apellido");
        temple.addColumn("Dni");
        temple.addColumn("Tipo");
        temple.addColumn("Sueldo Inicial");
        temple.addColumn("Sueldo Bruto");
        tblordEmple.setModel(temple);
        
        String sql="Select * From empleado ORDER BY Tipo;";
        String datos []= new String [6];
        Statement st;
        try{
            st= cn.createStatement();
            ResultSet rs=st.executeQuery(sql);
            while(rs.next()){
                String tipo=rs.getNString("Tipo");
                IntDEmpleado em= new IntDEmpleado(tipo);
                int sueldoIni=em.sueldoInicial();
                double sueldobruto=em.sueldoBruto();
                datos[0]=rs.getString(1);
                datos[1]=rs.getString(2);
                datos[2]=rs.getString(3);
                datos[3]=rs.getString(4);
                datos[4]=String.valueOf(sueldoIni);
                datos[5]=String.valueOf(sueldobruto);
                temple.addRow(datos);
            }
            tblordEmple.setModel(temple);
        }catch(SQLException ex){
            Logger.getLogger(FrameProductos.class.getName()).log(Level.SEVERE,null,ex);
        }
    }
    
    public void mostrartabProdhigi(){
        tHigiene = new DefaultTableModel();
        tHigiene.addColumn("Código");
        tHigiene.addColumn("Nombre");
        tHigiene.addColumn("Tipo fabricado");
        tHigiene.addColumn("Tipo");
        tHigiene.addColumn("Contenido");
        tHigiene.addColumn("Precio");
        tHigiene.addColumn("Stock");
        tHigiene.addColumn("RUC Proveedor");
        tHigiene.addColumn("COSTO TOTAL");
        tblordProdHigi.setModel(tHigiene);
        String sql="Select * From prohigi";
        String datos [] = new String [9];
        Statement st;
        try{
            st= cn.createStatement();
            ResultSet rs=st.executeQuery(sql);
            while(rs.next()){
                //usando la clase generica
                double precio=rs.getDouble("Precio");
                int Stock = rs.getInt("Stock");
                Generico1<Double,Integer> generico = new Generico1<>(precio,Stock);
                double total=generico.multiplicar();
                datos[0]=rs.getString(1);
                datos[1]=rs.getString(2);
                datos[2]=rs.getString(3);
                datos[3]=rs.getString(4);
                datos[4]=rs.getString(5);
                datos[5]=rs.getString(6);
                datos[6]=rs.getString(7);
                datos[7]=rs.getString(8);
                datos[8]=String.valueOf(total);
                tHigiene.addRow(datos);
            }
            tblordProdHigi.setModel(tHigiene);
        }catch(SQLException ex){
            Logger.getLogger(FrameProductos.class.getName()).log(Level.SEVERE,null,ex);
        }
    }
    
    public void mostrartabProdhigicod(){
        tHigiene = new DefaultTableModel();
        tHigiene.addColumn("Código");
        tHigiene.addColumn("Nombre");
        tHigiene.addColumn("Tipo fabricado");
        tHigiene.addColumn("Tipo");
        tHigiene.addColumn("Contenido");
        tHigiene.addColumn("Precio");
        tHigiene.addColumn("Stock");
        tHigiene.addColumn("RUC Proveedor");
        tHigiene.addColumn("COSTO TOTAL");
        tblordProdHigi.setModel(tHigiene);
        String sql="Select * From prohigi ORDER BY Codigo";
        String datos [] = new String [9];
        Statement st;
        try{
            st= cn.createStatement();
            ResultSet rs=st.executeQuery(sql);
            while(rs.next()){
                //usando la clase generica
                double precio=rs.getDouble("Precio");
                int Stock = rs.getInt("Stock");
                Generico1<Double,Integer> generico = new Generico1<>(precio,Stock);
                double total=generico.multiplicar();
                datos[0]=rs.getString(1);
                datos[1]=rs.getString(2);
                datos[2]=rs.getString(3);
                datos[3]=rs.getString(4);
                datos[4]=rs.getString(5);
                datos[5]=rs.getString(6);
                datos[6]=rs.getString(7);
                datos[7]=rs.getString(8);
                datos[8]=String.valueOf(total);
                tHigiene.addRow(datos);
            }
            tblordProdHigi.setModel(tHigiene);
        }catch(SQLException ex){
            Logger.getLogger(FrameProductos.class.getName()).log(Level.SEVERE,null,ex);
        }
    }
    
    public void mostrartabProdhiginom(){
        tHigiene = new DefaultTableModel();
        tHigiene.addColumn("Código");
        tHigiene.addColumn("Nombre");
        tHigiene.addColumn("Tipo fabricado");
        tHigiene.addColumn("Tipo");
        tHigiene.addColumn("Contenido");
        tHigiene.addColumn("Precio");
        tHigiene.addColumn("Stock");
        tHigiene.addColumn("RUC Proveedor");
        tHigiene.addColumn("COSTO TOTAL");
        tblordProdHigi.setModel(tHigiene);
        String sql="Select * From prohigi ORDER BY Nombreprod";
        String datos [] = new String [9];
        Statement st;
        try{
            st= cn.createStatement();
            ResultSet rs=st.executeQuery(sql);
            while(rs.next()){
                //usando la clase generica
                double precio=rs.getDouble("Precio");
                int Stock = rs.getInt("Stock");
                Generico1<Double,Integer> generico = new Generico1<>(precio,Stock);
                double total=generico.multiplicar();
                datos[0]=rs.getString(1);
                datos[1]=rs.getString(2);
                datos[2]=rs.getString(3);
                datos[3]=rs.getString(4);
                datos[4]=rs.getString(5);
                datos[5]=rs.getString(6);
                datos[6]=rs.getString(7);
                datos[7]=rs.getString(8);
                datos[8]=String.valueOf(total);
                tHigiene.addRow(datos);
            }
            tblordProdHigi.setModel(tHigiene);
        }catch(SQLException ex){
            Logger.getLogger(FrameProductos.class.getName()).log(Level.SEVERE,null,ex);
        }
    }
    
    public void mostrartabProdhigitipfab(){
        tHigiene = new DefaultTableModel();
        tHigiene.addColumn("Código");
        tHigiene.addColumn("Nombre");
        tHigiene.addColumn("Tipo fabricado");
        tHigiene.addColumn("Tipo");
        tHigiene.addColumn("Contenido");
        tHigiene.addColumn("Precio");
        tHigiene.addColumn("Stock");
        tHigiene.addColumn("RUC Proveedor");
        tHigiene.addColumn("COSTO TOTAL");
        tblordProdHigi.setModel(tHigiene);
        String sql="Select * From prohigi ORDER BY TipFabri";
        String datos [] = new String [9];
        Statement st;
        try{
            st= cn.createStatement();
            ResultSet rs=st.executeQuery(sql);
            while(rs.next()){
                //usando la clase generica
                double precio=rs.getDouble("Precio");
                int Stock = rs.getInt("Stock");
                Generico1<Double,Integer> generico = new Generico1<>(precio,Stock);
                double total=generico.multiplicar();
                datos[0]=rs.getString(1);
                datos[1]=rs.getString(2);
                datos[2]=rs.getString(3);
                datos[3]=rs.getString(4);
                datos[4]=rs.getString(5);
                datos[5]=rs.getString(6);
                datos[6]=rs.getString(7);
                datos[7]=rs.getString(8);
                datos[8]=String.valueOf(total);
                tHigiene.addRow(datos);
            }
            tblordProdHigi.setModel(tHigiene);
        }catch(SQLException ex){
            Logger.getLogger(FrameProductos.class.getName()).log(Level.SEVERE,null,ex);
        }
    }
    
    public void mostrartabProdhigiTip(){
        tHigiene = new DefaultTableModel();
        tHigiene.addColumn("Código");
        tHigiene.addColumn("Nombre");
        tHigiene.addColumn("Tipo fabricado");
        tHigiene.addColumn("Tipo");
        tHigiene.addColumn("Contenido");
        tHigiene.addColumn("Precio");
        tHigiene.addColumn("Stock");
        tHigiene.addColumn("RUC Proveedor");
        tHigiene.addColumn("COSTO TOTAL");
        tblordProdHigi.setModel(tHigiene);
        String sql="Select * From prohigi ORDER BY Tipo";
        String datos [] = new String [9];
        Statement st;
        try{
            st= cn.createStatement();
            ResultSet rs=st.executeQuery(sql);
            while(rs.next()){
                //usando la clase generica
                double precio=rs.getDouble("Precio");
                int Stock = rs.getInt("Stock");
                Generico1<Double,Integer> generico = new Generico1<>(precio,Stock);
                double total=generico.multiplicar();
                datos[0]=rs.getString(1);
                datos[1]=rs.getString(2);
                datos[2]=rs.getString(3);
                datos[3]=rs.getString(4);
                datos[4]=rs.getString(5);
                datos[5]=rs.getString(6);
                datos[6]=rs.getString(7);
                datos[7]=rs.getString(8);
                datos[8]=String.valueOf(total);
                tHigiene.addRow(datos);
            }
            tblordProdHigi.setModel(tHigiene);
        }catch(SQLException ex){
            Logger.getLogger(FrameProductos.class.getName()).log(Level.SEVERE,null,ex);
        }
    }
    
    public void mostrartabProdhigicont(){
        tHigiene = new DefaultTableModel();
        tHigiene.addColumn("Código");
        tHigiene.addColumn("Nombre");
        tHigiene.addColumn("Tipo fabricado");
        tHigiene.addColumn("Tipo");
        tHigiene.addColumn("Contenido");
        tHigiene.addColumn("Precio");
        tHigiene.addColumn("Stock");
        tHigiene.addColumn("RUC Proveedor");
        tHigiene.addColumn("COSTO TOTAL");
        tblordProdHigi.setModel(tHigiene);
        String sql="Select * From prohigi ORDER BY Contenido";
        String datos [] = new String [9];
        Statement st;
        try{
            st= cn.createStatement();
            ResultSet rs=st.executeQuery(sql);
            while(rs.next()){
                //usando la clase generica
                double precio=rs.getDouble("Precio");
                int Stock = rs.getInt("Stock");
                Generico1<Double,Integer> generico = new Generico1<>(precio,Stock);
                double total=generico.multiplicar();
                datos[0]=rs.getString(1);
                datos[1]=rs.getString(2);
                datos[2]=rs.getString(3);
                datos[3]=rs.getString(4);
                datos[4]=rs.getString(5);
                datos[5]=rs.getString(6);
                datos[6]=rs.getString(7);
                datos[7]=rs.getString(8);
                datos[8]=String.valueOf(total);
                tHigiene.addRow(datos);
            }
            tblordProdHigi.setModel(tHigiene);
        }catch(SQLException ex){
            Logger.getLogger(FrameProductos.class.getName()).log(Level.SEVERE,null,ex);
        }
    }
    
    public void mostrartabProdhigiprec(){
        tHigiene = new DefaultTableModel();
        tHigiene.addColumn("Código");
        tHigiene.addColumn("Nombre");
        tHigiene.addColumn("Tipo fabricado");
        tHigiene.addColumn("Tipo");
        tHigiene.addColumn("Contenido");
        tHigiene.addColumn("Precio");
        tHigiene.addColumn("Stock");
        tHigiene.addColumn("RUC Proveedor");
        tHigiene.addColumn("COSTO TOTAL");
        tblordProdHigi.setModel(tHigiene);
        String sql="Select * From prohigi ORDER BY Precio";
        String datos [] = new String [9];
        Statement st;
        try{
            st= cn.createStatement();
            ResultSet rs=st.executeQuery(sql);
            while(rs.next()){
                //usando la clase generica
                double precio=rs.getDouble("Precio");
                int Stock = rs.getInt("Stock");
                Generico1<Double,Integer> generico = new Generico1<>(precio,Stock);
                double total=generico.multiplicar();
                datos[0]=rs.getString(1);
                datos[1]=rs.getString(2);
                datos[2]=rs.getString(3);
                datos[3]=rs.getString(4);
                datos[4]=rs.getString(5);
                datos[5]=rs.getString(6);
                datos[6]=rs.getString(7);
                datos[7]=rs.getString(8);
                datos[8]=String.valueOf(total);
                tHigiene.addRow(datos);
            }
            tblordProdHigi.setModel(tHigiene);
        }catch(SQLException ex){
            Logger.getLogger(FrameProductos.class.getName()).log(Level.SEVERE,null,ex);
        }
    }
    
    public void mostrartabProdhigiStock(){
        tHigiene = new DefaultTableModel();
        tHigiene.addColumn("Código");
        tHigiene.addColumn("Nombre");
        tHigiene.addColumn("Tipo fabricado");
        tHigiene.addColumn("Tipo");
        tHigiene.addColumn("Contenido");
        tHigiene.addColumn("Precio");
        tHigiene.addColumn("Stock");
        tHigiene.addColumn("RUC Proveedor");
        tHigiene.addColumn("COSTO TOTAL");
        tblordProdHigi.setModel(tHigiene);
        String sql="Select * From prohigi ORDER BY Stock";
        String datos [] = new String [9];
        Statement st;
        try{
            st= cn.createStatement();
            ResultSet rs=st.executeQuery(sql);
            while(rs.next()){
                //usando la clase generica
                double precio=rs.getDouble("Precio");
                int Stock = rs.getInt("Stock");
                Generico1<Double,Integer> generico = new Generico1<>(precio,Stock);
                double total=generico.multiplicar();
                datos[0]=rs.getString(1);
                datos[1]=rs.getString(2);
                datos[2]=rs.getString(3);
                datos[3]=rs.getString(4);
                datos[4]=rs.getString(5);
                datos[5]=rs.getString(6);
                datos[6]=rs.getString(7);
                datos[7]=rs.getString(8);
                datos[8]=String.valueOf(total);
                tHigiene.addRow(datos);
            }
            tblordProdHigi.setModel(tHigiene);
        }catch(SQLException ex){
            Logger.getLogger(FrameProductos.class.getName()).log(Level.SEVERE,null,ex);
        }
    }
    
    public void mostrartabProdhigiruc(){
        tHigiene = new DefaultTableModel();
        tHigiene.addColumn("Código");
        tHigiene.addColumn("Nombre");
        tHigiene.addColumn("Tipo fabricado");
        tHigiene.addColumn("Tipo");
        tHigiene.addColumn("Contenido");
        tHigiene.addColumn("Precio");
        tHigiene.addColumn("Stock");
        tHigiene.addColumn("RUC Proveedor");
        tHigiene.addColumn("COSTO TOTAL");
        tblordProdHigi.setModel(tHigiene);
        String sql="Select * From prohigi ORDER BY RucProv";
        String datos [] = new String [9];
        Statement st;
        try{
            st= cn.createStatement();
            ResultSet rs=st.executeQuery(sql);
            while(rs.next()){
                //usando la clase generica
                double precio=rs.getDouble("Precio");
                int Stock = rs.getInt("Stock");
                Generico1<Double,Integer> generico = new Generico1<>(precio,Stock);
                double total=generico.multiplicar();
                datos[0]=rs.getString(1);
                datos[1]=rs.getString(2);
                datos[2]=rs.getString(3);
                datos[3]=rs.getString(4);
                datos[4]=rs.getString(5);
                datos[5]=rs.getString(6);
                datos[6]=rs.getString(7);
                datos[7]=rs.getString(8);
                datos[8]=String.valueOf(total);
                tHigiene.addRow(datos);
            }
            tblordProdHigi.setModel(tHigiene);
        }catch(SQLException ex){
            Logger.getLogger(FrameProductos.class.getName()).log(Level.SEVERE,null,ex);
        }
    }
    
    private void mostrartablaprocomes(){
        
        tComida = new DefaultTableModel();
        tComida.addColumn("Código");
        tComida.addColumn("Nombre");
        tComida.addColumn("Tipo");
        tComida.addColumn("Precio");
        tComida.addColumn("Stock");
        tComida.addColumn("Caducidad");
        tComida.addColumn("RUC. Proveedor");
        tComida.addColumn("COSTO TOTAL");
        tblordProdComes.setModel(tComida);
        
        String sql="Select * From procomes";
        String datos [] = new String [8];
        Statement st;
        
        try{
            st= cn.createStatement();
            ResultSet rs=st.executeQuery(sql);
            while(rs.next()){
                
                //usando la clase generica
                double precio=rs.getDouble("Precio");
                int Stock = rs.getInt("Stock");
                Generico1<Double,Integer> generico = new Generico1<>(precio,Stock);
                double total=generico.multiplicar();
                
                datos[0]=rs.getString(1);
                datos[1]=rs.getString(2);
                datos[2]=rs.getString(3);
                datos[3]=rs.getString(4);
                datos[4]=rs.getString(5);
                datos[5]=rs.getString(6);
                datos[6]=rs.getString(7);
                datos[7]=String.valueOf(total);
                tComida.addRow(datos);
            }
            tblordProdComes.setModel(tComida);
        }catch(SQLException ex){
            Logger.getLogger(FrameProductos.class.getName()).log(Level.SEVERE,null,ex);
        }
    }

    private void mostrartablaprocomescod(){
        
        tComida = new DefaultTableModel();
        tComida.addColumn("Código");
        tComida.addColumn("Nombre");
        tComida.addColumn("Tipo");
        tComida.addColumn("Precio");
        tComida.addColumn("Stock");
        tComida.addColumn("Caducidad");
        tComida.addColumn("RUC. Proveedor");
        tComida.addColumn("COSTO TOTAL");
        tblordProdComes.setModel(tComida);
        
        String sql="Select * From procomes ORDER BY Codigo";
        String datos [] = new String [8];
        Statement st;
        
        try{
            st= cn.createStatement();
            ResultSet rs=st.executeQuery(sql);
            while(rs.next()){
                
                //usando la clase generica
                double precio=rs.getDouble("Precio");
                int Stock = rs.getInt("Stock");
                Generico1<Double,Integer> generico = new Generico1<>(precio,Stock);
                double total=generico.multiplicar();
                
                datos[0]=rs.getString(1);
                datos[1]=rs.getString(2);
                datos[2]=rs.getString(3);
                datos[3]=rs.getString(4);
                datos[4]=rs.getString(5);
                datos[5]=rs.getString(6);
                datos[6]=rs.getString(7);
                datos[7]=String.valueOf(total);
                tComida.addRow(datos);
            }
            tblordProdComes.setModel(tComida);
        }catch(SQLException ex){
            Logger.getLogger(FrameProductos.class.getName()).log(Level.SEVERE,null,ex);
        }
    }

    private void mostrartablaprocomesnom(){
        
        tComida = new DefaultTableModel();
        tComida.addColumn("Código");
        tComida.addColumn("Nombre");
        tComida.addColumn("Tipo");
        tComida.addColumn("Precio");
        tComida.addColumn("Stock");
        tComida.addColumn("Caducidad");
        tComida.addColumn("RUC. Proveedor");
        tComida.addColumn("COSTO TOTAL");
        tblordProdComes.setModel(tComida);
        
        String sql="Select * From procomes ORDER BY Nombreprod";
        String datos [] = new String [8];
        Statement st;
        
        try{
            st= cn.createStatement();
            ResultSet rs=st.executeQuery(sql);
            while(rs.next()){
                
                //usando la clase generica
                double precio=rs.getDouble("Precio");
                int Stock = rs.getInt("Stock");
                Generico1<Double,Integer> generico = new Generico1<>(precio,Stock);
                double total=generico.multiplicar();
                
                datos[0]=rs.getString(1);
                datos[1]=rs.getString(2);
                datos[2]=rs.getString(3);
                datos[3]=rs.getString(4);
                datos[4]=rs.getString(5);
                datos[5]=rs.getString(6);
                datos[6]=rs.getString(7);
                datos[7]=String.valueOf(total);
                tComida.addRow(datos);
            }
            tblordProdComes.setModel(tComida);
        }catch(SQLException ex){
            Logger.getLogger(FrameProductos.class.getName()).log(Level.SEVERE,null,ex);
        }
    }

    private void mostrartablaprocomesTipo(){
        
        tComida = new DefaultTableModel();
        tComida.addColumn("Código");
        tComida.addColumn("Nombre");
        tComida.addColumn("Tipo");
        tComida.addColumn("Precio");
        tComida.addColumn("Stock");
        tComida.addColumn("Caducidad");
        tComida.addColumn("RUC. Proveedor");
        tComida.addColumn("COSTO TOTAL");
        tblordProdComes.setModel(tComida);
        
        String sql="Select * From procomes ORDER BY Tipo";
        String datos [] = new String [8];
        Statement st;
        
        try{
            st= cn.createStatement();
            ResultSet rs=st.executeQuery(sql);
            while(rs.next()){
                
                //usando la clase generica
                double precio=rs.getDouble("Precio");
                int Stock = rs.getInt("Stock");
                Generico1<Double,Integer> generico = new Generico1<>(precio,Stock);
                double total=generico.multiplicar();
                
                datos[0]=rs.getString(1);
                datos[1]=rs.getString(2);
                datos[2]=rs.getString(3);
                datos[3]=rs.getString(4);
                datos[4]=rs.getString(5);
                datos[5]=rs.getString(6);
                datos[6]=rs.getString(7);
                datos[7]=String.valueOf(total);
                tComida.addRow(datos);
            }
            tblordProdComes.setModel(tComida);
        }catch(SQLException ex){
            Logger.getLogger(FrameProductos.class.getName()).log(Level.SEVERE,null,ex);
        }
    }

    private void mostrartablaprocomesPrec(){
        
        tComida = new DefaultTableModel();
        tComida.addColumn("Código");
        tComida.addColumn("Nombre");
        tComida.addColumn("Tipo");
        tComida.addColumn("Precio");
        tComida.addColumn("Stock");
        tComida.addColumn("Caducidad");
        tComida.addColumn("RUC. Proveedor");
        tComida.addColumn("COSTO TOTAL");
        tblordProdComes.setModel(tComida);
        
        String sql="Select * From procomes ORDER BY Precio";
        String datos [] = new String [8];
        Statement st;
        
        try{
            st= cn.createStatement();
            ResultSet rs=st.executeQuery(sql);
            while(rs.next()){
                
                //usando la clase generica
                double precio=rs.getDouble("Precio");
                int Stock = rs.getInt("Stock");
                Generico1<Double,Integer> generico = new Generico1<>(precio,Stock);
                double total=generico.multiplicar();
                
                datos[0]=rs.getString(1);
                datos[1]=rs.getString(2);
                datos[2]=rs.getString(3);
                datos[3]=rs.getString(4);
                datos[4]=rs.getString(5);
                datos[5]=rs.getString(6);
                datos[6]=rs.getString(7);
                datos[7]=String.valueOf(total);
                tComida.addRow(datos);
            }
            tblordProdComes.setModel(tComida);
        }catch(SQLException ex){
            Logger.getLogger(FrameProductos.class.getName()).log(Level.SEVERE,null,ex);
        }
    }

    private void mostrartablaprocomesstock(){
        
        tComida = new DefaultTableModel();
        tComida.addColumn("Código");
        tComida.addColumn("Nombre");
        tComida.addColumn("Tipo");
        tComida.addColumn("Precio");
        tComida.addColumn("Stock");
        tComida.addColumn("Caducidad");
        tComida.addColumn("RUC. Proveedor");
        tComida.addColumn("COSTO TOTAL");
        tblordProdComes.setModel(tComida);
        
        String sql="Select * From procomes ORDER BY Stock";
        String datos [] = new String [8];
        Statement st;
        
        try{
            st= cn.createStatement();
            ResultSet rs=st.executeQuery(sql);
            while(rs.next()){
                
                //usando la clase generica
                double precio=rs.getDouble("Precio");
                int Stock = rs.getInt("Stock");
                Generico1<Double,Integer> generico = new Generico1<>(precio,Stock);
                double total=generico.multiplicar();
                
                datos[0]=rs.getString(1);
                datos[1]=rs.getString(2);
                datos[2]=rs.getString(3);
                datos[3]=rs.getString(4);
                datos[4]=rs.getString(5);
                datos[5]=rs.getString(6);
                datos[6]=rs.getString(7);
                datos[7]=String.valueOf(total);
                tComida.addRow(datos);
            }
            tblordProdComes.setModel(tComida);
        }catch(SQLException ex){
            Logger.getLogger(FrameProductos.class.getName()).log(Level.SEVERE,null,ex);
        }
    }

    private void mostrartablaprocomescadu(){
        
        tComida = new DefaultTableModel();
        tComida.addColumn("Código");
        tComida.addColumn("Nombre");
        tComida.addColumn("Tipo");
        tComida.addColumn("Precio");
        tComida.addColumn("Stock");
        tComida.addColumn("Caducidad");
        tComida.addColumn("RUC. Proveedor");
        tComida.addColumn("COSTO TOTAL");
        tblordProdComes.setModel(tComida);
        
        String sql="Select * From procomes ORDER BY Caducidad";
        String datos [] = new String [8];
        Statement st;
        
        try{
            st= cn.createStatement();
            ResultSet rs=st.executeQuery(sql);
            while(rs.next()){
                
                //usando la clase generica
                double precio=rs.getDouble("Precio");
                int Stock = rs.getInt("Stock");
                Generico1<Double,Integer> generico = new Generico1<>(precio,Stock);
                double total=generico.multiplicar();
                
                datos[0]=rs.getString(1);
                datos[1]=rs.getString(2);
                datos[2]=rs.getString(3);
                datos[3]=rs.getString(4);
                datos[4]=rs.getString(5);
                datos[5]=rs.getString(6);
                datos[6]=rs.getString(7);
                datos[7]=String.valueOf(total);
                tComida.addRow(datos);
            }
            tblordProdComes.setModel(tComida);
        }catch(SQLException ex){
            Logger.getLogger(FrameProductos.class.getName()).log(Level.SEVERE,null,ex);
        }
    }

    private void mostrartablaprocomesruc(){
        
        tComida = new DefaultTableModel();
        tComida.addColumn("Código");
        tComida.addColumn("Nombre");
        tComida.addColumn("Tipo");
        tComida.addColumn("Precio");
        tComida.addColumn("Stock");
        tComida.addColumn("Caducidad");
        tComida.addColumn("RUC. Proveedor");
        tComida.addColumn("COSTO TOTAL");
        tblordProdComes.setModel(tComida);
        
        String sql="Select * From procomes ORDER BY RucProv";
        String datos [] = new String [8];
        Statement st;
        
        try{
            st= cn.createStatement();
            ResultSet rs=st.executeQuery(sql);
            while(rs.next()){
                
                //usando la clase generica
                double precio=rs.getDouble("Precio");
                int Stock = rs.getInt("Stock");
                Generico1<Double,Integer> generico = new Generico1<>(precio,Stock);
                double total=generico.multiplicar();
                
                datos[0]=rs.getString(1);
                datos[1]=rs.getString(2);
                datos[2]=rs.getString(3);
                datos[3]=rs.getString(4);
                datos[4]=rs.getString(5);
                datos[5]=rs.getString(6);
                datos[6]=rs.getString(7);
                datos[7]=String.valueOf(total);
                tComida.addRow(datos);
            }
            tblordProdComes.setModel(tComida);
        }catch(SQLException ex){
            Logger.getLogger(FrameProductos.class.getName()).log(Level.SEVERE,null,ex);
        }
    }
    
    private void mostrartablapromake(){
        
        tMakeup = new DefaultTableModel();
        tMakeup.addColumn("Código");
        tMakeup.addColumn("Nombre");
        tMakeup.addColumn("Precio");
        tMakeup.addColumn("Stock");
        tMakeup.addColumn("Fabricados");
        tMakeup.addColumn("Tipos");
        tMakeup.addColumn("Tonos");
        tMakeup.addColumn("Dirigido para:");
        tMakeup.addColumn("RUC. Proveedor");
        tMakeup.addColumn("COSTO TOTAL");
        tblordProdMake.setModel(tMakeup);
        
        String sql="Select * From promakeup";
        String datos [] = new String [10];
        Statement st;
        
        
        
        try{
            st= cn.createStatement();
            ResultSet rs=st.executeQuery(sql);
            while(rs.next()){
                
                //usando la clase generica
                double precio=rs.getDouble("Precio");
                int Stock = rs.getInt("Stock");
                Generico1<Double,Integer> generico = new Generico1<>(precio,Stock);
                double total=generico.multiplicar();
                
                datos[0]=rs.getString(1);
                datos[1]=rs.getString(2);
                datos[2]=rs.getString(3);
                datos[3]=rs.getString(4);
                datos[4]=rs.getString(5);
                datos[5]=rs.getString(6);
                datos[6]=rs.getString(7);
                datos[7]=rs.getString(8);
                datos[8]=rs.getString(9);
                datos[9]=String.valueOf(total);
                tMakeup.addRow(datos);
            }
            tblordProdMake.setModel(tMakeup);
        }catch(SQLException ex){
            Logger.getLogger(FrameProductos.class.getName()).log(Level.SEVERE,null,ex);
        }
    }
    
    private void mostrartablapromakeCod(){
        
        tMakeup = new DefaultTableModel();
        tMakeup.addColumn("Código");
        tMakeup.addColumn("Nombre");
        tMakeup.addColumn("Precio");
        tMakeup.addColumn("Stock");
        tMakeup.addColumn("Fabricados");
        tMakeup.addColumn("Tipos");
        tMakeup.addColumn("Tonos");
        tMakeup.addColumn("Dirigido para:");
        tMakeup.addColumn("RUC. Proveedor");
        tMakeup.addColumn("COSTO TOTAL");
        tblordProdMake.setModel(tMakeup);
        
        String sql="Select * From promakeup ORDER BY Codigo";
        String datos [] = new String [10];
        Statement st;
        try{
            st= cn.createStatement();
            ResultSet rs=st.executeQuery(sql);
            while(rs.next()){
                
                //usando la clase generica
                double precio=rs.getDouble("Precio");
                int Stock = rs.getInt("Stock");
                Generico1<Double,Integer> generico = new Generico1<>(precio,Stock);
                double total=generico.multiplicar();
                
                datos[0]=rs.getString(1);
                datos[1]=rs.getString(2);
                datos[2]=rs.getString(3);
                datos[3]=rs.getString(4);
                datos[4]=rs.getString(5);
                datos[5]=rs.getString(6);
                datos[6]=rs.getString(7);
                datos[7]=rs.getString(8);
                datos[8]=rs.getString(9);
                datos[9]=String.valueOf(total);
                tMakeup.addRow(datos);
            }
            tblordProdMake.setModel(tMakeup);
        }catch(SQLException ex){
            Logger.getLogger(FrameProductos.class.getName()).log(Level.SEVERE,null,ex);
        }
    }
    
    private void mostrartablapromakeNombre(){
        
        tMakeup = new DefaultTableModel();
        tMakeup.addColumn("Código");
        tMakeup.addColumn("Nombre");
        tMakeup.addColumn("Precio");
        tMakeup.addColumn("Stock");
        tMakeup.addColumn("Fabricados");
        tMakeup.addColumn("Tipos");
        tMakeup.addColumn("Tonos");
        tMakeup.addColumn("Dirigido para:");
        tMakeup.addColumn("RUC. Proveedor");
        tMakeup.addColumn("COSTO TOTAL");
        tblordProdMake.setModel(tMakeup);
        
        String sql="Select * From promakeup ORDER BY Nombreprod";
        String datos [] = new String [10];
        Statement st;
        try{
            st= cn.createStatement();
            ResultSet rs=st.executeQuery(sql);
            while(rs.next()){
                
                //usando la clase generica
                double precio=rs.getDouble("Precio");
                int Stock = rs.getInt("Stock");
                Generico1<Double,Integer> generico = new Generico1<>(precio,Stock);
                double total=generico.multiplicar();
                
                datos[0]=rs.getString(1);
                datos[1]=rs.getString(2);
                datos[2]=rs.getString(3);
                datos[3]=rs.getString(4);
                datos[4]=rs.getString(5);
                datos[5]=rs.getString(6);
                datos[6]=rs.getString(7);
                datos[7]=rs.getString(8);
                datos[8]=rs.getString(9);
                datos[9]=String.valueOf(total);
                tMakeup.addRow(datos);
            }
            tblordProdMake.setModel(tMakeup);
        }catch(SQLException ex){
            Logger.getLogger(FrameProductos.class.getName()).log(Level.SEVERE,null,ex);
        }
    }
    
    private void mostrartablapromakePrec(){
        
        tMakeup = new DefaultTableModel();
        tMakeup.addColumn("Código");
        tMakeup.addColumn("Nombre");
        tMakeup.addColumn("Precio");
        tMakeup.addColumn("Stock");
        tMakeup.addColumn("Fabricados");
        tMakeup.addColumn("Tipos");
        tMakeup.addColumn("Tonos");
        tMakeup.addColumn("Dirigido para:");
        tMakeup.addColumn("RUC. Proveedor");
        tMakeup.addColumn("COSTO TOTAL");
        tblordProdMake.setModel(tMakeup);
        
        String sql="Select * From promakeup ORDER BY Precio";
        String datos [] = new String [10];
        Statement st;
        try{
            st= cn.createStatement();
            ResultSet rs=st.executeQuery(sql);
            while(rs.next()){
                
                //usando la clase generica
                double precio=rs.getDouble("Precio");
                int Stock = rs.getInt("Stock");
                Generico1<Double,Integer> generico = new Generico1<>(precio,Stock);
                double total=generico.multiplicar();
                
                datos[0]=rs.getString(1);
                datos[1]=rs.getString(2);
                datos[2]=rs.getString(3);
                datos[3]=rs.getString(4);
                datos[4]=rs.getString(5);
                datos[5]=rs.getString(6);
                datos[6]=rs.getString(7);
                datos[7]=rs.getString(8);
                datos[8]=rs.getString(9);
                datos[9]=String.valueOf(total);
                tMakeup.addRow(datos);
            }
            tblordProdMake.setModel(tMakeup);
        }catch(SQLException ex){
            Logger.getLogger(FrameProductos.class.getName()).log(Level.SEVERE,null,ex);
        }
    }

    private void mostrartablapromakeStock(){
        
        tMakeup = new DefaultTableModel();
        tMakeup.addColumn("Código");
        tMakeup.addColumn("Nombre");
        tMakeup.addColumn("Precio");
        tMakeup.addColumn("Stock");
        tMakeup.addColumn("Fabricados");
        tMakeup.addColumn("Tipos");
        tMakeup.addColumn("Tonos");
        tMakeup.addColumn("Dirigido para:");
        tMakeup.addColumn("RUC. Proveedor");
        tMakeup.addColumn("COSTO TOTAL");
        tblordProdMake.setModel(tMakeup);
        
        String sql="Select * From promakeup ORDER BY Stock";
        String datos [] = new String [10];
        Statement st;
        try{
            st= cn.createStatement();
            ResultSet rs=st.executeQuery(sql);
            while(rs.next()){
                
                //usando la clase generica
                double precio=rs.getDouble("Precio");
                int Stock = rs.getInt("Stock");
                Generico1<Double,Integer> generico = new Generico1<>(precio,Stock);
                double total=generico.multiplicar();
                
                datos[0]=rs.getString(1);
                datos[1]=rs.getString(2);
                datos[2]=rs.getString(3);
                datos[3]=rs.getString(4);
                datos[4]=rs.getString(5);
                datos[5]=rs.getString(6);
                datos[6]=rs.getString(7);
                datos[7]=rs.getString(8);
                datos[8]=rs.getString(9);
                datos[9]=String.valueOf(total);
                tMakeup.addRow(datos);
            }
            tblordProdMake.setModel(tMakeup);
        }catch(SQLException ex){
            Logger.getLogger(FrameProductos.class.getName()).log(Level.SEVERE,null,ex);
        }
    }

    private void mostrartablapromakeFab(){
        
        tMakeup = new DefaultTableModel();
        tMakeup.addColumn("Código");
        tMakeup.addColumn("Nombre");
        tMakeup.addColumn("Precio");
        tMakeup.addColumn("Stock");
        tMakeup.addColumn("Fabricados");
        tMakeup.addColumn("Tipos");
        tMakeup.addColumn("Tonos");
        tMakeup.addColumn("Dirigido para:");
        tMakeup.addColumn("RUC. Proveedor");
        tMakeup.addColumn("COSTO TOTAL");
        tblordProdMake.setModel(tMakeup);
        
        String sql="Select * From promakeup ORDER BY Fabricados";
        String datos [] = new String [10];
        Statement st;
        try{
            st= cn.createStatement();
            ResultSet rs=st.executeQuery(sql);
            while(rs.next()){
                
                //usando la clase generica
                double precio=rs.getDouble("Precio");
                int Stock = rs.getInt("Stock");
                Generico1<Double,Integer> generico = new Generico1<>(precio,Stock);
                double total=generico.multiplicar();
                
                datos[0]=rs.getString(1);
                datos[1]=rs.getString(2);
                datos[2]=rs.getString(3);
                datos[3]=rs.getString(4);
                datos[4]=rs.getString(5);
                datos[5]=rs.getString(6);
                datos[6]=rs.getString(7);
                datos[7]=rs.getString(8);
                datos[8]=rs.getString(9);
                datos[9]=String.valueOf(total);
                tMakeup.addRow(datos);
            }
            tblordProdMake.setModel(tMakeup);
        }catch(SQLException ex){
            Logger.getLogger(FrameProductos.class.getName()).log(Level.SEVERE,null,ex);
        }
    }

    private void mostrartablapromakeTipo(){
        
        tMakeup = new DefaultTableModel();
        tMakeup.addColumn("Código");
        tMakeup.addColumn("Nombre");
        tMakeup.addColumn("Precio");
        tMakeup.addColumn("Stock");
        tMakeup.addColumn("Fabricados");
        tMakeup.addColumn("Tipos");
        tMakeup.addColumn("Tonos");
        tMakeup.addColumn("Dirigido para:");
        tMakeup.addColumn("RUC. Proveedor");
        tMakeup.addColumn("COSTO TOTAL");
        tblordProdMake.setModel(tMakeup);
        
        String sql="Select * From promakeup ORDER BY Tipo";
        String datos [] = new String [10];
        Statement st;
        try{
            st= cn.createStatement();
            ResultSet rs=st.executeQuery(sql);
            while(rs.next()){
                
                //usando la clase generica
                double precio=rs.getDouble("Precio");
                int Stock = rs.getInt("Stock");
                Generico1<Double,Integer> generico = new Generico1<>(precio,Stock);
                double total=generico.multiplicar();
                
                datos[0]=rs.getString(1);
                datos[1]=rs.getString(2);
                datos[2]=rs.getString(3);
                datos[3]=rs.getString(4);
                datos[4]=rs.getString(5);
                datos[5]=rs.getString(6);
                datos[6]=rs.getString(7);
                datos[7]=rs.getString(8);
                datos[8]=rs.getString(9);
                datos[9]=String.valueOf(total);
                tMakeup.addRow(datos);
            }
            tblordProdMake.setModel(tMakeup);
        }catch(SQLException ex){
            Logger.getLogger(FrameProductos.class.getName()).log(Level.SEVERE,null,ex);
        }
    }

    private void mostrartablapromakeTonos(){
        
        tMakeup = new DefaultTableModel();
        tMakeup.addColumn("Código");
        tMakeup.addColumn("Nombre");
        tMakeup.addColumn("Precio");
        tMakeup.addColumn("Stock");
        tMakeup.addColumn("Fabricados");
        tMakeup.addColumn("Tipos");
        tMakeup.addColumn("Tonos");
        tMakeup.addColumn("Dirigido para:");
        tMakeup.addColumn("RUC. Proveedor");
        tMakeup.addColumn("COSTO TOTAL");
        tblordProdMake.setModel(tMakeup);
        
        String sql="Select * From promakeup ORDER BY Tonos";
        String datos [] = new String [10];
        Statement st;
        try{
            st= cn.createStatement();
            ResultSet rs=st.executeQuery(sql);
            while(rs.next()){
                
                //usando la clase generica
                double precio=rs.getDouble("Precio");
                int Stock = rs.getInt("Stock");
                Generico1<Double,Integer> generico = new Generico1<>(precio,Stock);
                double total=generico.multiplicar();
                
                datos[0]=rs.getString(1);
                datos[1]=rs.getString(2);
                datos[2]=rs.getString(3);
                datos[3]=rs.getString(4);
                datos[4]=rs.getString(5);
                datos[5]=rs.getString(6);
                datos[6]=rs.getString(7);
                datos[7]=rs.getString(8);
                datos[8]=rs.getString(9);
                datos[9]=String.valueOf(total);
                tMakeup.addRow(datos);
            }
            tblordProdMake.setModel(tMakeup);
        }catch(SQLException ex){
            Logger.getLogger(FrameProductos.class.getName()).log(Level.SEVERE,null,ex);
        }
    }

    private void mostrartablapromakeDig(){
        
        tMakeup = new DefaultTableModel();
        tMakeup.addColumn("Código");
        tMakeup.addColumn("Nombre");
        tMakeup.addColumn("Precio");
        tMakeup.addColumn("Stock");
        tMakeup.addColumn("Fabricados");
        tMakeup.addColumn("Tipos");
        tMakeup.addColumn("Tonos");
        tMakeup.addColumn("Dirigido para:");
        tMakeup.addColumn("RUC. Proveedor");
        tMakeup.addColumn("COSTO TOTAL");
        tblordProdMake.setModel(tMakeup);
        
        String sql="Select * From promakeup ORDER BY DigPara";
        String datos [] = new String [10];
        Statement st;
        try{
            st= cn.createStatement();
            ResultSet rs=st.executeQuery(sql);
            while(rs.next()){
                
                //usando la clase generica
                double precio=rs.getDouble("Precio");
                int Stock = rs.getInt("Stock");
                Generico1<Double,Integer> generico = new Generico1<>(precio,Stock);
                double total=generico.multiplicar();
                
                datos[0]=rs.getString(1);
                datos[1]=rs.getString(2);
                datos[2]=rs.getString(3);
                datos[3]=rs.getString(4);
                datos[4]=rs.getString(5);
                datos[5]=rs.getString(6);
                datos[6]=rs.getString(7);
                datos[7]=rs.getString(8);
                datos[8]=rs.getString(9);
                datos[9]=String.valueOf(total);
                tMakeup.addRow(datos);
            }
            tblordProdMake.setModel(tMakeup);
        }catch(SQLException ex){
            Logger.getLogger(FrameProductos.class.getName()).log(Level.SEVERE,null,ex);
        }
    }

    private void mostrartablapromakeRuc(){
        
        tMakeup = new DefaultTableModel();
        tMakeup.addColumn("Código");
        tMakeup.addColumn("Nombre");
        tMakeup.addColumn("Precio");
        tMakeup.addColumn("Stock");
        tMakeup.addColumn("Fabricados");
        tMakeup.addColumn("Tipos");
        tMakeup.addColumn("Tonos");
        tMakeup.addColumn("Dirigido para:");
        tMakeup.addColumn("RUC. Proveedor");
        tMakeup.addColumn("COSTO TOTAL");
        tblordProdMake.setModel(tMakeup);
        
        String sql="Select * From promakeup ORDER BY RucProv";
        String datos [] = new String [10];
        Statement st;
        try{
            st= cn.createStatement();
            ResultSet rs=st.executeQuery(sql);
            while(rs.next()){
                
                //usando la clase generica
                double precio=rs.getDouble("Precio");
                int Stock = rs.getInt("Stock");
                Generico1<Double,Integer> generico = new Generico1<>(precio,Stock);
                double total=generico.multiplicar();
                
                datos[0]=rs.getString(1);
                datos[1]=rs.getString(2);
                datos[2]=rs.getString(3);
                datos[3]=rs.getString(4);
                datos[4]=rs.getString(5);
                datos[5]=rs.getString(6);
                datos[6]=rs.getString(7);
                datos[7]=rs.getString(8);
                datos[8]=rs.getString(9);
                datos[9]=String.valueOf(total);
                tMakeup.addRow(datos);
            }
            tblordProdMake.setModel(tMakeup);
        }catch(SQLException ex){
            Logger.getLogger(FrameProductos.class.getName()).log(Level.SEVERE,null,ex);
        }
    }

    public void mostrartabinet(){
        tinterno = new DefaultTableModel();
       tinterno.addColumn("Nombre");
       tinterno.addColumn("DNI");
       tinterno.addColumn("Area");
       tinterno.addColumn("Sueldo");
       tblordProvInt.setModel(tinterno);
       
       String sql="Select * From provedorint";
        String datos []= new String [4];
        Statement st;
        
        try{
            st= cn.createStatement();
            ResultSet rs=st.executeQuery(sql);
            while(rs.next()){
                
                String area=rs.getNString("Area");
                
                CAPInterno inte= new CAPInterno(area);
                double sueldoi=inte.getSueldo();
                
                
                datos[0]=rs.getString(1);
                datos[1]=rs.getString(2);
                datos[2]=rs.getString(3);
                datos[3]=String.valueOf(sueldoi);
                tinterno.addRow(datos);
            }
            tblordProvInt.setModel(tinterno);
        }catch(SQLException ex){
            Logger.getLogger(FrameProductos.class.getName()).log(Level.SEVERE,null,ex);
        }
    }
    
    public void mostrartabinetNom(){
        tinterno = new DefaultTableModel();
       tinterno.addColumn("Nombre");
       tinterno.addColumn("DNI");
       tinterno.addColumn("Area");
       tinterno.addColumn("Sueldo");
       tblordProvInt.setModel(tinterno);
       
       String sql="Select * From provedorint ORDER BY Nombre";
        String datos []= new String [4];
        Statement st;
        
        try{
            st= cn.createStatement();
            ResultSet rs=st.executeQuery(sql);
            while(rs.next()){
                
                String area=rs.getNString("Area");
                
                CAPInterno inte= new CAPInterno(area);
                double sueldoi=inte.getSueldo();
                
                
                datos[0]=rs.getString(1);
                datos[1]=rs.getString(2);
                datos[2]=rs.getString(3);
                datos[3]=String.valueOf(sueldoi);
                tinterno.addRow(datos);
            }
            tblordProvInt.setModel(tinterno);
        }catch(SQLException ex){
            Logger.getLogger(FrameProductos.class.getName()).log(Level.SEVERE,null,ex);
        }
    }
    
    public void mostrartabinetDNI(){
        tinterno = new DefaultTableModel();
       tinterno.addColumn("Nombre");
       tinterno.addColumn("DNI");
       tinterno.addColumn("Area");
       tinterno.addColumn("Sueldo");
       tblordProvInt.setModel(tinterno);
       
       String sql="Select * From provedorint ORDER BY DNI";
        String datos []= new String [4];
        Statement st;
        
        try{
            st= cn.createStatement();
            ResultSet rs=st.executeQuery(sql);
            while(rs.next()){
                
                String area=rs.getNString("Area");
                
                CAPInterno inte= new CAPInterno(area);
                double sueldoi=inte.getSueldo();
                
                
                datos[0]=rs.getString(1);
                datos[1]=rs.getString(2);
                datos[2]=rs.getString(3);
                datos[3]=String.valueOf(sueldoi);
                tinterno.addRow(datos);
            }
            tblordProvInt.setModel(tinterno);
        }catch(SQLException ex){
            Logger.getLogger(FrameProductos.class.getName()).log(Level.SEVERE,null,ex);
        }
    }
    
    public void mostrartabinetAre(){
        tinterno = new DefaultTableModel();
       tinterno.addColumn("Nombre");
       tinterno.addColumn("DNI");
       tinterno.addColumn("Area");
       tinterno.addColumn("Sueldo");
       tblordProvInt.setModel(tinterno);
       
       String sql="Select * From provedorint ORDER BY Area";
        String datos []= new String [4];
        Statement st;
        
        try{
            st= cn.createStatement();
            ResultSet rs=st.executeQuery(sql);
            while(rs.next()){
                
                String area=rs.getNString("Area");
                
                CAPInterno inte= new CAPInterno(area);
                double sueldoi=inte.getSueldo();
                
                
                datos[0]=rs.getString(1);
                datos[1]=rs.getString(2);
                datos[2]=rs.getString(3);
                datos[3]=String.valueOf(sueldoi);
                tinterno.addRow(datos);
            }
            tblordProvInt.setModel(tinterno);
        }catch(SQLException ex){
            Logger.getLogger(FrameProductos.class.getName()).log(Level.SEVERE,null,ex);
        }
    }
    
    public void mostrartabExterno(){
       texterno = new DefaultTableModel();
       texterno.addColumn("Nombre Empresa");
       texterno.addColumn("RUC");
       texterno.addColumn("Telèfono");
       texterno.addColumn("Direcciòn");
       texterno.addColumn("Correo");
       texterno.addColumn("Año de colaboraciòn");
       texterno.addColumn("Gerente General");
       texterno.addColumn("Demora");
       tblordProvEx.setModel(texterno);
       
       String sql="Select * From provedorext";
        String datos []= new String [8];
        Statement st;
        
        try{
            st= cn.createStatement();
            ResultSet rs=st.executeQuery(sql);
            while(rs.next()){
                
                int anio=Integer.parseInt(rs.getString("AnioColab"));
                
                CAPExterno ext= new CAPExterno(anio);
                String tiempod=ext.tiempoProveedor();
                
                datos[0]=rs.getString(1);
                datos[1]=rs.getString(2);
                datos[2]=rs.getString(3);
                datos[3]=rs.getString(4);
                datos[4]=rs.getString(5);
                datos[5]=rs.getString(6);
                datos[6]=rs.getString(7);
                datos[7]= tiempod;
                
                texterno.addRow(datos);
            }
            tblordProvEx.setModel(texterno);
        }catch(SQLException ex){
            Logger.getLogger(FrameProductos.class.getName()).log(Level.SEVERE,null,ex);
        }
        
    }
    
    public void mostrartabExternoNom(){
       texterno = new DefaultTableModel();
       texterno.addColumn("Nombre Empresa");
       texterno.addColumn("RUC");
       texterno.addColumn("Telèfono");
       texterno.addColumn("Direcciòn");
       texterno.addColumn("Correo");
       texterno.addColumn("Año de colaboraciòn");
       texterno.addColumn("Gerente General");
       texterno.addColumn("Demora");
       tblordProvEx.setModel(texterno);
       
       String sql="Select * From provedorext ORDER BY NombreEmp";
        String datos []= new String [8];
        Statement st;
        
        try{
            st= cn.createStatement();
            ResultSet rs=st.executeQuery(sql);
            while(rs.next()){
                
                int anio=Integer.parseInt(rs.getString("AnioColab"));
                
                CAPExterno ext= new CAPExterno(anio);
                String tiempod=ext.tiempoProveedor();
                
                datos[0]=rs.getString(1);
                datos[1]=rs.getString(2);
                datos[2]=rs.getString(3);
                datos[3]=rs.getString(4);
                datos[4]=rs.getString(5);
                datos[5]=rs.getString(6);
                datos[6]=rs.getString(7);
                datos[7]= tiempod;
                
                texterno.addRow(datos);
            }
            tblordProvEx.setModel(texterno);
        }catch(SQLException ex){
            Logger.getLogger(FrameProductos.class.getName()).log(Level.SEVERE,null,ex);
        }
        
    }
    
    public void mostrartabExternoruc(){
       texterno = new DefaultTableModel();
       texterno.addColumn("Nombre Empresa");
       texterno.addColumn("RUC");
       texterno.addColumn("Telèfono");
       texterno.addColumn("Direcciòn");
       texterno.addColumn("Correo");
       texterno.addColumn("Año de colaboraciòn");
       texterno.addColumn("Gerente General");
       texterno.addColumn("Demora");
       tblordProvEx.setModel(texterno);
       
       String sql="Select * From provedorext ORDER BY RUC";
        String datos []= new String [8];
        Statement st;
        
        try{
            st= cn.createStatement();
            ResultSet rs=st.executeQuery(sql);
            while(rs.next()){
                
                int anio=Integer.parseInt(rs.getString("AnioColab"));
                
                CAPExterno ext= new CAPExterno(anio);
                String tiempod=ext.tiempoProveedor();
                
                datos[0]=rs.getString(1);
                datos[1]=rs.getString(2);
                datos[2]=rs.getString(3);
                datos[3]=rs.getString(4);
                datos[4]=rs.getString(5);
                datos[5]=rs.getString(6);
                datos[6]=rs.getString(7);
                datos[7]= tiempod;
                
                texterno.addRow(datos);
            }
            tblordProvEx.setModel(texterno);
        }catch(SQLException ex){
            Logger.getLogger(FrameProductos.class.getName()).log(Level.SEVERE,null,ex);
        }
        
    }
    
    public void mostrartabExternotelf(){
       texterno = new DefaultTableModel();
       texterno.addColumn("Nombre Empresa");
       texterno.addColumn("RUC");
       texterno.addColumn("Telèfono");
       texterno.addColumn("Direcciòn");
       texterno.addColumn("Correo");
       texterno.addColumn("Año de colaboraciòn");
       texterno.addColumn("Gerente General");
       texterno.addColumn("Demora");
       tblordProvEx.setModel(texterno);
       
       String sql="Select * From provedorext ORDER BY Telefono";
        String datos []= new String [8];
        Statement st;
        
        try{
            st= cn.createStatement();
            ResultSet rs=st.executeQuery(sql);
            while(rs.next()){
                
                int anio=Integer.parseInt(rs.getString("AnioColab"));
                
                CAPExterno ext= new CAPExterno(anio);
                String tiempod=ext.tiempoProveedor();
                
                datos[0]=rs.getString(1);
                datos[1]=rs.getString(2);
                datos[2]=rs.getString(3);
                datos[3]=rs.getString(4);
                datos[4]=rs.getString(5);
                datos[5]=rs.getString(6);
                datos[6]=rs.getString(7);
                datos[7]= tiempod;
                
                texterno.addRow(datos);
            }
            tblordProvEx.setModel(texterno);
        }catch(SQLException ex){
            Logger.getLogger(FrameProductos.class.getName()).log(Level.SEVERE,null,ex);
        }
        
    }
    
    public void mostrartabExternoDirec(){
       texterno = new DefaultTableModel();
       texterno.addColumn("Nombre Empresa");
       texterno.addColumn("RUC");
       texterno.addColumn("Telèfono");
       texterno.addColumn("Direcciòn");
       texterno.addColumn("Correo");
       texterno.addColumn("Año de colaboraciòn");
       texterno.addColumn("Gerente General");
       texterno.addColumn("Demora");
       tblordProvEx.setModel(texterno);
       
       String sql="Select * From provedorext ORDER BY Direccion";
        String datos []= new String [8];
        Statement st;
        
        try{
            st= cn.createStatement();
            ResultSet rs=st.executeQuery(sql);
            while(rs.next()){
                
                int anio=Integer.parseInt(rs.getString("AnioColab"));
                
                CAPExterno ext= new CAPExterno(anio);
                String tiempod=ext.tiempoProveedor();
                
                datos[0]=rs.getString(1);
                datos[1]=rs.getString(2);
                datos[2]=rs.getString(3);
                datos[3]=rs.getString(4);
                datos[4]=rs.getString(5);
                datos[5]=rs.getString(6);
                datos[6]=rs.getString(7);
                datos[7]= tiempod;
                
                texterno.addRow(datos);
            }
            tblordProvEx.setModel(texterno);
        }catch(SQLException ex){
            Logger.getLogger(FrameProductos.class.getName()).log(Level.SEVERE,null,ex);
        }
        
    }
    
    public void mostrartabExternoCor(){
       texterno = new DefaultTableModel();
       texterno.addColumn("Nombre Empresa");
       texterno.addColumn("RUC");
       texterno.addColumn("Telèfono");
       texterno.addColumn("Direcciòn");
       texterno.addColumn("Correo");
       texterno.addColumn("Año de colaboraciòn");
       texterno.addColumn("Gerente General");
       texterno.addColumn("Demora");
       tblordProvEx.setModel(texterno);
       
       String sql="Select * From provedorext ORDER BY Correo";
        String datos []= new String [8];
        Statement st;
        
        try{
            st= cn.createStatement();
            ResultSet rs=st.executeQuery(sql);
            while(rs.next()){
                
                int anio=Integer.parseInt(rs.getString("AnioColab"));
                
                CAPExterno ext= new CAPExterno(anio);
                String tiempod=ext.tiempoProveedor();
                
                datos[0]=rs.getString(1);
                datos[1]=rs.getString(2);
                datos[2]=rs.getString(3);
                datos[3]=rs.getString(4);
                datos[4]=rs.getString(5);
                datos[5]=rs.getString(6);
                datos[6]=rs.getString(7);
                datos[7]= tiempod;
                
                texterno.addRow(datos);
            }
            tblordProvEx.setModel(texterno);
        }catch(SQLException ex){
            Logger.getLogger(FrameProductos.class.getName()).log(Level.SEVERE,null,ex);
        }
        
    }
    
    public void mostrartabExternoAnio(){
       texterno = new DefaultTableModel();
       texterno.addColumn("Nombre Empresa");
       texterno.addColumn("RUC");
       texterno.addColumn("Telèfono");
       texterno.addColumn("Direcciòn");
       texterno.addColumn("Correo");
       texterno.addColumn("Año de colaboraciòn");
       texterno.addColumn("Gerente General");
       texterno.addColumn("Demora");
       tblordProvEx.setModel(texterno);
       
       String sql="Select * From provedorext ORDER BY AnioColab";
        String datos []= new String [8];
        Statement st;
        
        try{
            st= cn.createStatement();
            ResultSet rs=st.executeQuery(sql);
            while(rs.next()){
                
                int anio=Integer.parseInt(rs.getString("AnioColab"));
                
                CAPExterno ext= new CAPExterno(anio);
                String tiempod=ext.tiempoProveedor();
                
                datos[0]=rs.getString(1);
                datos[1]=rs.getString(2);
                datos[2]=rs.getString(3);
                datos[3]=rs.getString(4);
                datos[4]=rs.getString(5);
                datos[5]=rs.getString(6);
                datos[6]=rs.getString(7);
                datos[7]= tiempod;
                
                texterno.addRow(datos);
            }
            tblordProvEx.setModel(texterno);
        }catch(SQLException ex){
            Logger.getLogger(FrameProductos.class.getName()).log(Level.SEVERE,null,ex);
        }
        
    }
    
    public void mostrartabExternoGeren(){
       texterno = new DefaultTableModel();
       texterno.addColumn("Nombre Empresa");
       texterno.addColumn("RUC");
       texterno.addColumn("Telèfono");
       texterno.addColumn("Direcciòn");
       texterno.addColumn("Correo");
       texterno.addColumn("Año de colaboraciòn");
       texterno.addColumn("Gerente General");
       texterno.addColumn("Demora");
       tblordProvEx.setModel(texterno);
       
       String sql="Select * From provedorext ORDER BY GerenteGe";
        String datos []= new String [8];
        Statement st;
        
        try{
            st= cn.createStatement();
            ResultSet rs=st.executeQuery(sql);
            while(rs.next()){
                
                int anio=Integer.parseInt(rs.getString("AnioColab"));
                
                CAPExterno ext= new CAPExterno(anio);
                String tiempod=ext.tiempoProveedor();
                
                datos[0]=rs.getString(1);
                datos[1]=rs.getString(2);
                datos[2]=rs.getString(3);
                datos[3]=rs.getString(4);
                datos[4]=rs.getString(5);
                datos[5]=rs.getString(6);
                datos[6]=rs.getString(7);
                datos[7]= tiempod;
                
                texterno.addRow(datos);
            }
            tblordProvEx.setModel(texterno);
        }catch(SQLException ex){
            Logger.getLogger(FrameProductos.class.getName()).log(Level.SEVERE,null,ex);
        }
        
    }
    
    public void mostrartablaSucPrin(){
        
        tprincipal = new DefaultTableModel();
        tprincipal.addColumn("Numero de sucursal");
        tprincipal.addColumn("Teléfono");
        tprincipal.addColumn("Distrito");
        tprincipal.addColumn("Dirección");
        tprincipal.addColumn("Encargado");
        tprincipal.addColumn("DNI");
        tblordSucPri.setModel(tprincipal);
        
        String sql="Select * From sucursalpri";
        String datos [] = new String [6];
        Statement st;
        
        try{
            st= cn.createStatement();
            ResultSet rs=st.executeQuery(sql);
            while(rs.next()){
                
                datos[0]=rs.getString(1);
                datos[1]=rs.getString(2);
                datos[2]=rs.getString(3);
                datos[3]=rs.getString(4);
                datos[4]=rs.getString(5);
                datos[5]=rs.getString(6);
                
                tprincipal.addRow(datos);
            }
            tblordSucPri.setModel(tprincipal);
        }catch(SQLException ex){
            Logger.getLogger(FrameProductos.class.getName()).log(Level.SEVERE,null,ex);
        }
        
    }
    
    public void mostrartablaSucPrinNum(){
        
        tprincipal = new DefaultTableModel();
        tprincipal.addColumn("Numero de sucursal");
        tprincipal.addColumn("Teléfono");
        tprincipal.addColumn("Distrito");
        tprincipal.addColumn("Dirección");
        tprincipal.addColumn("Encargado");
        tprincipal.addColumn("DNI");
        tblordSucPri.setModel(tprincipal);
        
        String sql="Select * From sucursalpri ORDER BY NumeroSuc";
        String datos [] = new String [6];
        Statement st;
        
        try{
            st= cn.createStatement();
            ResultSet rs=st.executeQuery(sql);
            while(rs.next()){
                
                datos[0]=rs.getString(1);
                datos[1]=rs.getString(2);
                datos[2]=rs.getString(3);
                datos[3]=rs.getString(4);
                datos[4]=rs.getString(5);
                datos[5]=rs.getString(6);
                
                tprincipal.addRow(datos);
            }
            tblordSucPri.setModel(tprincipal);
        }catch(SQLException ex){
            Logger.getLogger(FrameProductos.class.getName()).log(Level.SEVERE,null,ex);
        }
        
    }
    
    public void mostrartablaSucPrinTelf(){
        
        tprincipal = new DefaultTableModel();
        tprincipal.addColumn("Numero de sucursal");
        tprincipal.addColumn("Teléfono");
        tprincipal.addColumn("Distrito");
        tprincipal.addColumn("Dirección");
        tprincipal.addColumn("Encargado");
        tprincipal.addColumn("DNI");
        tblordSucPri.setModel(tprincipal);
        
        String sql="Select * From sucursalpri ORDER BY Telefono";
        String datos [] = new String [6];
        Statement st;
        
        try{
            st= cn.createStatement();
            ResultSet rs=st.executeQuery(sql);
            while(rs.next()){
                
                datos[0]=rs.getString(1);
                datos[1]=rs.getString(2);
                datos[2]=rs.getString(3);
                datos[3]=rs.getString(4);
                datos[4]=rs.getString(5);
                datos[5]=rs.getString(6);
                
                tprincipal.addRow(datos);
            }
            tblordSucPri.setModel(tprincipal);
        }catch(SQLException ex){
            Logger.getLogger(FrameProductos.class.getName()).log(Level.SEVERE,null,ex);
        }
        
    }
    
    public void mostrartablaSucPrinDist(){
        
        tprincipal = new DefaultTableModel();
        tprincipal.addColumn("Numero de sucursal");
        tprincipal.addColumn("Teléfono");
        tprincipal.addColumn("Distrito");
        tprincipal.addColumn("Dirección");
        tprincipal.addColumn("Encargado");
        tprincipal.addColumn("DNI");
        tblordSucPri.setModel(tprincipal);
        
        String sql="Select * From sucursalpri ORDER BY Distrito";
        String datos [] = new String [6];
        Statement st;
        
        try{
            st= cn.createStatement();
            ResultSet rs=st.executeQuery(sql);
            while(rs.next()){
                
                datos[0]=rs.getString(1);
                datos[1]=rs.getString(2);
                datos[2]=rs.getString(3);
                datos[3]=rs.getString(4);
                datos[4]=rs.getString(5);
                datos[5]=rs.getString(6);
                
                tprincipal.addRow(datos);
            }
            tblordSucPri.setModel(tprincipal);
        }catch(SQLException ex){
            Logger.getLogger(FrameProductos.class.getName()).log(Level.SEVERE,null,ex);
        }
        
    }
    
    public void mostrartablaSucPrinDirec(){
        
        tprincipal = new DefaultTableModel();
        tprincipal.addColumn("Numero de sucursal");
        tprincipal.addColumn("Teléfono");
        tprincipal.addColumn("Distrito");
        tprincipal.addColumn("Dirección");
        tprincipal.addColumn("Encargado");
        tprincipal.addColumn("DNI");
        tblordSucPri.setModel(tprincipal);
        
        String sql="Select * From sucursalpri ORDER BY Direccion";
        String datos [] = new String [6];
        Statement st;
        
        try{
            st= cn.createStatement();
            ResultSet rs=st.executeQuery(sql);
            while(rs.next()){
                
                datos[0]=rs.getString(1);
                datos[1]=rs.getString(2);
                datos[2]=rs.getString(3);
                datos[3]=rs.getString(4);
                datos[4]=rs.getString(5);
                datos[5]=rs.getString(6);
                
                tprincipal.addRow(datos);
            }
            tblordSucPri.setModel(tprincipal);
        }catch(SQLException ex){
            Logger.getLogger(FrameProductos.class.getName()).log(Level.SEVERE,null,ex);
        }
        
    }
    
    public void mostrartablaSucPrinEnc(){
        
        tprincipal = new DefaultTableModel();
        tprincipal.addColumn("Numero de sucursal");
        tprincipal.addColumn("Teléfono");
        tprincipal.addColumn("Distrito");
        tprincipal.addColumn("Dirección");
        tprincipal.addColumn("Encargado");
        tprincipal.addColumn("DNI");
        tblordSucPri.setModel(tprincipal);
        
        String sql="Select * From sucursalpri ORDER BY Encargado";
        String datos [] = new String [6];
        Statement st;
        
        try{
            st= cn.createStatement();
            ResultSet rs=st.executeQuery(sql);
            while(rs.next()){
                
                datos[0]=rs.getString(1);
                datos[1]=rs.getString(2);
                datos[2]=rs.getString(3);
                datos[3]=rs.getString(4);
                datos[4]=rs.getString(5);
                datos[5]=rs.getString(6);
                
                tprincipal.addRow(datos);
            }
            tblordSucPri.setModel(tprincipal);
        }catch(SQLException ex){
            Logger.getLogger(FrameProductos.class.getName()).log(Level.SEVERE,null,ex);
        }
        
    }
    
    public void mostrartablaSucPrinDni(){
        
        tprincipal = new DefaultTableModel();
        tprincipal.addColumn("Numero de sucursal");
        tprincipal.addColumn("Teléfono");
        tprincipal.addColumn("Distrito");
        tprincipal.addColumn("Dirección");
        tprincipal.addColumn("Encargado");
        tprincipal.addColumn("DNI");
        tblordSucPri.setModel(tprincipal);
        
        String sql="Select * From sucursalpri ORDER BY DNI";
        String datos [] = new String [6];
        Statement st;
        
        try{
            st= cn.createStatement();
            ResultSet rs=st.executeQuery(sql);
            while(rs.next()){
                
                datos[0]=rs.getString(1);
                datos[1]=rs.getString(2);
                datos[2]=rs.getString(3);
                datos[3]=rs.getString(4);
                datos[4]=rs.getString(5);
                datos[5]=rs.getString(6);
                
                tprincipal.addRow(datos);
            }
            tblordSucPri.setModel(tprincipal);
        }catch(SQLException ex){
            Logger.getLogger(FrameProductos.class.getName()).log(Level.SEVERE,null,ex);
        }
        
    }
    
    public void mostrartablaSucProvin(){
        tprovincia = new DefaultTableModel();
        tprovincia.addColumn("Número Sucursal");
        tprovincia.addColumn("Teléfono");
        tprovincia.addColumn("Cod. Provincia");
        tprovincia.addColumn("Provincia");
        tprovincia.addColumn("Distrito");
        tprovincia.addColumn("Dirección");
        tprovincia.addColumn("Encargado");
        tprovincia.addColumn("DNI");
        tblordSucProv.setModel(tprovincia);
        String sql="Select * From sucursalpro";
        String datos []= new String [8];
        Statement st;
        
        try{
            st= cn.createStatement();
            ResultSet rs=st.executeQuery(sql);
            while(rs.next()){
                
                datos[0]=rs.getString(1);
                datos[1]=rs.getString(2);
                datos[2]=rs.getString(3);
                datos[3]=rs.getString(4);
                datos[4]=rs.getString(5);
                datos[5]=rs.getString(6);
                datos[6]=rs.getString(7);
                datos[7]=rs.getString(8);
                tprovincia.addRow(datos);
            }
            tblordSucProv.setModel(tprovincia);
        }catch(SQLException ex){
            Logger.getLogger(FrameProductos.class.getName()).log(Level.SEVERE,null,ex);
        }
    }
    
    public void mostrartablaSucProvinNum(){
        tprovincia = new DefaultTableModel();
        tprovincia.addColumn("Número Sucursal");
        tprovincia.addColumn("Teléfono");
        tprovincia.addColumn("Cod. Provincia");
        tprovincia.addColumn("Provincia");
        tprovincia.addColumn("Distrito");
        tprovincia.addColumn("Dirección");
        tprovincia.addColumn("Encargado");
        tprovincia.addColumn("DNI");
        tblordSucProv.setModel(tprovincia);
        String sql="Select * From sucursalpro ORDER BY NumeroSuc";
        String datos []= new String [8];
        Statement st;
        
        try{
            st= cn.createStatement();
            ResultSet rs=st.executeQuery(sql);
            while(rs.next()){
                
                datos[0]=rs.getString(1);
                datos[1]=rs.getString(2);
                datos[2]=rs.getString(3);
                datos[3]=rs.getString(4);
                datos[4]=rs.getString(5);
                datos[5]=rs.getString(6);
                datos[6]=rs.getString(7);
                datos[7]=rs.getString(8);
                tprovincia.addRow(datos);
            }
            tblordSucProv.setModel(tprovincia);
        }catch(SQLException ex){
            Logger.getLogger(FrameProductos.class.getName()).log(Level.SEVERE,null,ex);
        }
    }
    
    public void mostrartablaSucProvintelf(){
        tprovincia = new DefaultTableModel();
        tprovincia.addColumn("Número Sucursal");
        tprovincia.addColumn("Teléfono");
        tprovincia.addColumn("Cod. Provincia");
        tprovincia.addColumn("Provincia");
        tprovincia.addColumn("Distrito");
        tprovincia.addColumn("Dirección");
        tprovincia.addColumn("Encargado");
        tprovincia.addColumn("DNI");
        tblordSucProv.setModel(tprovincia);
        
        
        String sql="Select * From sucursalpro ORDER BY Telefono";
        String datos []= new String [8];
        Statement st;
        
        try{
            st= cn.createStatement();
            ResultSet rs=st.executeQuery(sql);
            while(rs.next()){
                
                datos[0]=rs.getString(1);
                datos[1]=rs.getString(2);
                datos[2]=rs.getString(3);
                datos[3]=rs.getString(4);
                datos[4]=rs.getString(5);
                datos[5]=rs.getString(6);
                datos[6]=rs.getString(7);
                datos[7]=rs.getString(8);
                tprovincia.addRow(datos);
            }
            tblordSucProv.setModel(tprovincia);
        }catch(SQLException ex){
            Logger.getLogger(FrameProductos.class.getName()).log(Level.SEVERE,null,ex);
        }
    }
    
    public void mostrartablaSucProvinCodPro(){
        tprovincia = new DefaultTableModel();
        tprovincia.addColumn("Número Sucursal");
        tprovincia.addColumn("Teléfono");
        tprovincia.addColumn("Cod. Provincia");
        tprovincia.addColumn("Provincia");
        tprovincia.addColumn("Distrito");
        tprovincia.addColumn("Dirección");
        tprovincia.addColumn("Encargado");
        tprovincia.addColumn("DNI");
        tblordSucProv.setModel(tprovincia);
        
        
        String sql="Select * From sucursalpro ORDER BY CodPro";
        String datos []= new String [8];
        Statement st;
        
        try{
            st= cn.createStatement();
            ResultSet rs=st.executeQuery(sql);
            while(rs.next()){
                
                datos[0]=rs.getString(1);
                datos[1]=rs.getString(2);
                datos[2]=rs.getString(3);
                datos[3]=rs.getString(4);
                datos[4]=rs.getString(5);
                datos[5]=rs.getString(6);
                datos[6]=rs.getString(7);
                datos[7]=rs.getString(8);
                tprovincia.addRow(datos);
            }
            tblordSucProv.setModel(tprovincia);
        }catch(SQLException ex){
            Logger.getLogger(FrameProductos.class.getName()).log(Level.SEVERE,null,ex);
        }
    }
    
    public void mostrartablaSucProvinPro(){
        tprovincia = new DefaultTableModel();
        tprovincia.addColumn("Número Sucursal");
        tprovincia.addColumn("Teléfono");
        tprovincia.addColumn("Cod. Provincia");
        tprovincia.addColumn("Provincia");
        tprovincia.addColumn("Distrito");
        tprovincia.addColumn("Dirección");
        tprovincia.addColumn("Encargado");
        tprovincia.addColumn("DNI");
        tblordSucProv.setModel(tprovincia);
        String sql="Select * From sucursalpro ORDER BY Provincia";
        String datos []= new String [8];
        Statement st;
        
        try{
            st= cn.createStatement();
            ResultSet rs=st.executeQuery(sql);
            while(rs.next()){
                
                datos[0]=rs.getString(1);
                datos[1]=rs.getString(2);
                datos[2]=rs.getString(3);
                datos[3]=rs.getString(4);
                datos[4]=rs.getString(5);
                datos[5]=rs.getString(6);
                datos[6]=rs.getString(7);
                datos[7]=rs.getString(8);
                tprovincia.addRow(datos);
            }
            tblordSucProv.setModel(tprovincia);
        }catch(SQLException ex){
            Logger.getLogger(FrameProductos.class.getName()).log(Level.SEVERE,null,ex);
        }
    }
    
    public void mostrartablaSucProvinCiud(){
        tprovincia = new DefaultTableModel();
        tprovincia.addColumn("Número Sucursal");
        tprovincia.addColumn("Teléfono");
        tprovincia.addColumn("Cod. Provincia");
        tprovincia.addColumn("Provincia");
        tprovincia.addColumn("Distrito");
        tprovincia.addColumn("Dirección");
        tprovincia.addColumn("Encargado");
        tprovincia.addColumn("DNI");
        tblordSucProv.setModel(tprovincia);
        
        
        String sql="Select * From sucursalpro OREDER BY Ciudad";
        String datos []= new String [8];
        Statement st;
        
        try{
            st= cn.createStatement();
            ResultSet rs=st.executeQuery(sql);
            while(rs.next()){
                
                datos[0]=rs.getString(1);
                datos[1]=rs.getString(2);
                datos[2]=rs.getString(3);
                datos[3]=rs.getString(4);
                datos[4]=rs.getString(5);
                datos[5]=rs.getString(6);
                datos[6]=rs.getString(7);
                datos[7]=rs.getString(8);
                tprovincia.addRow(datos);
            }
            tblordSucProv.setModel(tprovincia);
        }catch(SQLException ex){
            Logger.getLogger(FrameProductos.class.getName()).log(Level.SEVERE,null,ex);
        }
    }
    
    public void mostrartablaSucProvinDire(){
        tprovincia = new DefaultTableModel();
        tprovincia.addColumn("Número Sucursal");
        tprovincia.addColumn("Teléfono");
        tprovincia.addColumn("Cod. Provincia");
        tprovincia.addColumn("Provincia");
        tprovincia.addColumn("Distrito");
        tprovincia.addColumn("Dirección");
        tprovincia.addColumn("Encargado");
        tprovincia.addColumn("DNI");
        tblordSucProv.setModel(tprovincia);
        
        
        String sql="Select * From sucursalpro ORDER BY Direccion";
        String datos []= new String [8];
        Statement st;
        
        try{
            st= cn.createStatement();
            ResultSet rs=st.executeQuery(sql);
            while(rs.next()){
                
                datos[0]=rs.getString(1);
                datos[1]=rs.getString(2);
                datos[2]=rs.getString(3);
                datos[3]=rs.getString(4);
                datos[4]=rs.getString(5);
                datos[5]=rs.getString(6);
                datos[6]=rs.getString(7);
                datos[7]=rs.getString(8);
                tprovincia.addRow(datos);
            }
            tblordSucProv.setModel(tprovincia);
        }catch(SQLException ex){
            Logger.getLogger(FrameProductos.class.getName()).log(Level.SEVERE,null,ex);
        }
    }
    
    public void mostrartablaSucProvinEnca(){
        tprovincia = new DefaultTableModel();
        tprovincia.addColumn("Número Sucursal");
        tprovincia.addColumn("Teléfono");
        tprovincia.addColumn("Cod. Provincia");
        tprovincia.addColumn("Provincia");
        tprovincia.addColumn("Distrito");
        tprovincia.addColumn("Dirección");
        tprovincia.addColumn("Encargado");
        tprovincia.addColumn("DNI");
        tblordSucProv.setModel(tprovincia);
        String sql="Select * From sucursalpro ORDER BY Encargado";
        String datos []= new String [8];
        Statement st;
        
        try{
            st= cn.createStatement();
            ResultSet rs=st.executeQuery(sql);
            while(rs.next()){
                
                datos[0]=rs.getString(1);
                datos[1]=rs.getString(2);
                datos[2]=rs.getString(3);
                datos[3]=rs.getString(4);
                datos[4]=rs.getString(5);
                datos[5]=rs.getString(6);
                datos[6]=rs.getString(7);
                datos[7]=rs.getString(8);
                tprovincia.addRow(datos);
            }
            tblordSucProv.setModel(tprovincia);
        }catch(SQLException ex){
            Logger.getLogger(FrameProductos.class.getName()).log(Level.SEVERE,null,ex);
        }
    }
    
    public void mostrartablaSucProvinDni(){
        tprovincia = new DefaultTableModel();
        tprovincia.addColumn("Número Sucursal");
        tprovincia.addColumn("Teléfono");
        tprovincia.addColumn("Cod. Provincia");
        tprovincia.addColumn("Provincia");
        tprovincia.addColumn("Distrito");
        tprovincia.addColumn("Dirección");
        tprovincia.addColumn("Encargado");
        tprovincia.addColumn("DNI");
        tblordSucProv.setModel(tprovincia);
        String sql="Select * From sucursalpro ORDER BY DNI";
        String datos []= new String [8];
        Statement st;
        
        try{
            st= cn.createStatement();
            ResultSet rs=st.executeQuery(sql);
            while(rs.next()){
                
                datos[0]=rs.getString(1);
                datos[1]=rs.getString(2);
                datos[2]=rs.getString(3);
                datos[3]=rs.getString(4);
                datos[4]=rs.getString(5);
                datos[5]=rs.getString(6);
                datos[6]=rs.getString(7);
                datos[7]=rs.getString(8);
                tprovincia.addRow(datos);
            }
            tblordSucProv.setModel(tprovincia);
        }catch(SQLException ex){
            Logger.getLogger(FrameProductos.class.getName()).log(Level.SEVERE,null,ex);
        }
    }
    
    
    private void jButton16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton16ActionPerformed
        Tienda ti= new Tienda();
        ti.setVisible(true);
        this.setVisible(false); 
    }//GEN-LAST:event_jButton16ActionPerformed
    
    private void jcomFiltEmpleItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcomFiltEmpleItemStateChanged
        int TipoFilEmple=jcomFiltEmple.getSelectedIndex();
        
        if(TipoFilEmple==1){
            PaneleFiltroAd.setVisible(true);
            PanelFilEmple.setVisible(false);
        }if(TipoFilEmple==2){
            PanelFilEmple.setVisible(true);
            PaneleFiltroAd.setVisible(false);
        }
        
    }//GEN-LAST:event_jcomFiltEmpleItemStateChanged

    private void jcomOrdEmpleadItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcomOrdEmpleadItemStateChanged
        if(jcomOrdEmplead.getSelectedIndex()==0){
            mostrartablaadmi();
        }if(jcomOrdEmplead.getSelectedIndex()==1){
            mostrartablaadminNombre();
        }if(jcomOrdEmplead.getSelectedIndex()==2){
            mostrartablaadminApellido();
        }if(jcomOrdEmplead.getSelectedIndex()==3){
            mostrartablaadminDNI();
        }if(jcomOrdEmplead.getSelectedIndex()==4){
            mostrartablaadminAnio();
        }
    }//GEN-LAST:event_jcomOrdEmpleadItemStateChanged
    
    private void jcomOrdEmpleItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcomOrdEmpleItemStateChanged
        if(jcomOrdEmple.getSelectedIndex()==0){
            mostrartablaEmple();
        }if(jcomOrdEmple.getSelectedIndex()==1){
            mostrartablaEmpleNom();
        }if(jcomOrdEmple.getSelectedIndex()==2){
            mostrartablaEmpleApe();
        }if(jcomOrdEmple.getSelectedIndex()==3){
            mostrartablaEmpleDni();
        }if(jcomOrdEmple.getSelectedIndex()==4){
            mostrartablaEmpleTipo();
        }
        
        
    }//GEN-LAST:event_jcomOrdEmpleItemStateChanged

    private void jcomFiltProducItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcomFiltProducItemStateChanged
        if(jcomFiltProduc.getSelectedIndex()==0){
            PanelFilhigi.setVisible(false);
            PanelFilComes.setVisible(false);
            PanelFilMake.setVisible(false);
        }if(jcomFiltProduc.getSelectedIndex()==1){
            PanelFilhigi.setVisible(true);
            PanelFilComes.setVisible(false);
            PanelFilMake.setVisible(false);
        }if(jcomFiltProduc.getSelectedIndex()==2){
            PanelFilhigi.setVisible(false);
            PanelFilComes.setVisible(true);
            PanelFilMake.setVisible(false);
        }if(jcomFiltProduc.getSelectedIndex()==3){
            PanelFilhigi.setVisible(false);
            PanelFilComes.setVisible(false);
            PanelFilMake.setVisible(true);
        }
    }//GEN-LAST:event_jcomFiltProducItemStateChanged

    private void jcomOrdHigiItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcomOrdHigiItemStateChanged
        if(jcomOrdHigi.getSelectedIndex()==0){
            mostrartabProdhigi();
        }if(jcomOrdHigi.getSelectedIndex()==1){
            mostrartabProdhigicod();
        }if(jcomOrdHigi.getSelectedIndex()==2){
            mostrartabProdhiginom();
        }if(jcomOrdHigi.getSelectedIndex()==3){
            mostrartabProdhigitipfab();
        }if(jcomOrdHigi.getSelectedIndex()==4){
            mostrartabProdhigiTip();
        }if(jcomOrdHigi.getSelectedIndex()==5){
            mostrartabProdhigicont();
        }if(jcomOrdHigi.getSelectedIndex()==6){
            mostrartabProdhigiprec();
        }if(jcomOrdHigi.getSelectedIndex()==7){
            mostrartabProdhigiStock();
        }if(jcomOrdHigi.getSelectedIndex()==8){
            mostrartabProdhigiruc();
        }
    }//GEN-LAST:event_jcomOrdHigiItemStateChanged

    private void jcomOrdComesItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcomOrdComesItemStateChanged
        if(jcomOrdComes.getSelectedIndex()==0){
            mostrartablaprocomes();
        }if(jcomOrdComes.getSelectedIndex()==1){
            mostrartablaprocomescod();
        }if(jcomOrdComes.getSelectedIndex()==2){
            mostrartablaprocomesnom();
        }if(jcomOrdComes.getSelectedIndex()==3){
            mostrartablaprocomesTipo();
        }if(jcomOrdComes.getSelectedIndex()==4){
            mostrartablaprocomesPrec();
        }if(jcomOrdComes.getSelectedIndex()==5){
            mostrartablaprocomesstock();
        }if(jcomOrdComes.getSelectedIndex()==6){
            mostrartablaprocomescadu();
        }if(jcomOrdComes.getSelectedIndex()==7){
            mostrartablaprocomesruc();
        }
    }//GEN-LAST:event_jcomOrdComesItemStateChanged

    private void jcomOrdMakeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcomOrdMakeItemStateChanged
    if(jcomOrdMake.getSelectedIndex()==0){
        mostrartablapromake();
    }if(jcomOrdMake.getSelectedIndex()==1){
        mostrartablapromakeCod();
    }if(jcomOrdMake.getSelectedIndex()==2){
        mostrartablapromakeNombre();
    }if(jcomOrdMake.getSelectedIndex()==3){
        mostrartablapromakePrec();
    }if(jcomOrdMake.getSelectedIndex()==4){
        mostrartablapromakeStock();
    }if(jcomOrdMake.getSelectedIndex()==5){
        mostrartablapromakeFab();
    }if(jcomOrdMake.getSelectedIndex()==6){
        mostrartablapromakeTipo();
    }if(jcomOrdMake.getSelectedIndex()==7){
        mostrartablapromakeTonos();
    }if(jcomOrdMake.getSelectedIndex()==8){
        mostrartablapromakeDig();
    }if(jcomOrdMake.getSelectedIndex()==9){
        mostrartablapromakeRuc();
    }
        
    }//GEN-LAST:event_jcomOrdMakeItemStateChanged

    private void jcomFiltProveItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcomFiltProveItemStateChanged
        if(jcomFiltProve.getSelectedIndex()==0){
            PanelFilProvInt.setVisible(false);
            PanelFilProvEx.setVisible(false);
        }if(jcomFiltProve.getSelectedIndex()==1){
            PanelFilProvInt.setVisible(true);
            PanelFilProvEx.setVisible(false);
        }if(jcomFiltProve.getSelectedIndex()==2){
            PanelFilProvInt.setVisible(false);
            PanelFilProvEx.setVisible(true);
        }
    }//GEN-LAST:event_jcomFiltProveItemStateChanged

    private void jcomOrdProvInItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcomOrdProvInItemStateChanged
        if(jcomOrdProvIn.getSelectedIndex()==0){
            mostrartabinet();
        }if(jcomOrdProvIn.getSelectedIndex()==1){
            mostrartabinetNom();
        }if(jcomOrdProvIn.getSelectedIndex()==2){
            mostrartabinetDNI();
        }if(jcomOrdProvIn.getSelectedIndex()==3){
            mostrartabinetAre();
        }
    }//GEN-LAST:event_jcomOrdProvInItemStateChanged

    private void jcomOrdProvExtItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcomOrdProvExtItemStateChanged
        if(jcomOrdProvExt.getSelectedIndex()==0){
            mostrartabExterno();
        }if(jcomOrdProvExt.getSelectedIndex()==1){
            mostrartabExternoNom();
        }if(jcomOrdProvExt.getSelectedIndex()==2){
            mostrartabExternoruc();
        }if(jcomOrdProvExt.getSelectedIndex()==3){
            mostrartabExternotelf();
        }if(jcomOrdProvExt.getSelectedIndex()==4){
            mostrartabExternoDirec();
        }if(jcomOrdProvExt.getSelectedIndex()==5){
            mostrartabExternoCor();
        }if(jcomOrdProvExt.getSelectedIndex()==6){
            mostrartabExternoAnio();
        }if(jcomOrdProvExt.getSelectedIndex()==7){
            mostrartabExternoGeren();
        }
    }//GEN-LAST:event_jcomOrdProvExtItemStateChanged

    private void jcomFiltSucurItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcomFiltSucurItemStateChanged
        if(jcomFiltSucur.getSelectedIndex()==0){
            PanelFilSucPri.setVisible(false);
            PanelFilSucPro.setVisible(false);
        }if(jcomFiltSucur.getSelectedIndex()==1){
            PanelFilSucPri.setVisible(true);
            PanelFilSucPro.setVisible(false);
        }if(jcomFiltSucur.getSelectedIndex()==2){
            PanelFilSucPri.setVisible(false);
            PanelFilSucPro.setVisible(true);
        }
    }//GEN-LAST:event_jcomFiltSucurItemStateChanged

    private void jcomOrdSucPriItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcomOrdSucPriItemStateChanged
        if(jcomOrdSucPri.getSelectedIndex()==0){
            mostrartablaSucPrin();
        }if(jcomOrdSucPri.getSelectedIndex()==1){
            mostrartablaSucPrinNum();
        }if(jcomOrdSucPri.getSelectedIndex()==2){
            mostrartablaSucPrinTelf();
        }if(jcomOrdSucPri.getSelectedIndex()==3){
            mostrartablaSucPrinDist();
        }if(jcomOrdSucPri.getSelectedIndex()==4){
            mostrartablaSucPrinDirec();
        }if(jcomOrdSucPri.getSelectedIndex()==5){
            mostrartablaSucPrinEnc();
        }if(jcomOrdSucPri.getSelectedIndex()==6){
            mostrartablaSucPrinDni();
        }
    }//GEN-LAST:event_jcomOrdSucPriItemStateChanged

    private void jcomOrdSucProvItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcomOrdSucProvItemStateChanged
        if(jcomOrdSucProv.getSelectedIndex()==0){
            mostrartablaSucProvin();
        }if(jcomOrdSucProv.getSelectedIndex()==1){
            mostrartablaSucProvinNum();
        }if(jcomOrdSucProv.getSelectedIndex()==2){
            mostrartablaSucProvintelf();
        }if(jcomOrdSucProv.getSelectedIndex()==3){
            mostrartablaSucProvinCodPro();
        }if(jcomOrdSucProv.getSelectedIndex()==4){
            mostrartablaSucProvinPro();
        }if(jcomOrdSucProv.getSelectedIndex()==5){
            mostrartablaSucProvinCiud();
        }if(jcomOrdSucProv.getSelectedIndex()==6){
            mostrartablaSucProvinDire();
        }if(jcomOrdSucProv.getSelectedIndex()==7){
            mostrartablaSucProvinEnca();
        }if(jcomOrdSucProv.getSelectedIndex()==8){
            mostrartablaSucProvinDni();
        }
        
        
    }//GEN-LAST:event_jcomOrdSucProvItemStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FramePrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FramePrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FramePrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FramePrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FramePrincipal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel PanelAd;
    private javax.swing.JPanel PanelComes;
    private javax.swing.JPanel PanelEm;
    private javax.swing.JPanel PanelFilComes;
    private javax.swing.JPanel PanelFilEmple;
    private javax.swing.JPanel PanelFilMake;
    private javax.swing.JPanel PanelFilProvEx;
    private javax.swing.JPanel PanelFilProvInt;
    private javax.swing.JPanel PanelFilSucPri;
    private javax.swing.JPanel PanelFilSucPro;
    private javax.swing.JPanel PanelFilhigi;
    private javax.swing.JPanel PanelHigiene;
    private javax.swing.JPanel PanelMake;
    private javax.swing.JPanel PanelPri;
    private javax.swing.JPanel PanelPrinPro;
    private javax.swing.JPanel PanelPrinSucursales;
    private javax.swing.JPanel PanelProvExter;
    private javax.swing.JPanel PanelProvInterno;
    private javax.swing.JPanel PanelSucPri;
    private javax.swing.JPanel PanelSucProv;
    private javax.swing.JPanel PaneleFiltroAd;
    private javax.swing.JPanel PanelprinProvedores;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnEditarEmple;
    private javax.swing.JButton btnEditarHigi;
    private javax.swing.JButton btnEditarProComes;
    private javax.swing.JButton btnEditarProMake;
    private javax.swing.JButton btnEditarProvExt;
    private javax.swing.JButton btnEditarProvInt;
    private javax.swing.JButton btnEditarSucPri;
    private javax.swing.JButton btnEditarSucPro;
    private javax.swing.JButton butEliEmp;
    private javax.swing.JButton butEliEmpAd;
    private javax.swing.JButton butEliProdComes;
    private javax.swing.JButton butEliProdHigi;
    private javax.swing.JButton butEliProdMake;
    private javax.swing.JButton butEliProvExt;
    private javax.swing.JButton butEliProvInt;
    private javax.swing.JButton butEliSucPri;
    private javax.swing.JButton butEliSucpro;
    private javax.swing.JComboBox<String> cmbProductos;
    private javax.swing.JComboBox<String> cmbTipoProv;
    private javax.swing.JComboBox<String> cmbtipoSucursal;
    private javax.swing.JComboBox<String> cmtipoemplea;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton16;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel54;
    private javax.swing.JLabel jLabel55;
    private javax.swing.JLabel jLabel56;
    private javax.swing.JLabel jLabel57;
    private javax.swing.JLabel jLabel58;
    private javax.swing.JLabel jLabel59;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel60;
    private javax.swing.JLabel jLabel61;
    private javax.swing.JLabel jLabel62;
    private javax.swing.JLabel jLabel63;
    private javax.swing.JLabel jLabel64;
    private javax.swing.JLabel jLabel65;
    private javax.swing.JLabel jLabel66;
    private javax.swing.JLabel jLabel67;
    private javax.swing.JLabel jLabel68;
    private javax.swing.JLabel jLabel69;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel70;
    private javax.swing.JLabel jLabel71;
    private javax.swing.JLabel jLabel72;
    private javax.swing.JLabel jLabel73;
    private javax.swing.JLabel jLabel74;
    private javax.swing.JLabel jLabel75;
    private javax.swing.JLabel jLabel76;
    private javax.swing.JLabel jLabel77;
    private javax.swing.JLabel jLabel78;
    private javax.swing.JLabel jLabel79;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel22;
    private javax.swing.JPanel jPanel23;
    private javax.swing.JPanel jPanel24;
    private javax.swing.JPanel jPanel25;
    private javax.swing.JPanel jPanel26;
    private javax.swing.JPanel jPanel27;
    private javax.swing.JPanel jPanel28;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JSeparator jSeparator10;
    private javax.swing.JSeparator jSeparator11;
    private javax.swing.JSeparator jSeparator12;
    private javax.swing.JSeparator jSeparator13;
    private javax.swing.JSeparator jSeparator14;
    private javax.swing.JSeparator jSeparator15;
    private javax.swing.JSeparator jSeparator16;
    private javax.swing.JSeparator jSeparator17;
    private javax.swing.JSeparator jSeparator18;
    private javax.swing.JSeparator jSeparator19;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator20;
    private javax.swing.JSeparator jSeparator21;
    private javax.swing.JSeparator jSeparator22;
    private javax.swing.JSeparator jSeparator24;
    private javax.swing.JSeparator jSeparator25;
    private javax.swing.JSeparator jSeparator26;
    private javax.swing.JSeparator jSeparator27;
    private javax.swing.JSeparator jSeparator28;
    private javax.swing.JSeparator jSeparator29;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator30;
    private javax.swing.JSeparator jSeparator31;
    private javax.swing.JSeparator jSeparator32;
    private javax.swing.JSeparator jSeparator33;
    private javax.swing.JSeparator jSeparator34;
    private javax.swing.JSeparator jSeparator35;
    private javax.swing.JSeparator jSeparator36;
    private javax.swing.JSeparator jSeparator37;
    private javax.swing.JSeparator jSeparator39;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator40;
    private javax.swing.JSeparator jSeparator41;
    private javax.swing.JSeparator jSeparator42;
    private javax.swing.JSeparator jSeparator43;
    private javax.swing.JSeparator jSeparator44;
    private javax.swing.JSeparator jSeparator45;
    private javax.swing.JSeparator jSeparator46;
    private javax.swing.JSeparator jSeparator47;
    private javax.swing.JSeparator jSeparator48;
    private javax.swing.JSeparator jSeparator49;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator50;
    private javax.swing.JSeparator jSeparator51;
    private javax.swing.JSeparator jSeparator52;
    private javax.swing.JSeparator jSeparator53;
    private javax.swing.JSeparator jSeparator54;
    private javax.swing.JSeparator jSeparator55;
    private javax.swing.JSeparator jSeparator56;
    private javax.swing.JSeparator jSeparator57;
    private javax.swing.JSeparator jSeparator58;
    private javax.swing.JSeparator jSeparator59;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JSeparator jSeparator60;
    private javax.swing.JSeparator jSeparator61;
    private javax.swing.JSeparator jSeparator62;
    private javax.swing.JSeparator jSeparator63;
    private javax.swing.JSeparator jSeparator64;
    private javax.swing.JSeparator jSeparator65;
    private javax.swing.JSeparator jSeparator66;
    private javax.swing.JSeparator jSeparator7;
    private javax.swing.JSeparator jSeparator8;
    private javax.swing.JSeparator jSeparator9;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTabbedPane jTabbedPane3;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JComboBox<String> jcomFiltEmple;
    private javax.swing.JComboBox<String> jcomFiltProduc;
    private javax.swing.JComboBox<String> jcomFiltProve;
    private javax.swing.JComboBox<String> jcomFiltSucur;
    private javax.swing.JComboBox<String> jcomOrdComes;
    private javax.swing.JComboBox<String> jcomOrdEmple;
    private javax.swing.JComboBox<String> jcomOrdEmplead;
    private javax.swing.JComboBox<String> jcomOrdHigi;
    private javax.swing.JComboBox<String> jcomOrdMake;
    private javax.swing.JComboBox<String> jcomOrdProvExt;
    private javax.swing.JComboBox<String> jcomOrdProvIn;
    private javax.swing.JComboBox<String> jcomOrdSucPri;
    private javax.swing.JComboBox<String> jcomOrdSucProv;
    private javax.swing.JComboBox<String> jcombTipoProComes;
    private javax.swing.JComboBox<String> jcomboAreaProvInt;
    private javax.swing.JComboBox<String> jcomboEmpleadSuel;
    private javax.swing.JComboBox<String> jcomboEmpleadoadAfi;
    private javax.swing.JComboBox<String> jcomboTipoEm;
    private javax.swing.JComboBox<String> jcomboTipoFaProMake;
    private javax.swing.JComboBox<String> jcomboTipoFabHigi;
    private javax.swing.JTable tblOrdEmpAd;
    private javax.swing.JTable tblordEmple;
    private javax.swing.JTable tblordProdComes;
    private javax.swing.JTable tblordProdHigi;
    private javax.swing.JTable tblordProdMake;
    private javax.swing.JTable tblordProvEx;
    private javax.swing.JTable tblordProvInt;
    private javax.swing.JTable tblordSucPri;
    private javax.swing.JTable tblordSucProv;
    private javax.swing.JTable tblusuario;
    private javax.swing.JTextField txtBusApeAd;
    private javax.swing.JTextField txtBusDistSucPri;
    private javax.swing.JTextField txtBusEncSucPri;
    private javax.swing.JTextField txtBusNamAd;
    private javax.swing.JTextField txtBusNamProvint;
    private javax.swing.JTextField txtBuscAniAd;
    private javax.swing.JTextField txtBuscAniProvEx;
    private javax.swing.JTextField txtBuscCadComes;
    private javax.swing.JTextField txtBuscCiudproSucProv;
    private javax.swing.JTextField txtBuscCodComes;
    private javax.swing.JTextField txtBuscCodHigi;
    private javax.swing.JTextField txtBuscCodMake;
    private javax.swing.JTextField txtBuscCodProHigi;
    private javax.swing.JTextField txtBuscCodProMake;
    private javax.swing.JTextField txtBuscCodProSucProv;
    private javax.swing.JTextField txtBuscCodProdComes;
    private javax.swing.JTextField txtBuscContHigi;
    private javax.swing.JTextField txtBuscCorrProEx;
    private javax.swing.JTextField txtBuscDNISucProv;
    private javax.swing.JTextField txtBuscDigparakMake;
    private javax.swing.JTextField txtBuscDirProEx;
    private javax.swing.JTextField txtBuscDirSucPri;
    private javax.swing.JTextField txtBuscDireproSucProv;
    private javax.swing.JTextField txtBuscDniAd;
    private javax.swing.JTextField txtBuscDniProvInt;
    private javax.swing.JTextField txtBuscDniSucPri;
    private javax.swing.JTextField txtBuscEncSucProv;
    private javax.swing.JTextField txtBuscGerProEX;
    private javax.swing.JTextField txtBuscNSucPri;
    private javax.swing.JTextField txtBuscNSucProv;
    private javax.swing.JTextField txtBuscNomComes;
    private javax.swing.JTextField txtBuscNomEmProvEx;
    private javax.swing.JTextField txtBuscNomHigi;
    private javax.swing.JTextField txtBuscNomMake;
    private javax.swing.JTextField txtBuscPreMake;
    private javax.swing.JTextField txtBuscPrecComes;
    private javax.swing.JTextField txtBuscPrecHigi;
    private javax.swing.JTextField txtBuscProvSucProv;
    private javax.swing.JTextField txtBuscRucProvEx;
    private javax.swing.JTextField txtBuscStockComes;
    private javax.swing.JTextField txtBuscStockHigi;
    private javax.swing.JTextField txtBuscStockMake;
    private javax.swing.JTextField txtBuscTelSucProv;
    private javax.swing.JTextField txtBuscTelfProvEx;
    private javax.swing.JTextField txtBuscTipoHigi;
    private javax.swing.JTextField txtBuscTipoMake;
    private javax.swing.JTextField txtBuscTonosMake;
    private javax.swing.JTextField txtBuscapeEm;
    private javax.swing.JTextField txtBusdniEm;
    private javax.swing.JTextField txtBusnameEm;
    private javax.swing.JTextField txtBustelfSucPri;
    // End of variables declaration//GEN-END:variables
}
