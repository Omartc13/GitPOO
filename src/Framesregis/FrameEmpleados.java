package Framesregis;

import ArrayList.IntDAdministradorArray;
import Clases.IntDAdministrador;
import Clases.IntDEmpleado;
import ArrayList.IntEmpleadoArray;
import conexionbd.Conexion;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author yosse
 */
public class FrameEmpleados extends javax.swing.JFrame {
    
    DefaultTableModel tadmin = new DefaultTableModel();
    DefaultTableModel temple = new DefaultTableModel();
    
    IntEmpleadoArray empleadoArray=new IntEmpleadoArray();
    IntDAdministradorArray administradorArray=  new IntDAdministradorArray();
    
    Conexion db= new Conexion();
    Connection cn=  db.conectar();
    
    
    public FrameEmpleados() {
        initComponents();
        setLocationRelativeTo(null);
        db.conectar();
        mostrartablaadmin();
        mostrartablaemple();
       
       
    
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        txtApellidos = new javax.swing.JTextField();
        txtDNI = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        cmbAfil = new javax.swing.JComboBox<>();
        jLabel11 = new javax.swing.JLabel();
        txtAño = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblAdministrador = new javax.swing.JTable();
        btnLimp = new javax.swing.JButton();
        btnAgregar = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        cmbSueldo = new javax.swing.JComboBox<>();
        jTextField1 = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        cmbtipo = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtapellidos = new javax.swing.JTextField();
        txtnombre = new javax.swing.JTextField();
        txtdni = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblEmpleado = new javax.swing.JTable();
        elimTabla = new javax.swing.JButton();
        agregar = new javax.swing.JButton();
        SALIR = new javax.swing.JButton();
        jTextField2 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Empleados");

        jTabbedPane1.setBackground(new java.awt.Color(246, 241, 241));

        jPanel3.setBackground(new java.awt.Color(246, 241, 241));
        jPanel3.setForeground(new java.awt.Color(246, 241, 241));

        jPanel2.setBackground(new java.awt.Color(153, 217, 234));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel7.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        jLabel7.setText("Nombres: ");
        jPanel2.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(55, 76, -1, -1));

        jLabel8.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        jLabel8.setText("Apellidos:");
        jPanel2.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(55, 116, -1, -1));

        jLabel9.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        jLabel9.setText("DNI:");
        jPanel2.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(55, 156, -1, -1));

        txtNombre.setBackground(new java.awt.Color(246, 241, 241));
        txtNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNombreActionPerformed(evt);
            }
        });
        txtNombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNombreKeyTyped(evt);
            }
        });
        jPanel2.add(txtNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(143, 74, 228, -1));

        txtApellidos.setBackground(new java.awt.Color(246, 241, 241));
        txtApellidos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtApellidosKeyTyped(evt);
            }
        });
        jPanel2.add(txtApellidos, new org.netbeans.lib.awtextra.AbsoluteConstraints(142, 114, 229, -1));

        txtDNI.setBackground(new java.awt.Color(246, 241, 241));
        txtDNI.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtDNIKeyTyped(evt);
            }
        });
        jPanel2.add(txtDNI, new org.netbeans.lib.awtextra.AbsoluteConstraints(142, 154, 230, -1));

        jLabel10.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        jLabel10.setText("Afiliación:");
        jPanel2.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(426, 76, -1, -1));

        cmbAfil.setBackground(new java.awt.Color(246, 241, 241));
        cmbAfil.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--Seleccionar--", "AFP", "ONP", "Otros" }));
        cmbAfil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbAfilActionPerformed(evt);
            }
        });
        jPanel2.add(cmbAfil, new org.netbeans.lib.awtextra.AbsoluteConstraints(551, 74, 130, -1));

        jLabel11.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        jLabel11.setText("Año de ingreso:");
        jPanel2.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(426, 116, -1, -1));

        txtAño.setBackground(new java.awt.Color(246, 241, 241));
        txtAño.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtAñoKeyTyped(evt);
            }
        });
        jPanel2.add(txtAño, new org.netbeans.lib.awtextra.AbsoluteConstraints(551, 114, 130, -1));

        tblAdministrador.setBackground(new java.awt.Color(246, 241, 241));
        tblAdministrador.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Nombre", "Apellido", "DNI", "Año Ingreso", "Sueldo", "Afiliacion", "Sueldo Bruto"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblAdministrador);

        jPanel2.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(55, 197, 690, 257));

        btnLimp.setBackground(new java.awt.Color(255, 255, 255));
        btnLimp.setText("LIMPIAR");
        btnLimp.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnLimp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpActionPerformed(evt);
            }
        });
        jPanel2.add(btnLimp, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 470, -1, 30));

        btnAgregar.setBackground(new java.awt.Color(0, 162, 232));
        btnAgregar.setText("AGREGAR");
        btnAgregar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });
        jPanel2.add(btnAgregar, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 470, -1, 30));

        jButton1.setBackground(new java.awt.Color(255, 0, 0));
        jButton1.setText("VOLVER");
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 470, -1, 30));

        jLabel12.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        jLabel12.setText("Sueldo:");
        jPanel2.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(426, 156, 107, -1));

        cmbSueldo.setBackground(new java.awt.Color(246, 241, 241));
        cmbSueldo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--Seleccionar--", "2000", "3000", "4000", "5000", "6000", "7000", "8000", " " }));
        cmbSueldo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbSueldoActionPerformed(evt);
            }
        });
        jPanel2.add(cmbSueldo, new org.netbeans.lib.awtextra.AbsoluteConstraints(551, 154, 130, -1));

        jTextField1.setEditable(false);
        jTextField1.setBackground(new java.awt.Color(7, 62, 91));
        jTextField1.setFont(new java.awt.Font("Stencil", 2, 30)); // NOI18N
        jTextField1.setForeground(new java.awt.Color(246, 241, 241));
        jTextField1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField1.setText("REGISTROS DE ADMINISTRADORES DE LA EMPRESA");
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        jPanel2.add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 810, 56));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 810, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 536, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 536, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        jTabbedPane1.addTab("Administrador", jPanel3);

        jPanel1.setBackground(new java.awt.Color(153, 217, 234));
        jPanel1.setPreferredSize(new java.awt.Dimension(500, 375));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        jLabel1.setText("Nombres: ");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 80, -1, 20));

        jLabel2.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        jLabel2.setText("Apellidos:");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 110, -1, 30));

        jLabel3.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        jLabel3.setText("DNI:");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 120, -1, -1));

        cmbtipo.setBackground(new java.awt.Color(246, 241, 241));
        cmbtipo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--Seleccionar--", "Cajero", "Limpieza", "Seguridad", "Asistente" }));
        cmbtipo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbtipoActionPerformed(evt);
            }
        });
        jPanel1.add(cmbtipo, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 80, 130, -1));
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(507, 84, -1, -1));

        jLabel5.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        jLabel5.setText("Tipo de trabajador:");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 80, -1, -1));

        txtapellidos.setBackground(new java.awt.Color(246, 241, 241));
        txtapellidos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtapellidosKeyTyped(evt);
            }
        });
        jPanel1.add(txtapellidos, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 120, 251, -1));

        txtnombre.setBackground(new java.awt.Color(246, 241, 241));
        txtnombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtnombreKeyTyped(evt);
            }
        });
        jPanel1.add(txtnombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 80, 251, -1));

        txtdni.setBackground(new java.awt.Color(246, 241, 241));
        txtdni.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtdniKeyTyped(evt);
            }
        });
        jPanel1.add(txtdni, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 120, 130, -1));

        tblEmpleado.setBackground(new java.awt.Color(246, 241, 241));
        tblEmpleado.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "NOMBRES", "APELLIDOS", "DNI", "TIPO", "SUELDO INICIAL", "SUELDO BRUTO"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblEmpleado);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(43, 157, 703, 287));

        elimTabla.setBackground(new java.awt.Color(255, 255, 255));
        elimTabla.setText("LIMPIAR");
        elimTabla.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        elimTabla.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                elimTablaActionPerformed(evt);
            }
        });
        jPanel1.add(elimTabla, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 460, -1, 39));

        agregar.setBackground(new java.awt.Color(0, 162, 232));
        agregar.setText("AGREGAR");
        agregar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        agregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregarActionPerformed(evt);
            }
        });
        jPanel1.add(agregar, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 460, -1, 39));

        SALIR.setBackground(new java.awt.Color(255, 0, 0));
        SALIR.setText("VOLVER");
        SALIR.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        SALIR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SALIRActionPerformed(evt);
            }
        });
        jPanel1.add(SALIR, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 460, -1, 39));

        jTextField2.setEditable(false);
        jTextField2.setBackground(new java.awt.Color(7, 62, 91));
        jTextField2.setFont(new java.awt.Font("Stencil", 2, 36)); // NOI18N
        jTextField2.setForeground(new java.awt.Color(246, 241, 241));
        jTextField2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField2.setText("REGISTROS DE EMPLEADOS DE LA EMPRESA");
        jPanel1.add(jTextField2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 810, 60));

        jTabbedPane1.addTab("Empleado", jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

 
    
    
    private void cmbtipoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbtipoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbtipoActionPerformed

    private void elimTablaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_elimTablaActionPerformed
        txtnombre.setText("");
        txtapellidos.setText("");
        txtdni.setText("");
        cmbtipo.setSelectedIndex(0);
    }//GEN-LAST:event_elimTablaActionPerformed
    
    public void mostrartablaemple(){
        temple= new DefaultTableModel();
        temple.addColumn("Nombre");
        temple.addColumn("Apellido");
        temple.addColumn("Dni");
        temple.addColumn("Tipo");
        temple.addColumn("Sueldo Inicial");
        temple.addColumn("Sueldo Bruto");
        tblEmpleado.setModel(temple);
        
        String sql="Select * From empleado";
        String datos []= new String [6];
        Statement st;
        
        try{
            st= cn.createStatement();
            ResultSet rs=st.executeQuery(sql);
            while(rs.next()){
                
                String tipo=rs.getNString("Tipo");
                
                IntDEmpleado em= new IntDEmpleado(tipo);
                int sueldoIni=em.sueldoInicial();
                double sueldobruto=em.sueldoBruto();
                
                
                datos[0]=rs.getString(1);
                datos[1]=rs.getString(2);
                datos[2]=rs.getString(3);
                datos[3]=rs.getString(4);
                datos[4]=String.valueOf(sueldoIni);
                datos[5]=String.valueOf(sueldobruto);
                temple.addRow(datos);
            }
            tblEmpleado.setModel(temple);
        }catch(SQLException ex){
            Logger.getLogger(FrameProductos.class.getName()).log(Level.SEVERE,null,ex);
        }
        
    }
    
    private void agregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregarActionPerformed
    int dni = 0;
    int faltas = 0;
    
    boolean datosValidos = true;
    
     if (txtnombre.getText().isEmpty()||txtapellidos.getText().isEmpty()||txtdni.getText().isEmpty()) {
        JOptionPane.showMessageDialog(null, "Existen campos incompletos", "Campos incompletos", JOptionPane.ERROR_MESSAGE);
        datosValidos = false;} 
     else {
    
    String nombre = txtnombre.getText();
    if (!validarLetras(txtnombre.getText())) 
    {JOptionPane.showMessageDialog(null, "Error al ingresar dato NOMBRE");
    datosValidos = false;}
    
    String apellido = txtapellidos.getText();     
    if (!validarLetras(txtapellidos.getText())) 
    {JOptionPane.showMessageDialog(null, "Error al ingresar dato APELLIDO");
    datosValidos = false;}

    try {
        dni = Integer.parseInt(txtdni.getText());
        if (txtdni.getText().length() != 8) {
        JOptionPane.showMessageDialog(null, "El DNI debe tener 8 dígitos");
        datosValidos = false; // Marcar los datos como no válidos
        } else {
        dni = Integer.parseInt(txtdni.getText());
        }
        } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(null, "Ingrese un número válido para DNI");
        datosValidos = false; // Marcar los datos como no válidos
        }
        
    
        String  tipo = cmbtipo.getSelectedItem().toString();
        
        //Obtener datos para calculo de sueldo inicial y sueldo bruto
        IntDEmpleado em= new IntDEmpleado(tipo);
        int sueldoIni=em.sueldoInicial();
        double sueldobruto=em.sueldoBruto();
        
    if (datosValidos) {
        IntDEmpleado emp = new IntDEmpleado(nombre, apellido, dni, tipo);
        empleadoArray.agregarEmpleado(emp);
        for (int i = 0; i < empleadoArray.tamañoArreglo(); i++) {
            Object[] fila={
            empleadoArray.obtener(i).getNombre(),
            empleadoArray.obtener(i).getApellido_Completo(),
            empleadoArray.obtener(i).getDNI(),
            empleadoArray.obtener(i).getTipo(),
            sueldoIni,
            sueldobruto
        };
            temple.addRow(fila);
        
        }
        //agregar datos a la BDD
            try {
                PreparedStatement pps=  cn.prepareStatement("INSERT INTO empleado(Nombre,Apellido,DNI,Tipo) VALUES(?,?,?,?)");
                pps.setString(1, nombre);
                pps.setString(2, apellido);
                pps.setInt(3, dni);
                pps.setString(4, tipo);
                pps.executeUpdate();
                JOptionPane.showMessageDialog(null, "Empleado Agregado");
            } catch (SQLException ex) {
                if(ex.getErrorCode()==1062){
                mostrartablaemple();
                JOptionPane.showMessageDialog(null, "Error: DNI Ya existente");
                }else{
                    Logger.getLogger(FrameProductos.class.getName()).log(Level.SEVERE, null, ex);
                }
          }
         }
        }
    }//GEN-LAST:event_agregarActionPerformed
    
    public static boolean validarLetras(String datos){
        return datos.matches("[a-zA-Z ]*");
    }
    private void cmbAfilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbAfilActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbAfilActionPerformed

    private void btnLimpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpActionPerformed
        txtNombre.setText("");
        txtApellidos.setText("");
        txtDNI.setText("");
        txtAño.setText("");
        cmbAfil.setSelectedIndex(0);
        cmbSueldo.setSelectedIndex(0);
    }//GEN-LAST:event_btnLimpActionPerformed
    
    public void mostrartablaadmin(){
        tadmin = new DefaultTableModel();
        tadmin.addColumn("Nombre");
        tadmin.addColumn("Apellido");
        tadmin.addColumn("DNI");
        tadmin.addColumn("Año");
        tadmin.addColumn("Sueldo");
        tadmin.addColumn("Afiliación");
        tadmin.addColumn("SueldoBruto");
        tblAdministrador.setModel(tadmin);
        
        String sql="Select * From empleadoad";
        String datos [] = new String [7];
        Statement st;
        
        try{
            st= cn.createStatement();
            ResultSet rs=st.executeQuery(sql);
            while(rs.next()){
                
                //Pasando datos para el calculo del SB
                int sueldo=rs.getInt("Sueldo");
                String afili=rs.getString("Afiliacion");
                IntDAdministrador ad = new IntDAdministrador(sueldo, afili);
                double sueldob=ad.sueldoBruto();
                
                
                datos[0]=rs.getString(1);
                datos[1]=rs.getString(2);
                datos[2]=rs.getString(3);
                datos[3]=rs.getString(4);
                datos[4]=rs.getString(5);
                datos[5]=rs.getString(6);
                datos[6]=String.valueOf(sueldob);
                tadmin.addRow(datos);
            }
            tblAdministrador.setModel(tadmin);
        }catch(SQLException ex){
            Logger.getLogger(FrameProductos.class.getName()).log(Level.SEVERE,null,ex);
        }
        
        
    }
    
    
    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
    int dni = 0;
    int año = 0 ;  
    boolean datosValidos = true;

        if(txtNombre.getText().trim().isEmpty() || txtApellidos.getText().trim().isEmpty()|| txtDNI.getText().trim().isEmpty()|| txtAño.getText().trim().isEmpty()|| cmbSueldo.getSelectedIndex()==0 || cmbAfil.getSelectedIndex()==0){     
        JOptionPane.showMessageDialog(null, "Complete los campos");
        datosValidos = false;}
        else{  
        String nombre = txtNombre.getText();
        if (!validarLetras(txtNombre.getText())) 
        {JOptionPane.showMessageDialog(null, "Error al ingresar dato NOMBRE");
        datosValidos = false;}
        
        String apellido = txtApellidos.getText();
        if (!validarLetras(txtApellidos.getText())) 
        {JOptionPane.showMessageDialog(null, "Error al ingresar dato APELLIDO");
        datosValidos = false;}
        
        try {
        dni = Integer.parseInt(txtDNI.getText());
        if (txtDNI.getText().length() != 8) {
        JOptionPane.showMessageDialog(null, "El DNI debe tener 8 dígitos");
        datosValidos = false; // Marcar los datos como no válidos
        } else {
        dni = Integer.parseInt(txtDNI.getText());
        }
        } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(null, "Ingrese un número válido para DNI");
        datosValidos = false; // Marcar los datos como no válidos
        }

       
        try {
        año = Integer.parseInt(txtAño.getText());
        if (txtAño.getText().length() != 4) {
        JOptionPane.showMessageDialog(null, "El AÑO debe tener 4 dígitos");
        datosValidos = false; // Marcar los datos como no válidos
        } else {
        año = Integer.parseInt(txtAño.getText());
        }
        } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(null, "Ingrese un número válido para AÑO DE INGRESO");
        datosValidos = false; // Marcar los datos como no válidos
        }
        
        int sueldo = Integer.parseInt(cmbSueldo.getSelectedItem().toString());
        String afiliacion = cmbAfil.getSelectedItem().toString();
        
        
                //Obtener variables para el calculo del sueldo bruto
                IntDAdministrador ad = new IntDAdministrador(sueldo, afiliacion);
                double sueldobruto=ad.sueldoBruto();
        
        if (datosValidos) {
        IntDAdministrador adm = new IntDAdministrador(nombre, apellido, dni, año, sueldo, afiliacion);
        administradorArray.agregarEmpleado(adm);
        for (int i = 0; i < administradorArray.tamañoArreglo(); i++) {
            Object[] fila={
            administradorArray.obtener(i).getNombre(),
            administradorArray.obtener(i).getApellido_Completo(),
            administradorArray.obtener(i).getDNI(),
            administradorArray.obtener(i).getAño(),
            administradorArray.obtener(i).getSueldo(),
            administradorArray.obtener(i).getAfiliacion(),
            sueldobruto
                    
        };
            tadmin.addRow(fila);
        
        }
        //agregar datos a la BDD
            try {
                PreparedStatement pps=  cn.prepareStatement("INSERT INTO empleadoad(Nombre,Apellido,DNI,AnioIng,Sueldo,Afiliacion) VALUES(?,?,?,?,?,?)");
                pps.setString(1, nombre);
                pps.setString(2, apellido);
                pps.setInt(3, dni);
                pps.setInt(4, año);
                pps.setInt(5, sueldo);
                pps.setString(6, afiliacion);
                pps.executeUpdate();
                JOptionPane.showMessageDialog(null, "Administrador Agregado");
            } catch (SQLException ex) {
                if (ex.getErrorCode() == 1062) {
                mostrartablaadmin();
                JOptionPane.showMessageDialog(null, "Error: DNI Ya existente");
               }else{
                    Logger.getLogger(FrameProductos.class.getName()).log(Level.SEVERE, null, ex); 
                }
              }
             }
            }
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void txtNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNombreActionPerformed
    
    }//GEN-LAST:event_txtNombreActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
   FramePrincipal abrir = new FramePrincipal();
   abrir.setVisible(true);
   this.setVisible(false);       
    }//GEN-LAST:event_jButton1ActionPerformed

    private void cmbSueldoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbSueldoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbSueldoActionPerformed

    private void txtDNIKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDNIKeyTyped
        
        if(txtDNI.getText().length() >=8)
        {
            evt.consume();
        } 
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDNIKeyTyped

    private void txtAñoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAñoKeyTyped

        if(txtAño.getText().length() >=4)
        {
            evt.consume();
        } 
            ;              // TODO add your handling code here:
    }//GEN-LAST:event_txtAñoKeyTyped

    private void txtNombreKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombreKeyTyped
      // TODO add your handling code here:
    }//GEN-LAST:event_txtNombreKeyTyped

    private void txtApellidosKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtApellidosKeyTyped
   // TODO add your handling code here:
    }//GEN-LAST:event_txtApellidosKeyTyped

    private void txtnombreKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtnombreKeyTyped

    }//GEN-LAST:event_txtnombreKeyTyped

    private void txtapellidosKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtapellidosKeyTyped

    }//GEN-LAST:event_txtapellidosKeyTyped

    private void txtdniKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtdniKeyTyped

        if(txtdni.getText().length() >=8)
        {
            evt.consume();
        } // TODO add your handling code here:
    }//GEN-LAST:event_txtdniKeyTyped

    private void SALIRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SALIRActionPerformed
   FramePrincipal abrir = new FramePrincipal();
   abrir.setVisible(true);
   this.setVisible(false);               // TODO add your handling code here:
    }//GEN-LAST:event_SALIRActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrameEmpleados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrameEmpleados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrameEmpleados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrameEmpleados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrameEmpleados().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton SALIR;
    private javax.swing.JButton agregar;
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnLimp;
    private javax.swing.JComboBox<String> cmbAfil;
    private javax.swing.JComboBox<String> cmbSueldo;
    private javax.swing.JComboBox<String> cmbtipo;
    private javax.swing.JButton elimTabla;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTable tblAdministrador;
    private javax.swing.JTable tblEmpleado;
    private javax.swing.JTextField txtApellidos;
    private javax.swing.JTextField txtAño;
    private javax.swing.JTextField txtDNI;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtapellidos;
    private javax.swing.JTextField txtdni;
    private javax.swing.JTextField txtnombre;
    // End of variables declaration//GEN-END:variables



}
